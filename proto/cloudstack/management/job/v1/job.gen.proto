edition = "2023";

package cloudstack.management.job.v1;

import "cloudstack/annotations/annotations.proto";
import "cloudstack/validate/validate.proto";
import "google/protobuf/descriptor.proto";

// JobService provides operations for managing Jobs
service JobService {
	option (annotations.service).scope = Scope_USER;

	// ListAsyncJobs Lists all pending asynchronous jobs for the account.
	rpc ListAsyncJobs(ListAsyncJobsRequest) returns (ListAsyncJobsResponse) {}

	// QueryAsyncJobResult Retrieves the current status of asynchronous job.
	rpc QueryAsyncJobResult(QueryAsyncJobResultRequest) returns (QueryAsyncJobResultResponse) {}
}

// ListAsyncJobsRequest represents the parameters for lists all pending asynchronous jobs for the account.
message ListAsyncJobsRequest {
	// The start date of the async job (use format "yyyy-MM-dd'T'HH:mm:ss'+'SSSS")
	string start_date = 1;

	// The id of the management server
	int64 management_server_id = 2;

	// list resources by account. Must be used with the domainId parameter.
	string account_name = 3 [
		(validate.field).cel = {
			id:         "account_name_with_domain_id",
			expression: "!has(account_name) || has(domain_id)",
			message:    "account_name must be used with domain_id parameter"
		}
	];

	// If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false. Resources dedicated to a project are listed only if using the projectid parameter.
	bool list_all = 4 [
		features.field_presence = EXPLICIT
	];

	// list only resources belonging to the domain specified
	int64 domain_id = 5;

	// defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.
	bool recursive = 6 [
		features.field_presence = EXPLICIT
	];

	// List by keyword
	string keyword = 7;

	//
	int32 page = 8;

	//
	int32 page_size = 9;

	//
	string response_type = 10;
}

// ListAsyncJobsResponse represents the response from lists all pending asynchronous jobs for the account.
message ListAsyncJobsResponse {
	option (validate.message).disabled = false;
	// The list of AsyncJobs
	repeated AsyncJob items = 1;

	// The total count of AsyncJobs
	int32 total_count = 2;
}

// QueryAsyncJobResultRequest represents the parameters for retrieves the current status of asynchronous job.
message QueryAsyncJobResultRequest {
	// the ID of the asynchronous job
	int64 id = 1 [
		(validate.field).required = true
	];

	//
	string response_type = 2;
}

// QueryAsyncJobResultResponse represents the response from retrieves the current status of asynchronous job.
message QueryAsyncJobResultResponse {
	// The Result
	Result result = 1;
}

// AsyncJob represents a AsyncJob Item
message AsyncJob {
	// The ID of the AsyncJob
	string id = 1 [
		(validate.field).string.uuid = true
	];
	// The name of the AsyncJob
	string name = 2;
	// The display name of the AsyncJob
	string display_name = 3;
	// The description of the AsyncJob
	string description = 4;
	// The date this entity was created
	string created = 5;
}

// Success represents a Success Operation Response
message Success {
	// true if operation is executed successfully
	bool success = 1;
	// any text associated with the success or failure
	string display_text = 2;
}

// Item represents a generic item in a list response
message Item {
	// The ID of the item
	string id = 1 [
		(validate.field).string.uuid = true
	];

	// The name of the item
	string name = 2;

	// The display name of the item
	string display_name = 3;

	// The description of the item
	string description = 4;

	// The account ID the item belongs to
	string account_id = 5 [
		(validate.field).string.uuid = true
	];

	// The domain ID the item belongs to
	string domain_id = 6 [
		(validate.field).string.uuid = true
	];

	// The domain name the item belongs to
	string domain = 7;

	// The project ID the item belongs to
	string project_id = 8 [
		(validate.field).string.uuid = true
	];

	// The project name the item belongs to
	string project = 9;

	// The date the item was created
	string created = 10;

	// The state of the item
	string state = 11;

	// Additional fields returned by the API
	map<string, string> details = 12;
}

// Result represents a generic operation result
message Result {
	// Whether the operation was successful
	bool success = 1;

	// Any text associated with the success or failure
	string display_text = 2;

	// The ID of the resource affected by the operation
	string id = 3 [
		(validate.field).string.uuid = true
	];

	// The job ID for an async operation
	string job_id = 4 [
		(validate.field).string.uuid = true
	];

	// The status of the job
	string job_status = 5;
}
