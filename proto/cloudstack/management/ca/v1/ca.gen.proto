edition = "2023";

package cloudstack.management.ca.v1;

import "cloudstack/annotations/annotations.proto";
import "cloudstack/validate/validate.proto";
import "google/protobuf/descriptor.proto";

// CaService provides operations for managing Cas
service CaService {
	option (annotations.service).scope = Scope_USER;

	// ListCaCertificate Lists the CA public certificate(s) as support by the configured/provided CA plugin
	rpc ListCaCertificate(ListCaCertificateRequest) returns (ListCaCertificateResponse) {}

	// ListCAProviders Lists available certificate authority providers in CloudStack
	rpc ListCAProviders(ListCAProvidersRequest) returns (ListCAProvidersResponse) {}

	// ProvisionCertificate Issues and propagates client certificate on a connected host/agent using configured CA plugin
	rpc ProvisionCertificate(ProvisionCertificateRequest) returns (ProvisionCertificateResponse) {}

	// RevokeCertificate Revokes certificate using configured CA plugin
	rpc RevokeCertificate(RevokeCertificateRequest) returns (RevokeCertificateResponse) {}

	// IssueCertificate Issues a client certificate using configured or provided CA plugin
	rpc IssueCertificate(IssueCertificateRequest) returns (IssueCertificateResponse) {}
}

// ListCaCertificateRequest represents the parameters for lists the ca public certificate(s) as support by the configured/provided ca plugin
message ListCaCertificateRequest {
	// Name of the CA service provider, otherwise the default configured provider plugin will be used
	string provider = 1 [
		(validate.field).string.uuid = true
	];

	//
	string response_type = 2;
}

// ListCaCertificateResponse represents the response from lists the ca public certificate(s) as support by the configured/provided ca plugin
message ListCaCertificateResponse {
	option (validate.message).disabled = false;
	// The list of Certificates
	repeated Certificate items = 1;

	// The total count of Certificates
	int32 total_count = 2;
}

// ListCAProvidersRequest represents the parameters for lists available certificate authority providers in cloudstack
message ListCAProvidersRequest {
	// List CA service provider by name
	string name = 1 [
		(validate.field).string.min_len = 1,
		(validate.field).string.max_len = 255
	];

	//
	string response_type = 2;
}

// ListCAProvidersResponse represents the response from lists available certificate authority providers in cloudstack
message ListCAProvidersResponse {
	option (validate.message).disabled = false;
	// The list of CAProviders
	repeated CAProvider items = 1;

	// The total count of CAProviders
	int32 total_count = 2;
}

// ProvisionCertificateRequest represents the parameters for issues and propagates client certificate on a connected host/agent using configured ca plugin
message ProvisionCertificateRequest {
	// The host/agent uuid to which the certificate has to be provisioned (issued and propagated)
	int64 host_id = 1 [
		(validate.field).required = true
	];

	// Whether to attempt reconnection with host/agent after successful deployment of certificate. When option is not provided, configured global setting is used
	bool reconnect = 2 [
		features.field_presence = EXPLICIT
	];

	// Name of the CA service provider, otherwise the default configured provider plugin will be used
	string provider = 3 [
		(validate.field).string.uuid = true
	];

	//
	int64 start_event_id = 4;

	//
	string injected_job_id = 5 [
		(validate.field).string.uuid = true
	];

	//
	string response_type = 6;
}

// ProvisionCertificateResponse represents the response from issues and propagates client certificate on a connected host/agent using configured ca plugin
message ProvisionCertificateResponse {
	// The Result
	Result result = 1;
}

// RevokeCertificateRequest represents the parameters for revokes certificate using configured ca plugin
message RevokeCertificateRequest {
	// The certificate serial number, as a hex value
	string serial = 1 [
		(validate.field).required = true
	];

	// The certificate CN
	string cn = 2;

	// Name of the CA service provider, otherwise the default configured provider plugin will be used
	string provider = 3 [
		(validate.field).string.uuid = true
	];

	//
	int64 start_event_id = 4;

	//
	string injected_job_id = 5 [
		(validate.field).string.uuid = true
	];

	//
	string response_type = 6;
}

// RevokeCertificateResponse represents the response from revokes certificate using configured ca plugin
message RevokeCertificateResponse {
	// The Result
	Result result = 1;
}

// IssueCertificateRequest represents the parameters for issues a client certificate using configured or provided ca plugin
message IssueCertificateRequest {
	// The certificate signing request (in pem format), if CSR is not provided then configured/provided options are considered
	string csr = 1;

	// Comma separated list of domains, the certificate should be issued for. When csr is not provided, the first domain is used as a subject/CN
	string domains = 2;

	// Comma separated list of IP addresses, the certificate should be issued for
	string addresses = 3 [
		(validate.field).string.ipv4 = true
	];

	// Certificate validity duration in number of days, when not provided the default configured value will be used
	int32 validity_duration = 4;

	// Name of the CA service provider, otherwise the default configured provider plugin will be used
	string provider = 5 [
		(validate.field).string.uuid = true
	];

	//
	int64 start_event_id = 6;

	//
	string injected_job_id = 7 [
		(validate.field).string.uuid = true
	];

	//
	string response_type = 8;
}

// IssueCertificateResponse represents the response from issues a client certificate using configured or provided ca plugin
message IssueCertificateResponse {
	// The Result
	Result result = 1;
}

// Certificate represents a Certificate Item
message Certificate {
	// The ID of the Certificate
	string id = 1 [
		(validate.field).string.uuid = true
	];
	// The name of the Certificate
	string name = 2;
	// The display name of the Certificate
	string display_name = 3;
	// The description of the Certificate
	string description = 4;
	// The date this entity was created
	string created = 5;
}

// CAProvider represents a CAProvider Item
message CAProvider {
	// The ID of the CAProvider
	string id = 1 [
		(validate.field).string.uuid = true
	];
	// The name of the CAProvider
	string name = 2;
	// The display name of the CAProvider
	string display_name = 3;
	// The description of the CAProvider
	string description = 4;
	// The date this entity was created
	string created = 5;
}

// Success represents a Success Operation Response
message Success {
	// true if operation is executed successfully
	bool success = 1;
	// any text associated with the success or failure
	string display_text = 2;
}

// Item represents a generic item in a list response
message Item {
	// The ID of the item
	string id = 1 [
		(validate.field).string.uuid = true
	];

	// The name of the item
	string name = 2;

	// The display name of the item
	string display_name = 3;

	// The description of the item
	string description = 4;

	// The account ID the item belongs to
	string account_id = 5 [
		(validate.field).string.uuid = true
	];

	// The domain ID the item belongs to
	string domain_id = 6 [
		(validate.field).string.uuid = true
	];

	// The domain name the item belongs to
	string domain = 7;

	// The project ID the item belongs to
	string project_id = 8 [
		(validate.field).string.uuid = true
	];

	// The project name the item belongs to
	string project = 9;

	// The date the item was created
	string created = 10;

	// The state of the item
	string state = 11;

	// Additional fields returned by the API
	map<string, string> details = 12;
}

// Result represents a generic operation result
message Result {
	// Whether the operation was successful
	bool success = 1;

	// Any text associated with the success or failure
	string display_text = 2;

	// The ID of the resource affected by the operation
	string id = 3 [
		(validate.field).string.uuid = true
	];

	// The job ID for an async operation
	string job_id = 4 [
		(validate.field).string.uuid = true
	];

	// The status of the job
	string job_status = 5;
}
