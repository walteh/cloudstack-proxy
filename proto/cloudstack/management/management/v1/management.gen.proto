edition = "2023";

package cloudstack.management.management.v1;

import "buf/validate/validate.proto";
import "cloudstack/annotations/annotations.proto";
import "google/protobuf/descriptor.proto";

// ManagementService provides operations for managing Managements
service ManagementService {
	option (annotations.service).scope = SCOPE_USER;

	// ListMgmts Lists management servers.
	rpc ListMgmts(ListMgmtsRequest) returns (ListMgmtsResponse) {
		option (annotations.method).scope = SCOPE_USER;
	}
}

// ListMgmtsRequest represents the parameters for lists management servers.
message ListMgmtsRequest {
	// the id of the management server
	int64 id = 1;

	// the name of the management server
	string host_name = 2 [
		(buf.validate.field).string.min_len = 1,
		(buf.validate.field).string.max_len = 255
	];

	// Whether to return the management server peers or not. By default, the management server peers will not be returned.
	bool peers = 3 [
		features.field_presence = EXPLICIT
	];

	// List by keyword
	string keyword = 4;

	//
	int32 page = 5;

	//
	int32 page_size = 6;

	//
	string response_type = 7;
}

// ListMgmtsResponse represents the response from lists management servers.
message ListMgmtsResponse {
	option (buf.validate.message).disabled = false;
	// The list of ManagementServers
	repeated ManagementServer items = 1;

	// The total count of ManagementServers
	int32 total_count = 2;
}

// ManagementServer represents a ManagementServer Item
message ManagementServer {
	// The ID of the ManagementServer
	string id = 1 [
		(buf.validate.field).string.uuid = true
	];
	// The name of the ManagementServer
	string name = 2;
	// The display name of the ManagementServer
	string display_name = 3;
	// The description of the ManagementServer
	string description = 4;
	// The date this entity was created
	string created = 5;
}

// Success represents a Success Operation Response
message Success {
	// true if operation is executed successfully
	bool success = 1;
	// any text associated with the success or failure
	string display_text = 2;
}

// Result represents a generic operation result
message Result {
	// Whether the operation was successful
	bool success = 1;

	// Any text associated with the success or failure
	string display_text = 2;

	// The ID of the resource affected by the operation
	string id = 3 [
		(buf.validate.field).string.uuid = true
	];

	// The job ID for an async operation
	string job_id = 4 [
		(buf.validate.field).string.uuid = true
	];

	// The status of the job
	string job_status = 5;
}
