edition = "2023";

package cloudstack.management.swift.v1;

import "cloudstack/annotations/annotations.proto";
import "cloudstack/validate/validate.proto";
import "google/protobuf/descriptor.proto";

// SwiftService provides operations for managing Swifts
service SwiftService {
	option (annotations.service).scope = Scope_USER;

	// AddSwift Adds Swift.
	rpc AddSwift(AddSwiftRequest) returns (AddSwiftResponse) {}

	// ListSwifts List Swift.
	rpc ListSwifts(ListSwiftsRequest) returns (ListSwiftsResponse) {}
}

// AddSwiftRequest represents the parameters for adds swift.
message AddSwiftRequest {
	// the URL for swift
	string url = 1 [
		(validate.field).required = true
	];

	// the account for swift
	string account = 2;

	// the username for swift
	string username = 3 [
		(validate.field).string.min_len = 1,
		(validate.field).string.max_len = 255
	];

	//  key for the user for swift
	string key = 4;

	//
	string response_type = 5;
}

// AddSwiftResponse represents the response from adds swift.
message AddSwiftResponse {
	// The Result
	Result result = 1;
}

// ListSwiftsRequest represents the parameters for list swift.
message ListSwiftsRequest {
	// the id of the swift
	int64 id = 1;

	// List by keyword
	string keyword = 2;

	//
	int32 page = 3;

	//
	int32 page_size = 4;

	//
	string response_type = 5;
}

// ListSwiftsResponse represents the response from list swift.
message ListSwiftsResponse {
	option (validate.message).disabled = false;
	// The list of ImageStores
	repeated ImageStore items = 1;

	// The total count of ImageStores
	int32 total_count = 2;
}

// ImageStore represents a ImageStore Item
message ImageStore {
	// The ID of the ImageStore
	string id = 1 [
		(validate.field).string.uuid = true
	];
	// The name of the ImageStore
	string name = 2;
	// The display name of the ImageStore
	string display_name = 3;
	// The description of the ImageStore
	string description = 4;
	// The date this entity was created
	string created = 5;
}

// Success represents a Success Operation Response
message Success {
	// true if operation is executed successfully
	bool success = 1;
	// any text associated with the success or failure
	string display_text = 2;
}

// Item represents a generic item in a list response
message Item {
	// The ID of the item
	string id = 1 [
		(validate.field).string.uuid = true
	];

	// The name of the item
	string name = 2;

	// The display name of the item
	string display_name = 3;

	// The description of the item
	string description = 4;

	// The account ID the item belongs to
	string account_id = 5 [
		(validate.field).string.uuid = true
	];

	// The domain ID the item belongs to
	string domain_id = 6 [
		(validate.field).string.uuid = true
	];

	// The domain name the item belongs to
	string domain = 7;

	// The project ID the item belongs to
	string project_id = 8 [
		(validate.field).string.uuid = true
	];

	// The project name the item belongs to
	string project = 9;

	// The date the item was created
	string created = 10;

	// The state of the item
	string state = 11;

	// Additional fields returned by the API
	map<string, string> details = 12;
}

// Result represents a generic operation result
message Result {
	// Whether the operation was successful
	bool success = 1;

	// Any text associated with the success or failure
	string display_text = 2;

	// The ID of the resource affected by the operation
	string id = 3 [
		(validate.field).string.uuid = true
	];

	// The job ID for an async operation
	string job_id = 4 [
		(validate.field).string.uuid = true
	];

	// The status of the job
	string job_status = 5;
}
