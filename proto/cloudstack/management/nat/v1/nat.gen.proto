edition = "2023";

package cloudstack.management.nat.v1;

import "cloudstack/annotations/annotations.proto";
import "cloudstack/validate/validate.proto";
import "google/protobuf/descriptor.proto";

// NatService provides operations for managing Nats
service NatService {
	option (annotations.service).scope = Scope_USER;

	// EnableStaticNat Enables static NAT for given IP address
	rpc EnableStaticNat(EnableStaticNatRequest) returns (EnableStaticNatResponse) {}

	// CreateIpForwardingRule Creates an IP forwarding rule
	rpc CreateIpForwardingRule(CreateIpForwardingRuleRequest) returns (CreateIpForwardingRuleResponse) {}

	// ListIpForwardingRules List the IP forwarding rules
	rpc ListIpForwardingRules(ListIpForwardingRulesRequest) returns (ListIpForwardingRulesResponse) {}

	// DisableStaticNat Disables static rule for given IP address
	rpc DisableStaticNat(DisableStaticNatRequest) returns (DisableStaticNatResponse) {}

	// DeleteIpForwardingRule Deletes an IP forwarding rule
	rpc DeleteIpForwardingRule(DeleteIpForwardingRuleRequest) returns (DeleteIpForwardingRuleResponse) {}
}

// EnableStaticNatRequest represents the parameters for enables static nat for given ip address
message EnableStaticNatRequest {
	// the public IP address ID for which static NAT feature is being enabled
	int64 ip_address_id = 1 [
		(validate.field).required = true
	];

	// the ID of the virtual machine for enabling static NAT feature
	int64 virtual_machine_id = 2 [
		(validate.field).required = true
	];

	// The network of the VM the static NAT will be enabled for. Required when public IP address is not associated with any guest network yet (VPC case)
	int64 network_id = 3;

	// VM guest NIC secondary IP address for the port forwarding rule
	string vm_secondary_ip = 4 [
		(validate.field).string.ipv4 = true
	];

	//
	string response_type = 5;
}

// EnableStaticNatResponse represents the response from enables static nat for given ip address
message EnableStaticNatResponse {
	// The Result
	Result result = 1;
}

// CreateIpForwardingRuleRequest represents the parameters for creates an ip forwarding rule
message CreateIpForwardingRuleRequest {
	// the public IP address ID of the forwarding rule, already associated via associateIp
	int64 ip_address_id = 1 [
		(validate.field).required = true
	];

	// the start port for the rule
	int32 start_port = 2 [
		(validate.field).required  = true,
		(validate.field).int32.gte = 1,
		(validate.field).int32.lte = 65535
	];

	// the end port for the rule
	int32 end_port = 3 [
		(validate.field).int32.gte = 1,
		(validate.field).int32.lte = 65535
	];

	// the protocol for the rule. Valid values are TCP or UDP.
	string protocol = 4 [
		(validate.field).required = true
	];

	// if true, firewall rule for source/end public port is automatically created; if false - firewall rule has to be created explicitly. Has value true by default
	bool open_firewall = 5 [
		features.field_presence = EXPLICIT
	];

	// the CIDR list to forward traffic from. Multiple entries must be separated by a single comma character (,). This parameter is deprecated. Do not use.
	repeated string cidrlist = 6;

	//
	int64 start_event_id = 7;

	//
	string injected_job_id = 8 [
		(validate.field).string.uuid = true
	];

	//
	string response_type = 9;
}

// CreateIpForwardingRuleResponse represents the response from creates an ip forwarding rule
message CreateIpForwardingRuleResponse {
	// The Result
	Result result = 1;
}

// ListIpForwardingRulesRequest represents the parameters for list the ip forwarding rules
message ListIpForwardingRulesRequest {
	// list the rule belonging to this public IP address
	int64 public_ip_address_id = 1;

	// Lists rule with the specified ID.
	int64 id = 2;

	// Lists all rules applied to the specified VM.
	int64 vm_id = 3;

	// list objects by project; if projectid=-1 lists All VMs
	int64 project_id = 4;

	// list resources by account. Must be used with the domainId parameter.
	string account_name = 5 [
		(validate.field).cel = {
			id:         "account_name_with_domain_id",
			expression: "!has(account_name) || has(domain_id)",
			message:    "account_name must be used with domain_id parameter"
		}
	];

	// If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false. Resources dedicated to a project are listed only if using the projectid parameter.
	bool list_all = 6 [
		features.field_presence = EXPLICIT
	];

	// list only resources belonging to the domain specified
	int64 domain_id = 7;

	// defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.
	bool recursive = 8 [
		features.field_presence = EXPLICIT
	];

	// List by keyword
	string keyword = 9;

	//
	int32 page = 10;

	//
	int32 page_size = 11;

	//
	string response_type = 12;
}

// ListIpForwardingRulesResponse represents the response from list the ip forwarding rules
message ListIpForwardingRulesResponse {
	option (validate.message).disabled = false;
	// The list of FirewallRules
	repeated FirewallRule items = 1;

	// The total count of FirewallRules
	int32 total_count = 2;
}

// DisableStaticNatRequest represents the parameters for disables static rule for given ip address
message DisableStaticNatRequest {
	// the public IP address ID for which static NAT feature is being disabled
	int64 ip_address_id = 1 [
		(validate.field).required = true
	];

	//
	int64 start_event_id = 2;

	//
	string injected_job_id = 3 [
		(validate.field).string.uuid = true
	];

	//
	string response_type = 4;
}

// DisableStaticNatResponse represents the response from disables static rule for given ip address
message DisableStaticNatResponse {
	// The Result
	Result result = 1;
}

// DeleteIpForwardingRuleRequest represents the parameters for deletes an ip forwarding rule
message DeleteIpForwardingRuleRequest {
	// the ID of the forwarding rule
	int64 id = 1 [
		(validate.field).required = true
	];

	//
	int64 start_event_id = 2;

	//
	string injected_job_id = 3 [
		(validate.field).string.uuid = true
	];

	//
	string response_type = 4;
}

// DeleteIpForwardingRuleResponse represents the response from deletes an ip forwarding rule
message DeleteIpForwardingRuleResponse {
	// The Result
	Result result = 1;
}

// FirewallRule represents a FirewallRule Item
message FirewallRule {
	// The ID of the FirewallRule
	string id = 1 [
		(validate.field).string.uuid = true
	];
	// The name of the FirewallRule
	string name = 2;
	// The display name of the FirewallRule
	string display_name = 3;
	// The description of the FirewallRule
	string description = 4;
	// The date this entity was created
	string created = 5;
}

// Success represents a Success Operation Response
message Success {
	// true if operation is executed successfully
	bool success = 1;
	// any text associated with the success or failure
	string display_text = 2;
}

// ProtocolType represents the possible values for the protocol for the rule. Valid values are TCP or UDP.
enum ProtocolType {
	// Default unspecified value
	PROTOCOL_TYPE_UNSPECIFIED = 0;
	// TCP value
	PROTOCOL_TYPE_TCP = 1;
	// UDP value
	PROTOCOL_TYPE_UDP = 2;
}

// Result represents a generic operation result
message Result {
	// Whether the operation was successful
	bool success = 1;

	// Any text associated with the success or failure
	string display_text = 2;

	// The ID of the resource affected by the operation
	string id = 3 [
		(validate.field).string.uuid = true
	];

	// The job ID for an async operation
	string job_id = 4 [
		(validate.field).string.uuid = true
	];

	// The status of the job
	string job_status = 5;
}
