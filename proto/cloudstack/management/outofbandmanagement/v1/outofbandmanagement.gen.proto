edition = "2023";

package cloudstack.management.outofbandmanagement.v1;

import "buf/validate/validate.proto";
import "cloudstack/annotations/annotations.proto";
import "google/protobuf/descriptor.proto";

// OutofbandmanagementService provides operations for managing Outofbandmanagements
service OutofbandmanagementService {
	option (annotations.service).scope = SCOPE_USER;

	// ChangeOutOfBandManagementPassword Changes out-of-band management interface password on the host and updates the interface configuration in CloudStack if the operation succeeds, else reverts the old password
	rpc ChangeOutOfBandManagementPassword(ChangeOutOfBandManagementPasswordRequest) returns (ChangeOutOfBandManagementPasswordResponse) {
		option (annotations.method).scope = SCOPE_USER;
	}

	// ConfigureOutOfBandManagement Configures a host's out-of-band management interface
	rpc ConfigureOutOfBandManagement(ConfigureOutOfBandManagementRequest) returns (ConfigureOutOfBandManagementResponse) {
		option (annotations.method).scope = SCOPE_USER;
	}

	// DisableOutOfBandManagementForCluster Disables out-of-band management for a cluster
	rpc DisableOutOfBandManagementForCluster(DisableOutOfBandManagementForClusterRequest) returns (DisableOutOfBandManagementForClusterResponse) {
		option (annotations.method).scope = SCOPE_USER;
	}

	// DisableOutOfBandManagementForHost Disables out-of-band management for a host
	rpc DisableOutOfBandManagementForHost(DisableOutOfBandManagementForHostRequest) returns (DisableOutOfBandManagementForHostResponse) {
		option (annotations.method).scope = SCOPE_USER;
	}

	// DisableOutOfBandManagementForZone Disables out-of-band management for a zone
	rpc DisableOutOfBandManagementForZone(DisableOutOfBandManagementForZoneRequest) returns (DisableOutOfBandManagementForZoneResponse) {
		option (annotations.method).scope = SCOPE_USER;
	}

	// EnableOutOfBandManagementForCluster Enables out-of-band management for a cluster
	rpc EnableOutOfBandManagementForCluster(EnableOutOfBandManagementForClusterRequest) returns (EnableOutOfBandManagementForClusterResponse) {
		option (annotations.method).scope = SCOPE_USER;
	}

	// EnableOutOfBandManagementForHost Enables out-of-band management for a host
	rpc EnableOutOfBandManagementForHost(EnableOutOfBandManagementForHostRequest) returns (EnableOutOfBandManagementForHostResponse) {
		option (annotations.method).scope = SCOPE_USER;
	}

	// EnableOutOfBandManagementForZone Enables out-of-band management for a zone
	rpc EnableOutOfBandManagementForZone(EnableOutOfBandManagementForZoneRequest) returns (EnableOutOfBandManagementForZoneResponse) {
		option (annotations.method).scope = SCOPE_USER;
	}

	// IssueOutOfBandManagementPowerAction Initiates the specified power action to the host's out-of-band management interface
	rpc IssueOutOfBandManagementPowerAction(IssueOutOfBandManagementPowerActionRequest) returns (IssueOutOfBandManagementPowerActionResponse) {
		option (annotations.method).scope = SCOPE_USER;
	}
}

// ChangeOutOfBandManagementPasswordRequest represents the parameters for changes out-of-band management interface password on the host and updates the interface configuration in cloudstack if the operation succeeds, else reverts the old password
message ChangeOutOfBandManagementPasswordRequest {
	// the ID of the host
	int64 host_id = 1 [
		(buf.validate.field).required = true
	];

	// the new host management interface password of maximum length 16, if none is provided a random password would be used
	string password = 2;

	//
	int64 start_event_id = 3;

	//
	string injected_job_id = 4 [
		(buf.validate.field).string.uuid = true
	];

	//
	string response_type = 5;
}

// ChangeOutOfBandManagementPasswordResponse represents the response from changes out-of-band management interface password on the host and updates the interface configuration in cloudstack if the operation succeeds, else reverts the old password
message ChangeOutOfBandManagementPasswordResponse {
	// The Result
	Result result = 1;
}

// ConfigureOutOfBandManagementRequest represents the parameters for configures a host's out-of-band management interface
message ConfigureOutOfBandManagementRequest {
	// the ID of the host
	int64 host_id = 1 [
		(buf.validate.field).required = true
	];

	// the host management interface driver, for example: ipmitool
	string driver = 2 [
		(buf.validate.field).required = true
	];

	// the host management interface IP address
	string address = 3 [
		(buf.validate.field).required = true
	];

	// the host management interface port
	string port = 4 [
		(buf.validate.field).required = true
	];

	// the host management interface user
	string username = 5 [
		(buf.validate.field).required       = true,
		(buf.validate.field).string.min_len = 1,
		(buf.validate.field).string.max_len = 255
	];

	// the host management interface password
	string password = 6 [
		(buf.validate.field).required = true
	];

	//
	string response_type = 7;
}

// ConfigureOutOfBandManagementResponse represents the response from configures a host's out-of-band management interface
message ConfigureOutOfBandManagementResponse {
	// The Result
	Result result = 1;
}

// DisableOutOfBandManagementForClusterRequest represents the parameters for disables out-of-band management for a cluster
message DisableOutOfBandManagementForClusterRequest {
	// the ID of the cluster
	int64 cluster_id = 1 [
		(buf.validate.field).required = true
	];

	//
	int64 start_event_id = 2;

	//
	string injected_job_id = 3 [
		(buf.validate.field).string.uuid = true
	];

	//
	string response_type = 4;
}

// DisableOutOfBandManagementForClusterResponse represents the response from disables out-of-band management for a cluster
message DisableOutOfBandManagementForClusterResponse {
	// The Result
	Result result = 1;
}

// DisableOutOfBandManagementForHostRequest represents the parameters for disables out-of-band management for a host
message DisableOutOfBandManagementForHostRequest {
	// the ID of the host
	int64 host_id = 1 [
		(buf.validate.field).required = true
	];

	//
	int64 start_event_id = 2;

	//
	string injected_job_id = 3 [
		(buf.validate.field).string.uuid = true
	];

	//
	string response_type = 4;
}

// DisableOutOfBandManagementForHostResponse represents the response from disables out-of-band management for a host
message DisableOutOfBandManagementForHostResponse {
	// The Result
	Result result = 1;
}

// DisableOutOfBandManagementForZoneRequest represents the parameters for disables out-of-band management for a zone
message DisableOutOfBandManagementForZoneRequest {
	// the ID of the zone
	int64 zone_id = 1 [
		(buf.validate.field).required = true
	];

	//
	int64 start_event_id = 2;

	//
	string injected_job_id = 3 [
		(buf.validate.field).string.uuid = true
	];

	//
	string response_type = 4;
}

// DisableOutOfBandManagementForZoneResponse represents the response from disables out-of-band management for a zone
message DisableOutOfBandManagementForZoneResponse {
	// The Result
	Result result = 1;
}

// EnableOutOfBandManagementForClusterRequest represents the parameters for enables out-of-band management for a cluster
message EnableOutOfBandManagementForClusterRequest {
	// the ID of the cluster
	int64 cluster_id = 1 [
		(buf.validate.field).required = true
	];

	//
	int64 start_event_id = 2;

	//
	string injected_job_id = 3 [
		(buf.validate.field).string.uuid = true
	];

	//
	string response_type = 4;
}

// EnableOutOfBandManagementForClusterResponse represents the response from enables out-of-band management for a cluster
message EnableOutOfBandManagementForClusterResponse {
	// The Result
	Result result = 1;
}

// EnableOutOfBandManagementForHostRequest represents the parameters for enables out-of-band management for a host
message EnableOutOfBandManagementForHostRequest {
	// the ID of the host
	int64 host_id = 1 [
		(buf.validate.field).required = true
	];

	//
	int64 start_event_id = 2;

	//
	string injected_job_id = 3 [
		(buf.validate.field).string.uuid = true
	];

	//
	string response_type = 4;
}

// EnableOutOfBandManagementForHostResponse represents the response from enables out-of-band management for a host
message EnableOutOfBandManagementForHostResponse {
	// The Result
	Result result = 1;
}

// EnableOutOfBandManagementForZoneRequest represents the parameters for enables out-of-band management for a zone
message EnableOutOfBandManagementForZoneRequest {
	// the ID of the zone
	int64 zone_id = 1 [
		(buf.validate.field).required = true
	];

	//
	int64 start_event_id = 2;

	//
	string injected_job_id = 3 [
		(buf.validate.field).string.uuid = true
	];

	//
	string response_type = 4;
}

// EnableOutOfBandManagementForZoneResponse represents the response from enables out-of-band management for a zone
message EnableOutOfBandManagementForZoneResponse {
	// The Result
	Result result = 1;
}

// IssueOutOfBandManagementPowerActionRequest represents the parameters for initiates the specified power action to the host's out-of-band management interface
message IssueOutOfBandManagementPowerActionRequest {
	// the ID of the host
	int64 host_id = 1 [
		(buf.validate.field).required = true
	];

	// optional operation timeout in seconds that overrides the global or cluster-level out-of-band management timeout setting
	int64 action_timeout = 2;

	// out-of-band management power actions, valid actions are: ON, OFF, CYCLE, RESET, SOFT, STATUS
	string power_action = 3 [
		(buf.validate.field).required = true
	];

	//
	int64 start_event_id = 4;

	//
	string injected_job_id = 5 [
		(buf.validate.field).string.uuid = true
	];

	//
	string response_type = 6;
}

// IssueOutOfBandManagementPowerActionResponse represents the response from initiates the specified power action to the host's out-of-band management interface
message IssueOutOfBandManagementPowerActionResponse {
	// The Result
	Result result = 1;
}

// Success represents a Success Operation Response
message Success {
	// true if operation is executed successfully
	bool success = 1;
	// any text associated with the success or failure
	string display_text = 2;
}

// Result represents a generic operation result
message Result {
	// Whether the operation was successful
	bool success = 1;

	// Any text associated with the success or failure
	string display_text = 2;

	// The ID of the resource affected by the operation
	string id = 3 [
		(buf.validate.field).string.uuid = true
	];

	// The job ID for an async operation
	string job_id = 4 [
		(buf.validate.field).string.uuid = true
	];

	// The status of the job
	string job_status = 5;
}
