edition = "2023";

package cloudstack.management.internallb.v1;

import "cloudstack/annotations/annotations.proto";
import "cloudstack/validate/validate.proto";
import "google/protobuf/descriptor.proto";

// InternallbService provides operations for managing Internallbs
service InternallbService {
	option (annotations.service).scope = Scope_USER;

	// ConfigureInternalLoadBalancerElement Configures an Internal Load Balancer element.
	rpc ConfigureInternalLoadBalancerElement(ConfigureInternalLoadBalancerElementRequest) returns (ConfigureInternalLoadBalancerElementResponse) {}

	// CreateInternalLoadBalancerElement Create an Internal Load Balancer element.
	rpc CreateInternalLoadBalancerElement(CreateInternalLoadBalancerElementRequest) returns (CreateInternalLoadBalancerElementResponse) {}

	// ListInternalLoadBalancerElements Lists all available Internal Load Balancer elements.
	rpc ListInternalLoadBalancerElements(ListInternalLoadBalancerElementsRequest) returns (ListInternalLoadBalancerElementsResponse) {}

	// ListInternalLBVMs List internal LB VMs.
	rpc ListInternalLBVMs(ListInternalLBVMsRequest) returns (ListInternalLBVMsResponse) {}

	// StartInternalLBVM Starts an existing internal lb vm.
	rpc StartInternalLBVM(StartInternalLBVMRequest) returns (StartInternalLBVMResponse) {}

	// StopInternalLBVM Stops an Internal LB vm.
	rpc StopInternalLBVM(StopInternalLBVMRequest) returns (StopInternalLBVMResponse) {}
}

// ConfigureInternalLoadBalancerElementRequest represents the parameters for configures an internal load balancer element.
message ConfigureInternalLoadBalancerElementRequest {
	// the ID of the internal lb provider
	int64 id = 1 [
		(validate.field).required = true
	];

	// Enables/Disables the Internal Load Balancer element
	bool enabled = 2 [
		(validate.field).required = true,
		features.field_presence   = EXPLICIT
	];

	//
	int64 start_event_id = 3;

	//
	string injected_job_id = 4 [
		(validate.field).string.uuid = true
	];

	//
	string response_type = 5;
}

// ConfigureInternalLoadBalancerElementResponse represents the response from configures an internal load balancer element.
message ConfigureInternalLoadBalancerElementResponse {
	// The Result
	Result result = 1;
}

// CreateInternalLoadBalancerElementRequest represents the parameters for create an internal load balancer element.
message CreateInternalLoadBalancerElementRequest {
	// the network service provider ID of the internal load balancer element
	int64 nsp_id = 1 [
		(validate.field).required = true
	];

	//
	int64 start_event_id = 2;

	//
	string injected_job_id = 3 [
		(validate.field).string.uuid = true
	];

	//
	string response_type = 4;
}

// CreateInternalLoadBalancerElementResponse represents the response from create an internal load balancer element.
message CreateInternalLoadBalancerElementResponse {
	// The Result
	Result result = 1;
}

// ListInternalLoadBalancerElementsRequest represents the parameters for lists all available internal load balancer elements.
message ListInternalLoadBalancerElementsRequest {
	// list internal load balancer elements by id
	int64 id = 1;

	// list internal load balancer elements by network service provider id
	int64 nsp_id = 2;

	// list internal load balancer elements by enabled state
	bool enabled = 3 [
		features.field_presence = EXPLICIT
	];

	// List by keyword
	string keyword = 4;

	//
	int32 page = 5;

	//
	int32 page_size = 6;

	//
	string response_type = 7;
}

// ListInternalLoadBalancerElementsResponse represents the response from lists all available internal load balancer elements.
message ListInternalLoadBalancerElementsResponse {
	option (validate.message).disabled = false;
	// The list of InternalLoadBalancerElements
	repeated InternalLoadBalancerElement items = 1;

	// The total count of InternalLoadBalancerElements
	int32 total_count = 2;
}

// ListInternalLBVMsRequest represents the parameters for list internal lb vms.
message ListInternalLBVMsRequest {
	// the host ID of the Internal LB VM
	int64 host_id = 1;

	// the ID of the Internal LB VM
	int64 id = 2;

	// the name of the Internal LB VM
	string router_name = 3 [
		(validate.field).string.min_len = 1,
		(validate.field).string.max_len = 255
	];

	// the Pod ID of the Internal LB VM
	int64 pod_id = 4;

	// the state of the Internal LB VM
	string state = 5;

	// the Zone ID of the Internal LB VM
	int64 zone_id = 6;

	// list by network id
	int64 network_id = 7;

	// List Internal LB VMs by VPC
	int64 vpc_id = 8;

	// if true is passed for this parameter, list only VPC Internal LB VMs
	bool for_vpc = 9 [
		features.field_presence = EXPLICIT
	];

	// if true is passed for this parameter, also fetch last executed health check results for the VM. Default is false
	bool fetch_health_check_results = 10 [
		features.field_presence = EXPLICIT
	];

	// list objects by project; if projectid=-1 lists All VMs
	int64 project_id = 11;

	// list resources by account. Must be used with the domainId parameter.
	string account_name = 12 [
		(validate.field).cel = {
			id:         "account_name_with_domain_id",
			expression: "!has(account_name) || has(domain_id)",
			message:    "account_name must be used with domain_id parameter"
		}
	];

	// If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false. Resources dedicated to a project are listed only if using the projectid parameter.
	bool list_all = 13 [
		features.field_presence = EXPLICIT
	];

	// list only resources belonging to the domain specified
	int64 domain_id = 14;

	// defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.
	bool recursive = 15 [
		features.field_presence = EXPLICIT
	];

	// List by keyword
	string keyword = 16;

	//
	int32 page = 17;

	//
	int32 page_size = 18;

	//
	string response_type = 19;
}

// ListInternalLBVMsResponse represents the response from list internal lb vms.
message ListInternalLBVMsResponse {
	option (validate.message).disabled = false;
	// The list of DomainRouters
	repeated DomainRouter items = 1;

	// The total count of DomainRouters
	int32 total_count = 2;
}

// StartInternalLBVMRequest represents the parameters for starts an existing internal lb vm.
message StartInternalLBVMRequest {
	// the ID of the internal lb vm
	int64 id = 1 [
		(validate.field).required = true
	];

	//
	int64 start_event_id = 2;

	//
	string injected_job_id = 3 [
		(validate.field).string.uuid = true
	];

	//
	string response_type = 4;
}

// StartInternalLBVMResponse represents the response from starts an existing internal lb vm.
message StartInternalLBVMResponse {
	// The Result
	Result result = 1;
}

// StopInternalLBVMRequest represents the parameters for stops an internal lb vm.
message StopInternalLBVMRequest {
	// the ID of the internal lb vm
	int64 id = 1 [
		(validate.field).required = true
	];

	// Force stop the VM (vm is marked as Stopped even when command fails to be send to the backend, otherwise a force poweroff is attempted). To be used if the caller knows the VM is stopped and should be marked as such.
	bool forced = 2 [
		features.field_presence = EXPLICIT
	];

	//
	int64 start_event_id = 3;

	//
	string injected_job_id = 4 [
		(validate.field).string.uuid = true
	];

	//
	string response_type = 5;
}

// StopInternalLBVMResponse represents the response from stops an internal lb vm.
message StopInternalLBVMResponse {
	// The Result
	Result result = 1;
}

// InternalLoadBalancerElement represents a InternalLoadBalancerElement Item
message InternalLoadBalancerElement {
	// The ID of the InternalLoadBalancerElement
	string id = 1 [
		(validate.field).string.uuid = true
	];
	// The name of the InternalLoadBalancerElement
	string name = 2;
	// The display name of the InternalLoadBalancerElement
	string display_name = 3;
	// The description of the InternalLoadBalancerElement
	string description = 4;
	// The date this entity was created
	string created = 5;
}

// DomainRouter represents a DomainRouter Item
message DomainRouter {
	// The ID of the DomainRouter
	string id = 1 [
		(validate.field).string.uuid = true
	];
	// The name of the DomainRouter
	string name = 2;
	// The display name of the DomainRouter
	string display_name = 3;
	// The description of the DomainRouter
	string description = 4;
	// The date this entity was created
	string created = 5;
}

// Success represents a Success Operation Response
message Success {
	// true if operation is executed successfully
	bool success = 1;
	// any text associated with the success or failure
	string display_text = 2;
}

// Item represents a generic item in a list response
message Item {
	// The ID of the item
	string id = 1 [
		(validate.field).string.uuid = true
	];

	// The name of the item
	string name = 2;

	// The display name of the item
	string display_name = 3;

	// The description of the item
	string description = 4;

	// The account ID the item belongs to
	string account_id = 5 [
		(validate.field).string.uuid = true
	];

	// The domain ID the item belongs to
	string domain_id = 6 [
		(validate.field).string.uuid = true
	];

	// The domain name the item belongs to
	string domain = 7;

	// The project ID the item belongs to
	string project_id = 8 [
		(validate.field).string.uuid = true
	];

	// The project name the item belongs to
	string project = 9;

	// The date the item was created
	string created = 10;

	// The state of the item
	string state = 11;

	// Additional fields returned by the API
	map<string, string> details = 12;
}

// Result represents a generic operation result
message Result {
	// Whether the operation was successful
	bool success = 1;

	// Any text associated with the success or failure
	string display_text = 2;

	// The ID of the resource affected by the operation
	string id = 3 [
		(validate.field).string.uuid = true
	];

	// The job ID for an async operation
	string job_id = 4 [
		(validate.field).string.uuid = true
	];

	// The status of the job
	string job_status = 5;
}
