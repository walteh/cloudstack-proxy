// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: cloudstack/management/systemvm/v1/systemvm.gen.proto

package systemvmv1

import (
	_ "github.com/walteh/cloudstack-proxy/gen/proto/golang/cloudstack/annotations"
	_ "github.com/walteh/cloudstack-proxy/gen/proto/golang/cloudstack/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// UpgradeSystemVMRequest represents the parameters for changes the service offering for a system vm (console proxy or secondary storage). the system vm must be in a "stopped" state for this command to take effect.
type UpgradeSystemVMRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the system vm
	Id *int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// the service offering ID to apply to the system vm
	ServiceOfferingId *int64 `protobuf:"varint,2,opt,name=service_offering_id,json=serviceOfferingId" json:"service_offering_id,omitempty"`
	// name value pairs of custom parameters for cpuspeed, memory and cpunumber. example details[i].name=value
	Details map[string]string `protobuf:"bytes,3,rep,name=details" json:"details,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	ResponseType  *string `protobuf:"bytes,4,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpgradeSystemVMRequest) Reset() {
	*x = UpgradeSystemVMRequest{}
	mi := &file_cloudstack_management_systemvm_v1_systemvm_gen_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpgradeSystemVMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradeSystemVMRequest) ProtoMessage() {}

func (x *UpgradeSystemVMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_systemvm_v1_systemvm_gen_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpgradeSystemVMRequest.ProtoReflect.Descriptor instead.
func (*UpgradeSystemVMRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_systemvm_v1_systemvm_gen_proto_rawDescGZIP(), []int{0}
}

func (x *UpgradeSystemVMRequest) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *UpgradeSystemVMRequest) GetServiceOfferingId() int64 {
	if x != nil && x.ServiceOfferingId != nil {
		return *x.ServiceOfferingId
	}
	return 0
}

func (x *UpgradeSystemVMRequest) GetDetails() map[string]string {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *UpgradeSystemVMRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// UpgradeSystemVMResponse represents the response from changes the service offering for a system vm (console proxy or secondary storage). the system vm must be in a "stopped" state for this command to take effect.
type UpgradeSystemVMResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Result
	Result        *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpgradeSystemVMResponse) Reset() {
	*x = UpgradeSystemVMResponse{}
	mi := &file_cloudstack_management_systemvm_v1_systemvm_gen_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpgradeSystemVMResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradeSystemVMResponse) ProtoMessage() {}

func (x *UpgradeSystemVMResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_systemvm_v1_systemvm_gen_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpgradeSystemVMResponse.ProtoReflect.Descriptor instead.
func (*UpgradeSystemVMResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_systemvm_v1_systemvm_gen_proto_rawDescGZIP(), []int{1}
}

func (x *UpgradeSystemVMResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// ListSystemVMsRequest represents the parameters for list system virtual machines.
type ListSystemVMsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the host ID of the system VM
	HostId *int64 `protobuf:"varint,1,opt,name=host_id,json=hostId" json:"host_id,omitempty"`
	// the ID of the system VM
	Id *int64 `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	// the name of the system VM
	SystemVmName *string `protobuf:"bytes,3,opt,name=system_vm_name,json=systemVmName" json:"system_vm_name,omitempty"`
	// the Pod ID of the system VM
	PodId *int64 `protobuf:"varint,4,opt,name=pod_id,json=podId" json:"pod_id,omitempty"`
	// the state of the system VM
	State *string `protobuf:"bytes,5,opt,name=state" json:"state,omitempty"`
	// the system VM type. Possible types are "consoleproxy" and "secondarystoragevm".
	SystemVmType *string `protobuf:"bytes,6,opt,name=system_vm_type,json=systemVmType" json:"system_vm_type,omitempty"`
	// the Zone ID of the system VM
	ZoneId *int64 `protobuf:"varint,7,opt,name=zone_id,json=zoneId" json:"zone_id,omitempty"`
	// the storage ID where vm's volumes belong to
	StorageId *int64 `protobuf:"varint,8,opt,name=storage_id,json=storageId" json:"storage_id,omitempty"`
	// List by keyword
	Keyword *string `protobuf:"bytes,9,opt,name=keyword" json:"keyword,omitempty"`
	Page *int32 `protobuf:"varint,10,opt,name=page" json:"page,omitempty"`
	PageSize *int32 `protobuf:"varint,11,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	ResponseType  *string `protobuf:"bytes,12,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSystemVMsRequest) Reset() {
	*x = ListSystemVMsRequest{}
	mi := &file_cloudstack_management_systemvm_v1_systemvm_gen_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSystemVMsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSystemVMsRequest) ProtoMessage() {}

func (x *ListSystemVMsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_systemvm_v1_systemvm_gen_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSystemVMsRequest.ProtoReflect.Descriptor instead.
func (*ListSystemVMsRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_systemvm_v1_systemvm_gen_proto_rawDescGZIP(), []int{2}
}

func (x *ListSystemVMsRequest) GetHostId() int64 {
	if x != nil && x.HostId != nil {
		return *x.HostId
	}
	return 0
}

func (x *ListSystemVMsRequest) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *ListSystemVMsRequest) GetSystemVmName() string {
	if x != nil && x.SystemVmName != nil {
		return *x.SystemVmName
	}
	return ""
}

func (x *ListSystemVMsRequest) GetPodId() int64 {
	if x != nil && x.PodId != nil {
		return *x.PodId
	}
	return 0
}

func (x *ListSystemVMsRequest) GetState() string {
	if x != nil && x.State != nil {
		return *x.State
	}
	return ""
}

func (x *ListSystemVMsRequest) GetSystemVmType() string {
	if x != nil && x.SystemVmType != nil {
		return *x.SystemVmType
	}
	return ""
}

func (x *ListSystemVMsRequest) GetZoneId() int64 {
	if x != nil && x.ZoneId != nil {
		return *x.ZoneId
	}
	return 0
}

func (x *ListSystemVMsRequest) GetStorageId() int64 {
	if x != nil && x.StorageId != nil {
		return *x.StorageId
	}
	return 0
}

func (x *ListSystemVMsRequest) GetKeyword() string {
	if x != nil && x.Keyword != nil {
		return *x.Keyword
	}
	return ""
}

func (x *ListSystemVMsRequest) GetPage() int32 {
	if x != nil && x.Page != nil {
		return *x.Page
	}
	return 0
}

func (x *ListSystemVMsRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListSystemVMsRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// ListSystemVMsResponse represents the response from list system virtual machines.
type ListSystemVMsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The list of SystemVms
	Items []*SystemVm `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	// The total count of SystemVms
	TotalCount    *int32 `protobuf:"varint,2,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSystemVMsResponse) Reset() {
	*x = ListSystemVMsResponse{}
	mi := &file_cloudstack_management_systemvm_v1_systemvm_gen_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSystemVMsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSystemVMsResponse) ProtoMessage() {}

func (x *ListSystemVMsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_systemvm_v1_systemvm_gen_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSystemVMsResponse.ProtoReflect.Descriptor instead.
func (*ListSystemVMsResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_systemvm_v1_systemvm_gen_proto_rawDescGZIP(), []int{3}
}

func (x *ListSystemVMsResponse) GetItems() []*SystemVm {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListSystemVMsResponse) GetTotalCount() int32 {
	if x != nil && x.TotalCount != nil {
		return *x.TotalCount
	}
	return 0
}

// StopSystemVmRequest represents the parameters for stops a system vm.
type StopSystemVmRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the system virtual machine
	Id *int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// Force stop the VM (vm is marked as Stopped even when command fails to be send to the backend, otherwise a force poweroff is attempted). To be used if the caller knows the VM is stopped and should be marked as such.
	Forced *bool `protobuf:"varint,2,opt,name=forced" json:"forced,omitempty"`
	StartEventId *int64 `protobuf:"varint,3,opt,name=start_event_id,json=startEventId" json:"start_event_id,omitempty"`
	InjectedJobId *string `protobuf:"bytes,4,opt,name=injected_job_id,json=injectedJobId" json:"injected_job_id,omitempty"`
	ResponseType  *string `protobuf:"bytes,5,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopSystemVmRequest) Reset() {
	*x = StopSystemVmRequest{}
	mi := &file_cloudstack_management_systemvm_v1_systemvm_gen_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopSystemVmRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopSystemVmRequest) ProtoMessage() {}

func (x *StopSystemVmRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_systemvm_v1_systemvm_gen_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopSystemVmRequest.ProtoReflect.Descriptor instead.
func (*StopSystemVmRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_systemvm_v1_systemvm_gen_proto_rawDescGZIP(), []int{4}
}

func (x *StopSystemVmRequest) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *StopSystemVmRequest) GetForced() bool {
	if x != nil && x.Forced != nil {
		return *x.Forced
	}
	return false
}

func (x *StopSystemVmRequest) GetStartEventId() int64 {
	if x != nil && x.StartEventId != nil {
		return *x.StartEventId
	}
	return 0
}

func (x *StopSystemVmRequest) GetInjectedJobId() string {
	if x != nil && x.InjectedJobId != nil {
		return *x.InjectedJobId
	}
	return ""
}

func (x *StopSystemVmRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// StopSystemVmResponse represents the response from stops a system vm.
type StopSystemVmResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Result
	Result        *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopSystemVmResponse) Reset() {
	*x = StopSystemVmResponse{}
	mi := &file_cloudstack_management_systemvm_v1_systemvm_gen_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopSystemVmResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopSystemVmResponse) ProtoMessage() {}

func (x *StopSystemVmResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_systemvm_v1_systemvm_gen_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopSystemVmResponse.ProtoReflect.Descriptor instead.
func (*StopSystemVmResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_systemvm_v1_systemvm_gen_proto_rawDescGZIP(), []int{5}
}

func (x *StopSystemVmResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// PatchSystemVMRequest represents the parameters for attempts to live patch systemvms - cpvm, ssvm
type PatchSystemVMRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// patches systemVM - CPVM/SSVM with the specified ID
	Id *int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// If true, initiates copy of scripts and restart of the agent, even if the scripts version matches.To be used with ID parameter only
	Force *bool `protobuf:"varint,2,opt,name=force" json:"force,omitempty"`
	StartEventId *int64 `protobuf:"varint,3,opt,name=start_event_id,json=startEventId" json:"start_event_id,omitempty"`
	InjectedJobId *string `protobuf:"bytes,4,opt,name=injected_job_id,json=injectedJobId" json:"injected_job_id,omitempty"`
	ResponseType  *string `protobuf:"bytes,5,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PatchSystemVMRequest) Reset() {
	*x = PatchSystemVMRequest{}
	mi := &file_cloudstack_management_systemvm_v1_systemvm_gen_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PatchSystemVMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchSystemVMRequest) ProtoMessage() {}

func (x *PatchSystemVMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_systemvm_v1_systemvm_gen_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchSystemVMRequest.ProtoReflect.Descriptor instead.
func (*PatchSystemVMRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_systemvm_v1_systemvm_gen_proto_rawDescGZIP(), []int{6}
}

func (x *PatchSystemVMRequest) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *PatchSystemVMRequest) GetForce() bool {
	if x != nil && x.Force != nil {
		return *x.Force
	}
	return false
}

func (x *PatchSystemVMRequest) GetStartEventId() int64 {
	if x != nil && x.StartEventId != nil {
		return *x.StartEventId
	}
	return 0
}

func (x *PatchSystemVMRequest) GetInjectedJobId() string {
	if x != nil && x.InjectedJobId != nil {
		return *x.InjectedJobId
	}
	return ""
}

func (x *PatchSystemVMRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// PatchSystemVMResponse represents the response from attempts to live patch systemvms - cpvm, ssvm
type PatchSystemVMResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Result
	Result        *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PatchSystemVMResponse) Reset() {
	*x = PatchSystemVMResponse{}
	mi := &file_cloudstack_management_systemvm_v1_systemvm_gen_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PatchSystemVMResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchSystemVMResponse) ProtoMessage() {}

func (x *PatchSystemVMResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_systemvm_v1_systemvm_gen_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchSystemVMResponse.ProtoReflect.Descriptor instead.
func (*PatchSystemVMResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_systemvm_v1_systemvm_gen_proto_rawDescGZIP(), []int{7}
}

func (x *PatchSystemVMResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// RebootSystemVmRequest represents the parameters for reboots a system vm.
type RebootSystemVmRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the system virtual machine
	Id *int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// Force reboot the system VM (System VM is Stopped and then Started)
	Forced *bool `protobuf:"varint,2,opt,name=forced" json:"forced,omitempty"`
	StartEventId *int64 `protobuf:"varint,3,opt,name=start_event_id,json=startEventId" json:"start_event_id,omitempty"`
	InjectedJobId *string `protobuf:"bytes,4,opt,name=injected_job_id,json=injectedJobId" json:"injected_job_id,omitempty"`
	ResponseType  *string `protobuf:"bytes,5,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RebootSystemVmRequest) Reset() {
	*x = RebootSystemVmRequest{}
	mi := &file_cloudstack_management_systemvm_v1_systemvm_gen_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RebootSystemVmRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RebootSystemVmRequest) ProtoMessage() {}

func (x *RebootSystemVmRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_systemvm_v1_systemvm_gen_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RebootSystemVmRequest.ProtoReflect.Descriptor instead.
func (*RebootSystemVmRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_systemvm_v1_systemvm_gen_proto_rawDescGZIP(), []int{8}
}

func (x *RebootSystemVmRequest) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *RebootSystemVmRequest) GetForced() bool {
	if x != nil && x.Forced != nil {
		return *x.Forced
	}
	return false
}

func (x *RebootSystemVmRequest) GetStartEventId() int64 {
	if x != nil && x.StartEventId != nil {
		return *x.StartEventId
	}
	return 0
}

func (x *RebootSystemVmRequest) GetInjectedJobId() string {
	if x != nil && x.InjectedJobId != nil {
		return *x.InjectedJobId
	}
	return ""
}

func (x *RebootSystemVmRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// RebootSystemVmResponse represents the response from reboots a system vm.
type RebootSystemVmResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Result
	Result        *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RebootSystemVmResponse) Reset() {
	*x = RebootSystemVmResponse{}
	mi := &file_cloudstack_management_systemvm_v1_systemvm_gen_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RebootSystemVmResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RebootSystemVmResponse) ProtoMessage() {}

func (x *RebootSystemVmResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_systemvm_v1_systemvm_gen_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RebootSystemVmResponse.ProtoReflect.Descriptor instead.
func (*RebootSystemVmResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_systemvm_v1_systemvm_gen_proto_rawDescGZIP(), []int{9}
}

func (x *RebootSystemVmResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// StartSystemVMRequest represents the parameters for starts a system virtual machine.
type StartSystemVMRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the system virtual machine
	Id *int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	StartEventId *int64 `protobuf:"varint,2,opt,name=start_event_id,json=startEventId" json:"start_event_id,omitempty"`
	InjectedJobId *string `protobuf:"bytes,3,opt,name=injected_job_id,json=injectedJobId" json:"injected_job_id,omitempty"`
	ResponseType  *string `protobuf:"bytes,4,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartSystemVMRequest) Reset() {
	*x = StartSystemVMRequest{}
	mi := &file_cloudstack_management_systemvm_v1_systemvm_gen_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartSystemVMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartSystemVMRequest) ProtoMessage() {}

func (x *StartSystemVMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_systemvm_v1_systemvm_gen_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartSystemVMRequest.ProtoReflect.Descriptor instead.
func (*StartSystemVMRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_systemvm_v1_systemvm_gen_proto_rawDescGZIP(), []int{10}
}

func (x *StartSystemVMRequest) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *StartSystemVMRequest) GetStartEventId() int64 {
	if x != nil && x.StartEventId != nil {
		return *x.StartEventId
	}
	return 0
}

func (x *StartSystemVMRequest) GetInjectedJobId() string {
	if x != nil && x.InjectedJobId != nil {
		return *x.InjectedJobId
	}
	return ""
}

func (x *StartSystemVMRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// StartSystemVMResponse represents the response from starts a system virtual machine.
type StartSystemVMResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Result
	Result        *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartSystemVMResponse) Reset() {
	*x = StartSystemVMResponse{}
	mi := &file_cloudstack_management_systemvm_v1_systemvm_gen_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartSystemVMResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartSystemVMResponse) ProtoMessage() {}

func (x *StartSystemVMResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_systemvm_v1_systemvm_gen_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartSystemVMResponse.ProtoReflect.Descriptor instead.
func (*StartSystemVMResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_systemvm_v1_systemvm_gen_proto_rawDescGZIP(), []int{11}
}

func (x *StartSystemVMResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// DestroySystemVmRequest represents the parameters for destroys a system virtual machine.
type DestroySystemVmRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the system virtual machine
	Id *int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	StartEventId *int64 `protobuf:"varint,2,opt,name=start_event_id,json=startEventId" json:"start_event_id,omitempty"`
	InjectedJobId *string `protobuf:"bytes,3,opt,name=injected_job_id,json=injectedJobId" json:"injected_job_id,omitempty"`
	ResponseType  *string `protobuf:"bytes,4,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DestroySystemVmRequest) Reset() {
	*x = DestroySystemVmRequest{}
	mi := &file_cloudstack_management_systemvm_v1_systemvm_gen_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DestroySystemVmRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestroySystemVmRequest) ProtoMessage() {}

func (x *DestroySystemVmRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_systemvm_v1_systemvm_gen_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestroySystemVmRequest.ProtoReflect.Descriptor instead.
func (*DestroySystemVmRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_systemvm_v1_systemvm_gen_proto_rawDescGZIP(), []int{12}
}

func (x *DestroySystemVmRequest) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *DestroySystemVmRequest) GetStartEventId() int64 {
	if x != nil && x.StartEventId != nil {
		return *x.StartEventId
	}
	return 0
}

func (x *DestroySystemVmRequest) GetInjectedJobId() string {
	if x != nil && x.InjectedJobId != nil {
		return *x.InjectedJobId
	}
	return ""
}

func (x *DestroySystemVmRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// DestroySystemVmResponse represents the response from destroys a system virtual machine.
type DestroySystemVmResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Result
	Result        *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DestroySystemVmResponse) Reset() {
	*x = DestroySystemVmResponse{}
	mi := &file_cloudstack_management_systemvm_v1_systemvm_gen_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DestroySystemVmResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestroySystemVmResponse) ProtoMessage() {}

func (x *DestroySystemVmResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_systemvm_v1_systemvm_gen_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestroySystemVmResponse.ProtoReflect.Descriptor instead.
func (*DestroySystemVmResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_systemvm_v1_systemvm_gen_proto_rawDescGZIP(), []int{13}
}

func (x *DestroySystemVmResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// ScaleSystemVMRequest represents the parameters for scale the service offering for a system vm (console proxy or secondary storage). the system vm must be in a "stopped" state for this command to take effect.
type ScaleSystemVMRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the system vm
	Id *int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// the service offering ID to apply to the system vm
	ServiceOfferingId *int64 `protobuf:"varint,2,opt,name=service_offering_id,json=serviceOfferingId" json:"service_offering_id,omitempty"`
	// name value pairs of custom parameters for cpuspeed, memory and cpunumber. example details[i].name=value
	Details map[string]string `protobuf:"bytes,3,rep,name=details" json:"details,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	StartEventId *int64 `protobuf:"varint,4,opt,name=start_event_id,json=startEventId" json:"start_event_id,omitempty"`
	InjectedJobId *string `protobuf:"bytes,5,opt,name=injected_job_id,json=injectedJobId" json:"injected_job_id,omitempty"`
	ResponseType  *string `protobuf:"bytes,6,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScaleSystemVMRequest) Reset() {
	*x = ScaleSystemVMRequest{}
	mi := &file_cloudstack_management_systemvm_v1_systemvm_gen_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScaleSystemVMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScaleSystemVMRequest) ProtoMessage() {}

func (x *ScaleSystemVMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_systemvm_v1_systemvm_gen_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScaleSystemVMRequest.ProtoReflect.Descriptor instead.
func (*ScaleSystemVMRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_systemvm_v1_systemvm_gen_proto_rawDescGZIP(), []int{14}
}

func (x *ScaleSystemVMRequest) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *ScaleSystemVMRequest) GetServiceOfferingId() int64 {
	if x != nil && x.ServiceOfferingId != nil {
		return *x.ServiceOfferingId
	}
	return 0
}

func (x *ScaleSystemVMRequest) GetDetails() map[string]string {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *ScaleSystemVMRequest) GetStartEventId() int64 {
	if x != nil && x.StartEventId != nil {
		return *x.StartEventId
	}
	return 0
}

func (x *ScaleSystemVMRequest) GetInjectedJobId() string {
	if x != nil && x.InjectedJobId != nil {
		return *x.InjectedJobId
	}
	return ""
}

func (x *ScaleSystemVMRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// ScaleSystemVMResponse represents the response from scale the service offering for a system vm (console proxy or secondary storage). the system vm must be in a "stopped" state for this command to take effect.
type ScaleSystemVMResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Result
	Result        *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScaleSystemVMResponse) Reset() {
	*x = ScaleSystemVMResponse{}
	mi := &file_cloudstack_management_systemvm_v1_systemvm_gen_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScaleSystemVMResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScaleSystemVMResponse) ProtoMessage() {}

func (x *ScaleSystemVMResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_systemvm_v1_systemvm_gen_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScaleSystemVMResponse.ProtoReflect.Descriptor instead.
func (*ScaleSystemVMResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_systemvm_v1_systemvm_gen_proto_rawDescGZIP(), []int{15}
}

func (x *ScaleSystemVMResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// MigrateSystemVMRequest represents the parameters for attempts migration of a system virtual machine to the host specified.
type MigrateSystemVMRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// destination Host ID to migrate VM to
	HostId *int64 `protobuf:"varint,1,opt,name=host_id,json=hostId" json:"host_id,omitempty"`
	// the ID of the virtual machine
	VirtualMachineId *int64 `protobuf:"varint,2,opt,name=virtual_machine_id,json=virtualMachineId" json:"virtual_machine_id,omitempty"`
	// Destination storage pool ID to migrate VM volumes to. Required for migrating the root disk volume
	StorageId *int64 `protobuf:"varint,3,opt,name=storage_id,json=storageId" json:"storage_id,omitempty"`
	// Automatically select a destination host which do not require storage migration, if hostId and storageId are not specified. false by default
	AutoSelect *bool `protobuf:"varint,4,opt,name=auto_select,json=autoSelect" json:"auto_select,omitempty"`
	StartEventId *int64 `protobuf:"varint,5,opt,name=start_event_id,json=startEventId" json:"start_event_id,omitempty"`
	InjectedJobId *string `protobuf:"bytes,6,opt,name=injected_job_id,json=injectedJobId" json:"injected_job_id,omitempty"`
	ResponseType  *string `protobuf:"bytes,7,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MigrateSystemVMRequest) Reset() {
	*x = MigrateSystemVMRequest{}
	mi := &file_cloudstack_management_systemvm_v1_systemvm_gen_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MigrateSystemVMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MigrateSystemVMRequest) ProtoMessage() {}

func (x *MigrateSystemVMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_systemvm_v1_systemvm_gen_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MigrateSystemVMRequest.ProtoReflect.Descriptor instead.
func (*MigrateSystemVMRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_systemvm_v1_systemvm_gen_proto_rawDescGZIP(), []int{16}
}

func (x *MigrateSystemVMRequest) GetHostId() int64 {
	if x != nil && x.HostId != nil {
		return *x.HostId
	}
	return 0
}

func (x *MigrateSystemVMRequest) GetVirtualMachineId() int64 {
	if x != nil && x.VirtualMachineId != nil {
		return *x.VirtualMachineId
	}
	return 0
}

func (x *MigrateSystemVMRequest) GetStorageId() int64 {
	if x != nil && x.StorageId != nil {
		return *x.StorageId
	}
	return 0
}

func (x *MigrateSystemVMRequest) GetAutoSelect() bool {
	if x != nil && x.AutoSelect != nil {
		return *x.AutoSelect
	}
	return false
}

func (x *MigrateSystemVMRequest) GetStartEventId() int64 {
	if x != nil && x.StartEventId != nil {
		return *x.StartEventId
	}
	return 0
}

func (x *MigrateSystemVMRequest) GetInjectedJobId() string {
	if x != nil && x.InjectedJobId != nil {
		return *x.InjectedJobId
	}
	return ""
}

func (x *MigrateSystemVMRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// MigrateSystemVMResponse represents the response from attempts migration of a system virtual machine to the host specified.
type MigrateSystemVMResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Result
	Result        *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MigrateSystemVMResponse) Reset() {
	*x = MigrateSystemVMResponse{}
	mi := &file_cloudstack_management_systemvm_v1_systemvm_gen_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MigrateSystemVMResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MigrateSystemVMResponse) ProtoMessage() {}

func (x *MigrateSystemVMResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_systemvm_v1_systemvm_gen_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MigrateSystemVMResponse.ProtoReflect.Descriptor instead.
func (*MigrateSystemVMResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_systemvm_v1_systemvm_gen_proto_rawDescGZIP(), []int{17}
}

func (x *MigrateSystemVMResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// SystemVm represents a SystemVm Item
type SystemVm struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the SystemVm
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// The name of the SystemVm
	Name *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// The display name of the SystemVm
	DisplayName *string `protobuf:"bytes,3,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	// The description of the SystemVm
	Description *string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	// The date this entity was created
	Created       *string `protobuf:"bytes,5,opt,name=created" json:"created,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SystemVm) Reset() {
	*x = SystemVm{}
	mi := &file_cloudstack_management_systemvm_v1_systemvm_gen_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemVm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemVm) ProtoMessage() {}

func (x *SystemVm) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_systemvm_v1_systemvm_gen_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemVm.ProtoReflect.Descriptor instead.
func (*SystemVm) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_systemvm_v1_systemvm_gen_proto_rawDescGZIP(), []int{18}
}

func (x *SystemVm) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *SystemVm) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *SystemVm) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *SystemVm) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *SystemVm) GetCreated() string {
	if x != nil && x.Created != nil {
		return *x.Created
	}
	return ""
}

// Success represents a Success Operation Response
type Success struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// true if operation is executed successfully
	Success *bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	// any text associated with the success or failure
	DisplayText   *string `protobuf:"bytes,2,opt,name=display_text,json=displayText" json:"display_text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Success) Reset() {
	*x = Success{}
	mi := &file_cloudstack_management_systemvm_v1_systemvm_gen_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Success) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Success) ProtoMessage() {}

func (x *Success) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_systemvm_v1_systemvm_gen_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Success.ProtoReflect.Descriptor instead.
func (*Success) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_systemvm_v1_systemvm_gen_proto_rawDescGZIP(), []int{19}
}

func (x *Success) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *Success) GetDisplayText() string {
	if x != nil && x.DisplayText != nil {
		return *x.DisplayText
	}
	return ""
}

// Item represents a generic item in a list response
type Item struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the item
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// The name of the item
	Name *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// The display name of the item
	DisplayName *string `protobuf:"bytes,3,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	// The description of the item
	Description *string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	// The account ID the item belongs to
	AccountId *string `protobuf:"bytes,5,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	// The domain ID the item belongs to
	DomainId *string `protobuf:"bytes,6,opt,name=domain_id,json=domainId" json:"domain_id,omitempty"`
	// The domain name the item belongs to
	Domain *string `protobuf:"bytes,7,opt,name=domain" json:"domain,omitempty"`
	// The project ID the item belongs to
	ProjectId *string `protobuf:"bytes,8,opt,name=project_id,json=projectId" json:"project_id,omitempty"`
	// The project name the item belongs to
	Project *string `protobuf:"bytes,9,opt,name=project" json:"project,omitempty"`
	// The date the item was created
	Created *string `protobuf:"bytes,10,opt,name=created" json:"created,omitempty"`
	// The state of the item
	State *string `protobuf:"bytes,11,opt,name=state" json:"state,omitempty"`
	// Additional fields returned by the API
	Details       map[string]string `protobuf:"bytes,12,rep,name=details" json:"details,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Item) Reset() {
	*x = Item{}
	mi := &file_cloudstack_management_systemvm_v1_systemvm_gen_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_systemvm_v1_systemvm_gen_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_systemvm_v1_systemvm_gen_proto_rawDescGZIP(), []int{20}
}

func (x *Item) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Item) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Item) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *Item) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *Item) GetAccountId() string {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return ""
}

func (x *Item) GetDomainId() string {
	if x != nil && x.DomainId != nil {
		return *x.DomainId
	}
	return ""
}

func (x *Item) GetDomain() string {
	if x != nil && x.Domain != nil {
		return *x.Domain
	}
	return ""
}

func (x *Item) GetProjectId() string {
	if x != nil && x.ProjectId != nil {
		return *x.ProjectId
	}
	return ""
}

func (x *Item) GetProject() string {
	if x != nil && x.Project != nil {
		return *x.Project
	}
	return ""
}

func (x *Item) GetCreated() string {
	if x != nil && x.Created != nil {
		return *x.Created
	}
	return ""
}

func (x *Item) GetState() string {
	if x != nil && x.State != nil {
		return *x.State
	}
	return ""
}

func (x *Item) GetDetails() map[string]string {
	if x != nil {
		return x.Details
	}
	return nil
}

// Result represents a generic operation result
type Result struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether the operation was successful
	Success *bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	// Any text associated with the success or failure
	DisplayText *string `protobuf:"bytes,2,opt,name=display_text,json=displayText" json:"display_text,omitempty"`
	// The ID of the resource affected by the operation
	Id *string `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	// The job ID for an async operation
	JobId *string `protobuf:"bytes,4,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
	// The status of the job
	JobStatus     *string `protobuf:"bytes,5,opt,name=job_status,json=jobStatus" json:"job_status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Result) Reset() {
	*x = Result{}
	mi := &file_cloudstack_management_systemvm_v1_systemvm_gen_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_systemvm_v1_systemvm_gen_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_systemvm_v1_systemvm_gen_proto_rawDescGZIP(), []int{21}
}

func (x *Result) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *Result) GetDisplayText() string {
	if x != nil && x.DisplayText != nil {
		return *x.DisplayText
	}
	return ""
}

func (x *Result) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Result) GetJobId() string {
	if x != nil && x.JobId != nil {
		return *x.JobId
	}
	return ""
}

func (x *Result) GetJobStatus() string {
	if x != nil && x.JobStatus != nil {
		return *x.JobStatus
	}
	return ""
}

var File_cloudstack_management_systemvm_v1_systemvm_gen_proto protoreflect.FileDescriptor

const file_cloudstack_management_systemvm_v1_systemvm_gen_proto_rawDesc = "" +
	"\n" +
	"4cloudstack/management/systemvm/v1/systemvm.gen.proto\x12!cloudstack.management.systemvm.v1\x1a(cloudstack/annotations/annotations.proto\x1a\"cloudstack/validate/validate.proto\x1a google/protobuf/descriptor.proto\"\xab\x02\n" +
	"\x16UpgradeSystemVMRequest\x12\x16\n" +
	"\x02id\x18\x01 \x01(\x03B\x06\xbaH\x03\xc8\x01\x01R\x02id\x126\n" +
	"\x13service_offering_id\x18\x02 \x01(\x03B\x06\xbaH\x03\xc8\x01\x01R\x11serviceOfferingId\x12`\n" +
	"\adetails\x18\x03 \x03(\v2F.cloudstack.management.systemvm.v1.UpgradeSystemVMRequest.DetailsEntryR\adetails\x12#\n" +
	"\rresponse_type\x18\x04 \x01(\tR\fresponseType\x1a:\n" +
	"\fDetailsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\\\n" +
	"\x17UpgradeSystemVMResponse\x12A\n" +
	"\x06result\x18\x01 \x01(\v2).cloudstack.management.systemvm.v1.ResultR\x06result\"\xec\x02\n" +
	"\x14ListSystemVMsRequest\x12\x17\n" +
	"\ahost_id\x18\x01 \x01(\x03R\x06hostId\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\x03R\x02id\x120\n" +
	"\x0esystem_vm_name\x18\x03 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x01\x18\xff\x01R\fsystemVmName\x12\x15\n" +
	"\x06pod_id\x18\x04 \x01(\x03R\x05podId\x12\x14\n" +
	"\x05state\x18\x05 \x01(\tR\x05state\x12$\n" +
	"\x0esystem_vm_type\x18\x06 \x01(\tR\fsystemVmType\x12\x17\n" +
	"\azone_id\x18\a \x01(\x03R\x06zoneId\x12\x1d\n" +
	"\n" +
	"storage_id\x18\b \x01(\x03R\tstorageId\x12\x18\n" +
	"\akeyword\x18\t \x01(\tR\akeyword\x12\x12\n" +
	"\x04page\x18\n" +
	" \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\v \x01(\x05R\bpageSize\x12#\n" +
	"\rresponse_type\x18\f \x01(\tR\fresponseType\"\x82\x01\n" +
	"\x15ListSystemVMsResponse\x12A\n" +
	"\x05items\x18\x01 \x03(\v2+.cloudstack.management.systemvm.v1.SystemVmR\x05items\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount:\x05\xbaH\x02\b\x00\"\xc9\x01\n" +
	"\x13StopSystemVmRequest\x12\x16\n" +
	"\x02id\x18\x01 \x01(\x03B\x06\xbaH\x03\xc8\x01\x01R\x02id\x12\x1d\n" +
	"\x06forced\x18\x02 \x01(\bB\x05\xaa\x01\x02\b\x01R\x06forced\x12$\n" +
	"\x0estart_event_id\x18\x03 \x01(\x03R\fstartEventId\x120\n" +
	"\x0finjected_job_id\x18\x04 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\rinjectedJobId\x12#\n" +
	"\rresponse_type\x18\x05 \x01(\tR\fresponseType\"Y\n" +
	"\x14StopSystemVmResponse\x12A\n" +
	"\x06result\x18\x01 \x01(\v2).cloudstack.management.systemvm.v1.ResultR\x06result\"\xc0\x01\n" +
	"\x14PatchSystemVMRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x1b\n" +
	"\x05force\x18\x02 \x01(\bB\x05\xaa\x01\x02\b\x01R\x05force\x12$\n" +
	"\x0estart_event_id\x18\x03 \x01(\x03R\fstartEventId\x120\n" +
	"\x0finjected_job_id\x18\x04 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\rinjectedJobId\x12#\n" +
	"\rresponse_type\x18\x05 \x01(\tR\fresponseType\"Z\n" +
	"\x15PatchSystemVMResponse\x12A\n" +
	"\x06result\x18\x01 \x01(\v2).cloudstack.management.systemvm.v1.ResultR\x06result\"\xcb\x01\n" +
	"\x15RebootSystemVmRequest\x12\x16\n" +
	"\x02id\x18\x01 \x01(\x03B\x06\xbaH\x03\xc8\x01\x01R\x02id\x12\x1d\n" +
	"\x06forced\x18\x02 \x01(\bB\x05\xaa\x01\x02\b\x01R\x06forced\x12$\n" +
	"\x0estart_event_id\x18\x03 \x01(\x03R\fstartEventId\x120\n" +
	"\x0finjected_job_id\x18\x04 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\rinjectedJobId\x12#\n" +
	"\rresponse_type\x18\x05 \x01(\tR\fresponseType\"[\n" +
	"\x16RebootSystemVmResponse\x12A\n" +
	"\x06result\x18\x01 \x01(\v2).cloudstack.management.systemvm.v1.ResultR\x06result\"\xab\x01\n" +
	"\x14StartSystemVMRequest\x12\x16\n" +
	"\x02id\x18\x01 \x01(\x03B\x06\xbaH\x03\xc8\x01\x01R\x02id\x12$\n" +
	"\x0estart_event_id\x18\x02 \x01(\x03R\fstartEventId\x120\n" +
	"\x0finjected_job_id\x18\x03 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\rinjectedJobId\x12#\n" +
	"\rresponse_type\x18\x04 \x01(\tR\fresponseType\"Z\n" +
	"\x15StartSystemVMResponse\x12A\n" +
	"\x06result\x18\x01 \x01(\v2).cloudstack.management.systemvm.v1.ResultR\x06result\"\xad\x01\n" +
	"\x16DestroySystemVmRequest\x12\x16\n" +
	"\x02id\x18\x01 \x01(\x03B\x06\xbaH\x03\xc8\x01\x01R\x02id\x12$\n" +
	"\x0estart_event_id\x18\x02 \x01(\x03R\fstartEventId\x120\n" +
	"\x0finjected_job_id\x18\x03 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\rinjectedJobId\x12#\n" +
	"\rresponse_type\x18\x04 \x01(\tR\fresponseType\"\\\n" +
	"\x17DestroySystemVmResponse\x12A\n" +
	"\x06result\x18\x01 \x01(\v2).cloudstack.management.systemvm.v1.ResultR\x06result\"\xff\x02\n" +
	"\x14ScaleSystemVMRequest\x12\x16\n" +
	"\x02id\x18\x01 \x01(\x03B\x06\xbaH\x03\xc8\x01\x01R\x02id\x126\n" +
	"\x13service_offering_id\x18\x02 \x01(\x03B\x06\xbaH\x03\xc8\x01\x01R\x11serviceOfferingId\x12^\n" +
	"\adetails\x18\x03 \x03(\v2D.cloudstack.management.systemvm.v1.ScaleSystemVMRequest.DetailsEntryR\adetails\x12$\n" +
	"\x0estart_event_id\x18\x04 \x01(\x03R\fstartEventId\x120\n" +
	"\x0finjected_job_id\x18\x05 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\rinjectedJobId\x12#\n" +
	"\rresponse_type\x18\x06 \x01(\tR\fresponseType\x1a:\n" +
	"\fDetailsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"Z\n" +
	"\x15ScaleSystemVMResponse\x12A\n" +
	"\x06result\x18\x01 \x01(\v2).cloudstack.management.systemvm.v1.ResultR\x06result\"\xab\x02\n" +
	"\x16MigrateSystemVMRequest\x12\x17\n" +
	"\ahost_id\x18\x01 \x01(\x03R\x06hostId\x124\n" +
	"\x12virtual_machine_id\x18\x02 \x01(\x03B\x06\xbaH\x03\xc8\x01\x01R\x10virtualMachineId\x12\x1d\n" +
	"\n" +
	"storage_id\x18\x03 \x01(\x03R\tstorageId\x12&\n" +
	"\vauto_select\x18\x04 \x01(\bB\x05\xaa\x01\x02\b\x01R\n" +
	"autoSelect\x12$\n" +
	"\x0estart_event_id\x18\x05 \x01(\x03R\fstartEventId\x120\n" +
	"\x0finjected_job_id\x18\x06 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\rinjectedJobId\x12#\n" +
	"\rresponse_type\x18\a \x01(\tR\fresponseType\"\\\n" +
	"\x17MigrateSystemVMResponse\x12A\n" +
	"\x06result\x18\x01 \x01(\v2).cloudstack.management.systemvm.v1.ResultR\x06result\"\x97\x01\n" +
	"\bSystemVm\x12\x18\n" +
	"\x02id\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12!\n" +
	"\fdisplay_name\x18\x03 \x01(\tR\vdisplayName\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x18\n" +
	"\acreated\x18\x05 \x01(\tR\acreated\"F\n" +
	"\aSuccess\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12!\n" +
	"\fdisplay_text\x18\x02 \x01(\tR\vdisplayText\"\xe0\x03\n" +
	"\x04Item\x12\x18\n" +
	"\x02id\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12!\n" +
	"\fdisplay_name\x18\x03 \x01(\tR\vdisplayName\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12'\n" +
	"\n" +
	"account_id\x18\x05 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\taccountId\x12%\n" +
	"\tdomain_id\x18\x06 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\bdomainId\x12\x16\n" +
	"\x06domain\x18\a \x01(\tR\x06domain\x12'\n" +
	"\n" +
	"project_id\x18\b \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\tprojectId\x12\x18\n" +
	"\aproject\x18\t \x01(\tR\aproject\x12\x18\n" +
	"\acreated\x18\n" +
	" \x01(\tR\acreated\x12\x14\n" +
	"\x05state\x18\v \x01(\tR\x05state\x12N\n" +
	"\adetails\x18\f \x03(\v24.cloudstack.management.systemvm.v1.Item.DetailsEntryR\adetails\x1a:\n" +
	"\fDetailsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x9f\x01\n" +
	"\x06Result\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12!\n" +
	"\fdisplay_text\x18\x02 \x01(\tR\vdisplayText\x12\x18\n" +
	"\x02id\x18\x03 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x02id\x12\x1f\n" +
	"\x06job_id\x18\x04 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x05jobId\x12\x1d\n" +
	"\n" +
	"job_status\x18\x05 \x01(\tR\tjobStatus2\xea\t\n" +
	"\x0fSystemvmService\x12\x8a\x01\n" +
	"\x0fUpgradeSystemVM\x129.cloudstack.management.systemvm.v1.UpgradeSystemVMRequest\x1a:.cloudstack.management.systemvm.v1.UpgradeSystemVMResponse\"\x00\x12\x84\x01\n" +
	"\rListSystemVMs\x127.cloudstack.management.systemvm.v1.ListSystemVMsRequest\x1a8.cloudstack.management.systemvm.v1.ListSystemVMsResponse\"\x00\x12\x81\x01\n" +
	"\fStopSystemVm\x126.cloudstack.management.systemvm.v1.StopSystemVmRequest\x1a7.cloudstack.management.systemvm.v1.StopSystemVmResponse\"\x00\x12\x84\x01\n" +
	"\rPatchSystemVM\x127.cloudstack.management.systemvm.v1.PatchSystemVMRequest\x1a8.cloudstack.management.systemvm.v1.PatchSystemVMResponse\"\x00\x12\x87\x01\n" +
	"\x0eRebootSystemVm\x128.cloudstack.management.systemvm.v1.RebootSystemVmRequest\x1a9.cloudstack.management.systemvm.v1.RebootSystemVmResponse\"\x00\x12\x84\x01\n" +
	"\rStartSystemVM\x127.cloudstack.management.systemvm.v1.StartSystemVMRequest\x1a8.cloudstack.management.systemvm.v1.StartSystemVMResponse\"\x00\x12\x8a\x01\n" +
	"\x0fDestroySystemVm\x129.cloudstack.management.systemvm.v1.DestroySystemVmRequest\x1a:.cloudstack.management.systemvm.v1.DestroySystemVmResponse\"\x00\x12\x84\x01\n" +
	"\rScaleSystemVM\x127.cloudstack.management.systemvm.v1.ScaleSystemVMRequest\x1a8.cloudstack.management.systemvm.v1.ScaleSystemVMResponse\"\x00\x12\x8a\x01\n" +
	"\x0fMigrateSystemVM\x129.cloudstack.management.systemvm.v1.MigrateSystemVMRequest\x1a:.cloudstack.management.systemvm.v1.MigrateSystemVMResponse\"\x00\x1a\x06\xc2>\x03\xc0>\x02B\xc2\x02\n" +
	"%com.cloudstack.management.systemvm.v1B\x10SystemvmGenProtoP\x01Z`github.com/walteh/cloudstack-proxy/gen/proto/golang/cloudstack/management/systemvm/v1;systemvmv1\xa2\x02\x03CMS\xaa\x02!Cloudstack.Management.Systemvm.V1\xca\x02!Cloudstack\\Management\\Systemvm\\V1\xe2\x02-Cloudstack\\Management\\Systemvm\\V1\\GPBMetadata\xea\x02$Cloudstack::Management::Systemvm::V1b\beditionsp\xe8\a"

var (
	file_cloudstack_management_systemvm_v1_systemvm_gen_proto_rawDescOnce sync.Once
	file_cloudstack_management_systemvm_v1_systemvm_gen_proto_rawDescData []byte
)

func file_cloudstack_management_systemvm_v1_systemvm_gen_proto_rawDescGZIP() []byte {
	file_cloudstack_management_systemvm_v1_systemvm_gen_proto_rawDescOnce.Do(func() {
		file_cloudstack_management_systemvm_v1_systemvm_gen_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_cloudstack_management_systemvm_v1_systemvm_gen_proto_rawDesc), len(file_cloudstack_management_systemvm_v1_systemvm_gen_proto_rawDesc)))
	})
	return file_cloudstack_management_systemvm_v1_systemvm_gen_proto_rawDescData
}

var file_cloudstack_management_systemvm_v1_systemvm_gen_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_cloudstack_management_systemvm_v1_systemvm_gen_proto_goTypes = []any{
	(*UpgradeSystemVMRequest)(nil),  // 0: cloudstack.management.systemvm.v1.UpgradeSystemVMRequest
	(*UpgradeSystemVMResponse)(nil), // 1: cloudstack.management.systemvm.v1.UpgradeSystemVMResponse
	(*ListSystemVMsRequest)(nil),    // 2: cloudstack.management.systemvm.v1.ListSystemVMsRequest
	(*ListSystemVMsResponse)(nil),   // 3: cloudstack.management.systemvm.v1.ListSystemVMsResponse
	(*StopSystemVmRequest)(nil),     // 4: cloudstack.management.systemvm.v1.StopSystemVmRequest
	(*StopSystemVmResponse)(nil),    // 5: cloudstack.management.systemvm.v1.StopSystemVmResponse
	(*PatchSystemVMRequest)(nil),    // 6: cloudstack.management.systemvm.v1.PatchSystemVMRequest
	(*PatchSystemVMResponse)(nil),   // 7: cloudstack.management.systemvm.v1.PatchSystemVMResponse
	(*RebootSystemVmRequest)(nil),   // 8: cloudstack.management.systemvm.v1.RebootSystemVmRequest
	(*RebootSystemVmResponse)(nil),  // 9: cloudstack.management.systemvm.v1.RebootSystemVmResponse
	(*StartSystemVMRequest)(nil),    // 10: cloudstack.management.systemvm.v1.StartSystemVMRequest
	(*StartSystemVMResponse)(nil),   // 11: cloudstack.management.systemvm.v1.StartSystemVMResponse
	(*DestroySystemVmRequest)(nil),  // 12: cloudstack.management.systemvm.v1.DestroySystemVmRequest
	(*DestroySystemVmResponse)(nil), // 13: cloudstack.management.systemvm.v1.DestroySystemVmResponse
	(*ScaleSystemVMRequest)(nil),    // 14: cloudstack.management.systemvm.v1.ScaleSystemVMRequest
	(*ScaleSystemVMResponse)(nil),   // 15: cloudstack.management.systemvm.v1.ScaleSystemVMResponse
	(*MigrateSystemVMRequest)(nil),  // 16: cloudstack.management.systemvm.v1.MigrateSystemVMRequest
	(*MigrateSystemVMResponse)(nil), // 17: cloudstack.management.systemvm.v1.MigrateSystemVMResponse
	(*SystemVm)(nil),                // 18: cloudstack.management.systemvm.v1.SystemVm
	(*Success)(nil),                 // 19: cloudstack.management.systemvm.v1.Success
	(*Item)(nil),                    // 20: cloudstack.management.systemvm.v1.Item
	(*Result)(nil),                  // 21: cloudstack.management.systemvm.v1.Result
	nil,                             // 22: cloudstack.management.systemvm.v1.UpgradeSystemVMRequest.DetailsEntry
	nil,                             // 23: cloudstack.management.systemvm.v1.ScaleSystemVMRequest.DetailsEntry
	nil,                             // 24: cloudstack.management.systemvm.v1.Item.DetailsEntry
}
var file_cloudstack_management_systemvm_v1_systemvm_gen_proto_depIdxs = []int32{
	22, // 0: cloudstack.management.systemvm.v1.UpgradeSystemVMRequest.details:type_name -> cloudstack.management.systemvm.v1.UpgradeSystemVMRequest.DetailsEntry
	21, // 1: cloudstack.management.systemvm.v1.UpgradeSystemVMResponse.result:type_name -> cloudstack.management.systemvm.v1.Result
	18, // 2: cloudstack.management.systemvm.v1.ListSystemVMsResponse.items:type_name -> cloudstack.management.systemvm.v1.SystemVm
	21, // 3: cloudstack.management.systemvm.v1.StopSystemVmResponse.result:type_name -> cloudstack.management.systemvm.v1.Result
	21, // 4: cloudstack.management.systemvm.v1.PatchSystemVMResponse.result:type_name -> cloudstack.management.systemvm.v1.Result
	21, // 5: cloudstack.management.systemvm.v1.RebootSystemVmResponse.result:type_name -> cloudstack.management.systemvm.v1.Result
	21, // 6: cloudstack.management.systemvm.v1.StartSystemVMResponse.result:type_name -> cloudstack.management.systemvm.v1.Result
	21, // 7: cloudstack.management.systemvm.v1.DestroySystemVmResponse.result:type_name -> cloudstack.management.systemvm.v1.Result
	23, // 8: cloudstack.management.systemvm.v1.ScaleSystemVMRequest.details:type_name -> cloudstack.management.systemvm.v1.ScaleSystemVMRequest.DetailsEntry
	21, // 9: cloudstack.management.systemvm.v1.ScaleSystemVMResponse.result:type_name -> cloudstack.management.systemvm.v1.Result
	21, // 10: cloudstack.management.systemvm.v1.MigrateSystemVMResponse.result:type_name -> cloudstack.management.systemvm.v1.Result
	24, // 11: cloudstack.management.systemvm.v1.Item.details:type_name -> cloudstack.management.systemvm.v1.Item.DetailsEntry
	0,  // 12: cloudstack.management.systemvm.v1.SystemvmService.UpgradeSystemVM:input_type -> cloudstack.management.systemvm.v1.UpgradeSystemVMRequest
	2,  // 13: cloudstack.management.systemvm.v1.SystemvmService.ListSystemVMs:input_type -> cloudstack.management.systemvm.v1.ListSystemVMsRequest
	4,  // 14: cloudstack.management.systemvm.v1.SystemvmService.StopSystemVm:input_type -> cloudstack.management.systemvm.v1.StopSystemVmRequest
	6,  // 15: cloudstack.management.systemvm.v1.SystemvmService.PatchSystemVM:input_type -> cloudstack.management.systemvm.v1.PatchSystemVMRequest
	8,  // 16: cloudstack.management.systemvm.v1.SystemvmService.RebootSystemVm:input_type -> cloudstack.management.systemvm.v1.RebootSystemVmRequest
	10, // 17: cloudstack.management.systemvm.v1.SystemvmService.StartSystemVM:input_type -> cloudstack.management.systemvm.v1.StartSystemVMRequest
	12, // 18: cloudstack.management.systemvm.v1.SystemvmService.DestroySystemVm:input_type -> cloudstack.management.systemvm.v1.DestroySystemVmRequest
	14, // 19: cloudstack.management.systemvm.v1.SystemvmService.ScaleSystemVM:input_type -> cloudstack.management.systemvm.v1.ScaleSystemVMRequest
	16, // 20: cloudstack.management.systemvm.v1.SystemvmService.MigrateSystemVM:input_type -> cloudstack.management.systemvm.v1.MigrateSystemVMRequest
	1,  // 21: cloudstack.management.systemvm.v1.SystemvmService.UpgradeSystemVM:output_type -> cloudstack.management.systemvm.v1.UpgradeSystemVMResponse
	3,  // 22: cloudstack.management.systemvm.v1.SystemvmService.ListSystemVMs:output_type -> cloudstack.management.systemvm.v1.ListSystemVMsResponse
	5,  // 23: cloudstack.management.systemvm.v1.SystemvmService.StopSystemVm:output_type -> cloudstack.management.systemvm.v1.StopSystemVmResponse
	7,  // 24: cloudstack.management.systemvm.v1.SystemvmService.PatchSystemVM:output_type -> cloudstack.management.systemvm.v1.PatchSystemVMResponse
	9,  // 25: cloudstack.management.systemvm.v1.SystemvmService.RebootSystemVm:output_type -> cloudstack.management.systemvm.v1.RebootSystemVmResponse
	11, // 26: cloudstack.management.systemvm.v1.SystemvmService.StartSystemVM:output_type -> cloudstack.management.systemvm.v1.StartSystemVMResponse
	13, // 27: cloudstack.management.systemvm.v1.SystemvmService.DestroySystemVm:output_type -> cloudstack.management.systemvm.v1.DestroySystemVmResponse
	15, // 28: cloudstack.management.systemvm.v1.SystemvmService.ScaleSystemVM:output_type -> cloudstack.management.systemvm.v1.ScaleSystemVMResponse
	17, // 29: cloudstack.management.systemvm.v1.SystemvmService.MigrateSystemVM:output_type -> cloudstack.management.systemvm.v1.MigrateSystemVMResponse
	21, // [21:30] is the sub-list for method output_type
	12, // [12:21] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_cloudstack_management_systemvm_v1_systemvm_gen_proto_init() }
func file_cloudstack_management_systemvm_v1_systemvm_gen_proto_init() {
	if File_cloudstack_management_systemvm_v1_systemvm_gen_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_cloudstack_management_systemvm_v1_systemvm_gen_proto_rawDesc), len(file_cloudstack_management_systemvm_v1_systemvm_gen_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cloudstack_management_systemvm_v1_systemvm_gen_proto_goTypes,
		DependencyIndexes: file_cloudstack_management_systemvm_v1_systemvm_gen_proto_depIdxs,
		MessageInfos:      file_cloudstack_management_systemvm_v1_systemvm_gen_proto_msgTypes,
	}.Build()
	File_cloudstack_management_systemvm_v1_systemvm_gen_proto = out.File
	file_cloudstack_management_systemvm_v1_systemvm_gen_proto_goTypes = nil
	file_cloudstack_management_systemvm_v1_systemvm_gen_proto_depIdxs = nil
}
