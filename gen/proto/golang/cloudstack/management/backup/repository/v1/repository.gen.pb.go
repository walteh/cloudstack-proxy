// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: cloudstack/management/backup/repository/v1/repository.gen.proto

package repositoryv1

import (
	_ "github.com/walteh/cloudstack-proxy/gen/proto/golang/buf/validate"
	_ "github.com/walteh/cloudstack-proxy/gen/proto/golang/cloudstack/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// AddBackupRepositoryRequest represents the parameters for adds a backup repository to store nas backups
type AddBackupRepositoryRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// name of the backup repository
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// address of the backup repository
	Address *string `protobuf:"bytes,2,opt,name=address" json:"address,omitempty"`
	// type of the backup repository storage. Supported values: nfs, cephfs, cifs
	Type *string `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	// backup repository provider
	Provider *string `protobuf:"bytes,4,opt,name=provider" json:"provider,omitempty"`
	// shared storage mount options
	MountOptions_ *string `protobuf:"bytes,5,opt,name=mount_options_,json=mountOptions" json:"mount_options_,omitempty"`
	// ID of the zone where the backup repository is to be added
	ZoneId *int64 `protobuf:"varint,6,opt,name=zone_id,json=zoneId" json:"zone_id,omitempty"`
	// capacity of this backup repository
	CapacityBytes *int64 `protobuf:"varint,7,opt,name=capacity_bytes,json=capacityBytes" json:"capacity_bytes,omitempty"`
	ResponseType  *string `protobuf:"bytes,8,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddBackupRepositoryRequest) Reset() {
	*x = AddBackupRepositoryRequest{}
	mi := &file_cloudstack_management_backup_repository_v1_repository_gen_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddBackupRepositoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBackupRepositoryRequest) ProtoMessage() {}

func (x *AddBackupRepositoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_backup_repository_v1_repository_gen_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBackupRepositoryRequest.ProtoReflect.Descriptor instead.
func (*AddBackupRepositoryRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_backup_repository_v1_repository_gen_proto_rawDescGZIP(), []int{0}
}

func (x *AddBackupRepositoryRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *AddBackupRepositoryRequest) GetAddress() string {
	if x != nil && x.Address != nil {
		return *x.Address
	}
	return ""
}

func (x *AddBackupRepositoryRequest) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *AddBackupRepositoryRequest) GetProvider() string {
	if x != nil && x.Provider != nil {
		return *x.Provider
	}
	return ""
}

func (x *AddBackupRepositoryRequest) GetMountOptions_() string {
	if x != nil && x.MountOptions_ != nil {
		return *x.MountOptions_
	}
	return ""
}

func (x *AddBackupRepositoryRequest) GetZoneId() int64 {
	if x != nil && x.ZoneId != nil {
		return *x.ZoneId
	}
	return 0
}

func (x *AddBackupRepositoryRequest) GetCapacityBytes() int64 {
	if x != nil && x.CapacityBytes != nil {
		return *x.CapacityBytes
	}
	return 0
}

func (x *AddBackupRepositoryRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// AddBackupRepositoryResponse represents the response from adds a backup repository to store nas backups
type AddBackupRepositoryResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Result
	Result        *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddBackupRepositoryResponse) Reset() {
	*x = AddBackupRepositoryResponse{}
	mi := &file_cloudstack_management_backup_repository_v1_repository_gen_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddBackupRepositoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBackupRepositoryResponse) ProtoMessage() {}

func (x *AddBackupRepositoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_backup_repository_v1_repository_gen_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBackupRepositoryResponse.ProtoReflect.Descriptor instead.
func (*AddBackupRepositoryResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_backup_repository_v1_repository_gen_proto_rawDescGZIP(), []int{1}
}

func (x *AddBackupRepositoryResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// DeleteBackupRepositoryRequest represents the parameters for delete a backup repository
type DeleteBackupRepositoryRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the backup repository to be deleted
	Id *int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	ResponseType  *string `protobuf:"bytes,2,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteBackupRepositoryRequest) Reset() {
	*x = DeleteBackupRepositoryRequest{}
	mi := &file_cloudstack_management_backup_repository_v1_repository_gen_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteBackupRepositoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBackupRepositoryRequest) ProtoMessage() {}

func (x *DeleteBackupRepositoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_backup_repository_v1_repository_gen_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBackupRepositoryRequest.ProtoReflect.Descriptor instead.
func (*DeleteBackupRepositoryRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_backup_repository_v1_repository_gen_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteBackupRepositoryRequest) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *DeleteBackupRepositoryRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// DeleteBackupRepositoryResponse represents the response from delete a backup repository
type DeleteBackupRepositoryResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Result
	Result        *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteBackupRepositoryResponse) Reset() {
	*x = DeleteBackupRepositoryResponse{}
	mi := &file_cloudstack_management_backup_repository_v1_repository_gen_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteBackupRepositoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBackupRepositoryResponse) ProtoMessage() {}

func (x *DeleteBackupRepositoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_backup_repository_v1_repository_gen_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBackupRepositoryResponse.ProtoReflect.Descriptor instead.
func (*DeleteBackupRepositoryResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_backup_repository_v1_repository_gen_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteBackupRepositoryResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// ListBackupRepositoriesRequest represents the parameters for lists all backup repositories
type ListBackupRepositoriesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// name of the backup repository
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// ID of the zone where the backup repository is to be added
	ZoneId *int64 `protobuf:"varint,2,opt,name=zone_id,json=zoneId" json:"zone_id,omitempty"`
	// the backup repository provider
	Provider *string `protobuf:"bytes,3,opt,name=provider" json:"provider,omitempty"`
	// ID of the backup repository
	Id *int64 `protobuf:"varint,4,opt,name=id" json:"id,omitempty"`
	// List by keyword
	Keyword *string `protobuf:"bytes,5,opt,name=keyword" json:"keyword,omitempty"`
	Page *int32 `protobuf:"varint,6,opt,name=page" json:"page,omitempty"`
	PageSize *int32 `protobuf:"varint,7,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	ResponseType  *string `protobuf:"bytes,8,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListBackupRepositoriesRequest) Reset() {
	*x = ListBackupRepositoriesRequest{}
	mi := &file_cloudstack_management_backup_repository_v1_repository_gen_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListBackupRepositoriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBackupRepositoriesRequest) ProtoMessage() {}

func (x *ListBackupRepositoriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_backup_repository_v1_repository_gen_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBackupRepositoriesRequest.ProtoReflect.Descriptor instead.
func (*ListBackupRepositoriesRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_backup_repository_v1_repository_gen_proto_rawDescGZIP(), []int{4}
}

func (x *ListBackupRepositoriesRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ListBackupRepositoriesRequest) GetZoneId() int64 {
	if x != nil && x.ZoneId != nil {
		return *x.ZoneId
	}
	return 0
}

func (x *ListBackupRepositoriesRequest) GetProvider() string {
	if x != nil && x.Provider != nil {
		return *x.Provider
	}
	return ""
}

func (x *ListBackupRepositoriesRequest) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *ListBackupRepositoriesRequest) GetKeyword() string {
	if x != nil && x.Keyword != nil {
		return *x.Keyword
	}
	return ""
}

func (x *ListBackupRepositoriesRequest) GetPage() int32 {
	if x != nil && x.Page != nil {
		return *x.Page
	}
	return 0
}

func (x *ListBackupRepositoriesRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListBackupRepositoriesRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// ListBackupRepositoriesResponse represents the response from lists all backup repositories
type ListBackupRepositoriesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The list of BackupRepositorys
	Items []*BackupRepository `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	// The total count of BackupRepositorys
	TotalCount    *int32 `protobuf:"varint,2,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListBackupRepositoriesResponse) Reset() {
	*x = ListBackupRepositoriesResponse{}
	mi := &file_cloudstack_management_backup_repository_v1_repository_gen_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListBackupRepositoriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBackupRepositoriesResponse) ProtoMessage() {}

func (x *ListBackupRepositoriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_backup_repository_v1_repository_gen_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBackupRepositoriesResponse.ProtoReflect.Descriptor instead.
func (*ListBackupRepositoriesResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_backup_repository_v1_repository_gen_proto_rawDescGZIP(), []int{5}
}

func (x *ListBackupRepositoriesResponse) GetItems() []*BackupRepository {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListBackupRepositoriesResponse) GetTotalCount() int32 {
	if x != nil && x.TotalCount != nil {
		return *x.TotalCount
	}
	return 0
}

// BackupRepository represents a BackupRepository Item
type BackupRepository struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the BackupRepository
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// The name of the BackupRepository
	Name *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// The display name of the BackupRepository
	DisplayName *string `protobuf:"bytes,3,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	// The description of the BackupRepository
	Description *string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	// The date this entity was created
	Created       *string `protobuf:"bytes,5,opt,name=created" json:"created,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BackupRepository) Reset() {
	*x = BackupRepository{}
	mi := &file_cloudstack_management_backup_repository_v1_repository_gen_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BackupRepository) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackupRepository) ProtoMessage() {}

func (x *BackupRepository) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_backup_repository_v1_repository_gen_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackupRepository.ProtoReflect.Descriptor instead.
func (*BackupRepository) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_backup_repository_v1_repository_gen_proto_rawDescGZIP(), []int{6}
}

func (x *BackupRepository) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *BackupRepository) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *BackupRepository) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *BackupRepository) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *BackupRepository) GetCreated() string {
	if x != nil && x.Created != nil {
		return *x.Created
	}
	return ""
}

// Success represents a Success Operation Response
type Success struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// true if operation is executed successfully
	Success *bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	// any text associated with the success or failure
	DisplayText   *string `protobuf:"bytes,2,opt,name=display_text,json=displayText" json:"display_text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Success) Reset() {
	*x = Success{}
	mi := &file_cloudstack_management_backup_repository_v1_repository_gen_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Success) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Success) ProtoMessage() {}

func (x *Success) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_backup_repository_v1_repository_gen_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Success.ProtoReflect.Descriptor instead.
func (*Success) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_backup_repository_v1_repository_gen_proto_rawDescGZIP(), []int{7}
}

func (x *Success) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *Success) GetDisplayText() string {
	if x != nil && x.DisplayText != nil {
		return *x.DisplayText
	}
	return ""
}

// Result represents a generic operation result
type Result struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether the operation was successful
	Success *bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	// Any text associated with the success or failure
	DisplayText *string `protobuf:"bytes,2,opt,name=display_text,json=displayText" json:"display_text,omitempty"`
	// The ID of the resource affected by the operation
	Id *string `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	// The job ID for an async operation
	JobId *string `protobuf:"bytes,4,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
	// The status of the job
	JobStatus     *string `protobuf:"bytes,5,opt,name=job_status,json=jobStatus" json:"job_status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Result) Reset() {
	*x = Result{}
	mi := &file_cloudstack_management_backup_repository_v1_repository_gen_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_backup_repository_v1_repository_gen_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_backup_repository_v1_repository_gen_proto_rawDescGZIP(), []int{8}
}

func (x *Result) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *Result) GetDisplayText() string {
	if x != nil && x.DisplayText != nil {
		return *x.DisplayText
	}
	return ""
}

func (x *Result) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Result) GetJobId() string {
	if x != nil && x.JobId != nil {
		return *x.JobId
	}
	return ""
}

func (x *Result) GetJobStatus() string {
	if x != nil && x.JobStatus != nil {
		return *x.JobStatus
	}
	return ""
}

var File_cloudstack_management_backup_repository_v1_repository_gen_proto protoreflect.FileDescriptor

const file_cloudstack_management_backup_repository_v1_repository_gen_proto_rawDesc = "" +
	"\n" +
	"?cloudstack/management/backup/repository/v1/repository.gen.proto\x12*cloudstack.management.backup.repository.v1\x1a\x1bbuf/validate/validate.proto\x1a(cloudstack/annotations/annotations.proto\x1a google/protobuf/descriptor.proto\"\xb6\x02\n" +
	"\x1aAddBackupRepositoryRequest\x12!\n" +
	"\x04name\x18\x01 \x01(\tB\r\xbaH\n" +
	"\xc8\x01\x01r\x05\x10\x01\x18\xff\x01R\x04name\x12 \n" +
	"\aaddress\x18\x02 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\aaddress\x12\x1a\n" +
	"\x04type\x18\x03 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\x04type\x12$\n" +
	"\bprovider\x18\x04 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\bprovider\x12$\n" +
	"\x0emount_options_\x18\x05 \x01(\tR\fmountOptions\x12\x1f\n" +
	"\azone_id\x18\x06 \x01(\x03B\x06\xbaH\x03\xc8\x01\x01R\x06zoneId\x12%\n" +
	"\x0ecapacity_bytes\x18\a \x01(\x03R\rcapacityBytes\x12#\n" +
	"\rresponse_type\x18\b \x01(\tR\fresponseType\"i\n" +
	"\x1bAddBackupRepositoryResponse\x12J\n" +
	"\x06result\x18\x01 \x01(\v22.cloudstack.management.backup.repository.v1.ResultR\x06result\"\\\n" +
	"\x1dDeleteBackupRepositoryRequest\x12\x16\n" +
	"\x02id\x18\x01 \x01(\x03B\x06\xbaH\x03\xc8\x01\x01R\x02id\x12#\n" +
	"\rresponse_type\x18\x02 \x01(\tR\fresponseType\"l\n" +
	"\x1eDeleteBackupRepositoryResponse\x12J\n" +
	"\x06result\x18\x01 \x01(\v22.cloudstack.management.backup.repository.v1.ResultR\x06result\"\xfe\x01\n" +
	"\x1dListBackupRepositoriesRequest\x12\x1e\n" +
	"\x04name\x18\x01 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x01\x18\xff\x01R\x04name\x12\x17\n" +
	"\azone_id\x18\x02 \x01(\x03R\x06zoneId\x12$\n" +
	"\bprovider\x18\x03 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\bprovider\x12\x0e\n" +
	"\x02id\x18\x04 \x01(\x03R\x02id\x12\x18\n" +
	"\akeyword\x18\x05 \x01(\tR\akeyword\x12\x12\n" +
	"\x04page\x18\x06 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\a \x01(\x05R\bpageSize\x12#\n" +
	"\rresponse_type\x18\b \x01(\tR\fresponseType\"\x9c\x01\n" +
	"\x1eListBackupRepositoriesResponse\x12R\n" +
	"\x05items\x18\x01 \x03(\v2<.cloudstack.management.backup.repository.v1.BackupRepositoryR\x05items\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount:\x05\xbaH\x02\b\x00\"\x9f\x01\n" +
	"\x10BackupRepository\x12\x18\n" +
	"\x02id\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12!\n" +
	"\fdisplay_name\x18\x03 \x01(\tR\vdisplayName\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x18\n" +
	"\acreated\x18\x05 \x01(\tR\acreated\"F\n" +
	"\aSuccess\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12!\n" +
	"\fdisplay_text\x18\x02 \x01(\tR\vdisplayText\"\x9f\x01\n" +
	"\x06Result\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12!\n" +
	"\fdisplay_text\x18\x02 \x01(\tR\vdisplayText\x12\x18\n" +
	"\x02id\x18\x03 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x02id\x12\x1f\n" +
	"\x06job_id\x18\x04 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x05jobId\x12\x1d\n" +
	"\n" +
	"job_status\x18\x05 \x01(\tR\tjobStatus2\xc4\x04\n" +
	"\x11RepositoryService\x12\xaf\x01\n" +
	"\x13AddBackupRepository\x12F.cloudstack.management.backup.repository.v1.AddBackupRepositoryRequest\x1aG.cloudstack.management.backup.repository.v1.AddBackupRepositoryResponse\"\a\xc2>\x04\xc2>\x01\x02\x12\xb8\x01\n" +
	"\x16DeleteBackupRepository\x12I.cloudstack.management.backup.repository.v1.DeleteBackupRepositoryRequest\x1aJ.cloudstack.management.backup.repository.v1.DeleteBackupRepositoryResponse\"\a\xc2>\x04\xc2>\x01\x02\x12\xb8\x01\n" +
	"\x16ListBackupRepositories\x12I.cloudstack.management.backup.repository.v1.ListBackupRepositoriesRequest\x1aJ.cloudstack.management.backup.repository.v1.ListBackupRepositoriesResponse\"\a\xc2>\x04\xc2>\x01\x02\x1a\a\xc2>\x04\xc2>\x01\x02B\xfe\x02\n" +
	".com.cloudstack.management.backup.repository.v1B\x12RepositoryGenProtoP\x01Zkgithub.com/walteh/cloudstack-proxy/gen/proto/golang/cloudstack/management/backup/repository/v1;repositoryv1\xa2\x02\x04CMBR\xaa\x02*Cloudstack.Management.Backup.Repository.V1\xca\x02*Cloudstack\\Management\\Backup\\Repository\\V1\xe2\x026Cloudstack\\Management\\Backup\\Repository\\V1\\GPBMetadata\xea\x02.Cloudstack::Management::Backup::Repository::V1b\beditionsp\xe8\a"

var (
	file_cloudstack_management_backup_repository_v1_repository_gen_proto_rawDescOnce sync.Once
	file_cloudstack_management_backup_repository_v1_repository_gen_proto_rawDescData []byte
)

func file_cloudstack_management_backup_repository_v1_repository_gen_proto_rawDescGZIP() []byte {
	file_cloudstack_management_backup_repository_v1_repository_gen_proto_rawDescOnce.Do(func() {
		file_cloudstack_management_backup_repository_v1_repository_gen_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_cloudstack_management_backup_repository_v1_repository_gen_proto_rawDesc), len(file_cloudstack_management_backup_repository_v1_repository_gen_proto_rawDesc)))
	})
	return file_cloudstack_management_backup_repository_v1_repository_gen_proto_rawDescData
}

var file_cloudstack_management_backup_repository_v1_repository_gen_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_cloudstack_management_backup_repository_v1_repository_gen_proto_goTypes = []any{
	(*AddBackupRepositoryRequest)(nil),     // 0: cloudstack.management.backup.repository.v1.AddBackupRepositoryRequest
	(*AddBackupRepositoryResponse)(nil),    // 1: cloudstack.management.backup.repository.v1.AddBackupRepositoryResponse
	(*DeleteBackupRepositoryRequest)(nil),  // 2: cloudstack.management.backup.repository.v1.DeleteBackupRepositoryRequest
	(*DeleteBackupRepositoryResponse)(nil), // 3: cloudstack.management.backup.repository.v1.DeleteBackupRepositoryResponse
	(*ListBackupRepositoriesRequest)(nil),  // 4: cloudstack.management.backup.repository.v1.ListBackupRepositoriesRequest
	(*ListBackupRepositoriesResponse)(nil), // 5: cloudstack.management.backup.repository.v1.ListBackupRepositoriesResponse
	(*BackupRepository)(nil),               // 6: cloudstack.management.backup.repository.v1.BackupRepository
	(*Success)(nil),                        // 7: cloudstack.management.backup.repository.v1.Success
	(*Result)(nil),                         // 8: cloudstack.management.backup.repository.v1.Result
}
var file_cloudstack_management_backup_repository_v1_repository_gen_proto_depIdxs = []int32{
	8, // 0: cloudstack.management.backup.repository.v1.AddBackupRepositoryResponse.result:type_name -> cloudstack.management.backup.repository.v1.Result
	8, // 1: cloudstack.management.backup.repository.v1.DeleteBackupRepositoryResponse.result:type_name -> cloudstack.management.backup.repository.v1.Result
	6, // 2: cloudstack.management.backup.repository.v1.ListBackupRepositoriesResponse.items:type_name -> cloudstack.management.backup.repository.v1.BackupRepository
	0, // 3: cloudstack.management.backup.repository.v1.RepositoryService.AddBackupRepository:input_type -> cloudstack.management.backup.repository.v1.AddBackupRepositoryRequest
	2, // 4: cloudstack.management.backup.repository.v1.RepositoryService.DeleteBackupRepository:input_type -> cloudstack.management.backup.repository.v1.DeleteBackupRepositoryRequest
	4, // 5: cloudstack.management.backup.repository.v1.RepositoryService.ListBackupRepositories:input_type -> cloudstack.management.backup.repository.v1.ListBackupRepositoriesRequest
	1, // 6: cloudstack.management.backup.repository.v1.RepositoryService.AddBackupRepository:output_type -> cloudstack.management.backup.repository.v1.AddBackupRepositoryResponse
	3, // 7: cloudstack.management.backup.repository.v1.RepositoryService.DeleteBackupRepository:output_type -> cloudstack.management.backup.repository.v1.DeleteBackupRepositoryResponse
	5, // 8: cloudstack.management.backup.repository.v1.RepositoryService.ListBackupRepositories:output_type -> cloudstack.management.backup.repository.v1.ListBackupRepositoriesResponse
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_cloudstack_management_backup_repository_v1_repository_gen_proto_init() }
func file_cloudstack_management_backup_repository_v1_repository_gen_proto_init() {
	if File_cloudstack_management_backup_repository_v1_repository_gen_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_cloudstack_management_backup_repository_v1_repository_gen_proto_rawDesc), len(file_cloudstack_management_backup_repository_v1_repository_gen_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cloudstack_management_backup_repository_v1_repository_gen_proto_goTypes,
		DependencyIndexes: file_cloudstack_management_backup_repository_v1_repository_gen_proto_depIdxs,
		MessageInfos:      file_cloudstack_management_backup_repository_v1_repository_gen_proto_msgTypes,
	}.Build()
	File_cloudstack_management_backup_repository_v1_repository_gen_proto = out.File
	file_cloudstack_management_backup_repository_v1_repository_gen_proto_goTypes = nil
	file_cloudstack_management_backup_repository_v1_repository_gen_proto_depIdxs = nil
}
