// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: cloudstack/management/event/v1/event.gen.proto

package eventv1

import (
	_ "github.com/walteh/cloudstack-proxy/gen/proto/golang/buf/validate"
	_ "github.com/walteh/cloudstack-proxy/gen/proto/golang/cloudstack/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ArchiveEventsRequest represents the parameters for archive one or more events.
type ArchiveEventsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the IDs of the events
	Ids []string `protobuf:"bytes,1,rep,name=ids" json:"ids,omitempty"`
	// end date range to archive events (including) this date (use format "yyyy-MM-dd" or the new format "yyyy-MM-ddThh:mm:ss")
	EndDate *string `protobuf:"bytes,2,opt,name=end_date,json=endDate" json:"end_date,omitempty"`
	// start date range to archive events (including) this date (use format "yyyy-MM-dd" or the new format "yyyy-MM-ddThh:mm:ss")
	StartDate *string `protobuf:"bytes,3,opt,name=start_date,json=startDate" json:"start_date,omitempty"`
	// archive by event type
	Type *string `protobuf:"bytes,4,opt,name=type" json:"type,omitempty"`
	ResponseType  *string `protobuf:"bytes,5,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ArchiveEventsRequest) Reset() {
	*x = ArchiveEventsRequest{}
	mi := &file_cloudstack_management_event_v1_event_gen_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ArchiveEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArchiveEventsRequest) ProtoMessage() {}

func (x *ArchiveEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_event_v1_event_gen_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArchiveEventsRequest.ProtoReflect.Descriptor instead.
func (*ArchiveEventsRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_event_v1_event_gen_proto_rawDescGZIP(), []int{0}
}

func (x *ArchiveEventsRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *ArchiveEventsRequest) GetEndDate() string {
	if x != nil && x.EndDate != nil {
		return *x.EndDate
	}
	return ""
}

func (x *ArchiveEventsRequest) GetStartDate() string {
	if x != nil && x.StartDate != nil {
		return *x.StartDate
	}
	return ""
}

func (x *ArchiveEventsRequest) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *ArchiveEventsRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// ArchiveEventsResponse represents the response from archive one or more events.
type ArchiveEventsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Result
	Result        *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ArchiveEventsResponse) Reset() {
	*x = ArchiveEventsResponse{}
	mi := &file_cloudstack_management_event_v1_event_gen_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ArchiveEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArchiveEventsResponse) ProtoMessage() {}

func (x *ArchiveEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_event_v1_event_gen_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArchiveEventsResponse.ProtoReflect.Descriptor instead.
func (*ArchiveEventsResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_event_v1_event_gen_proto_rawDescGZIP(), []int{1}
}

func (x *ArchiveEventsResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// DeleteEventsRequest represents the parameters for delete one or more events.
type DeleteEventsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the IDs of the events
	Ids []string `protobuf:"bytes,1,rep,name=ids" json:"ids,omitempty"`
	// end date range to delete events (including) this date (use format "yyyy-MM-dd" or the new format "yyyy-MM-ddThh:mm:ss")
	EndDate *string `protobuf:"bytes,2,opt,name=end_date,json=endDate" json:"end_date,omitempty"`
	// start date range to delete events (including) this date (use format "yyyy-MM-dd" or the new format "yyyy-MM-ddThh:mm:ss")
	StartDate *string `protobuf:"bytes,3,opt,name=start_date,json=startDate" json:"start_date,omitempty"`
	// delete by event type
	Type *string `protobuf:"bytes,4,opt,name=type" json:"type,omitempty"`
	ResponseType  *string `protobuf:"bytes,5,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteEventsRequest) Reset() {
	*x = DeleteEventsRequest{}
	mi := &file_cloudstack_management_event_v1_event_gen_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEventsRequest) ProtoMessage() {}

func (x *DeleteEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_event_v1_event_gen_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEventsRequest.ProtoReflect.Descriptor instead.
func (*DeleteEventsRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_event_v1_event_gen_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteEventsRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *DeleteEventsRequest) GetEndDate() string {
	if x != nil && x.EndDate != nil {
		return *x.EndDate
	}
	return ""
}

func (x *DeleteEventsRequest) GetStartDate() string {
	if x != nil && x.StartDate != nil {
		return *x.StartDate
	}
	return ""
}

func (x *DeleteEventsRequest) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *DeleteEventsRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// DeleteEventsResponse represents the response from delete one or more events.
type DeleteEventsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Result
	Result        *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteEventsResponse) Reset() {
	*x = DeleteEventsResponse{}
	mi := &file_cloudstack_management_event_v1_event_gen_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEventsResponse) ProtoMessage() {}

func (x *DeleteEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_event_v1_event_gen_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEventsResponse.ProtoReflect.Descriptor instead.
func (*DeleteEventsResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_event_v1_event_gen_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteEventsResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// ListEventTypesRequest represents the parameters for list event types
type ListEventTypesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	ResponseType  *string `protobuf:"bytes,1,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListEventTypesRequest) Reset() {
	*x = ListEventTypesRequest{}
	mi := &file_cloudstack_management_event_v1_event_gen_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListEventTypesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEventTypesRequest) ProtoMessage() {}

func (x *ListEventTypesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_event_v1_event_gen_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEventTypesRequest.ProtoReflect.Descriptor instead.
func (*ListEventTypesRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_event_v1_event_gen_proto_rawDescGZIP(), []int{4}
}

func (x *ListEventTypesRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// ListEventTypesResponse represents the response from list event types
type ListEventTypesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The list of EventTypes
	Items []*EventType `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	// The total count of EventTypes
	TotalCount    *int32 `protobuf:"varint,2,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListEventTypesResponse) Reset() {
	*x = ListEventTypesResponse{}
	mi := &file_cloudstack_management_event_v1_event_gen_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListEventTypesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEventTypesResponse) ProtoMessage() {}

func (x *ListEventTypesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_event_v1_event_gen_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEventTypesResponse.ProtoReflect.Descriptor instead.
func (*ListEventTypesResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_event_v1_event_gen_proto_rawDescGZIP(), []int{5}
}

func (x *ListEventTypesResponse) GetItems() []*EventType {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListEventTypesResponse) GetTotalCount() int32 {
	if x != nil && x.TotalCount != nil {
		return *x.TotalCount
	}
	return 0
}

// ListEventsRequest represents the parameters for a command to list events.
type ListEventsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the ID of the event
	Id *int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// the duration of the event
	Duration *int32 `protobuf:"varint,2,opt,name=duration" json:"duration,omitempty"`
	// the end date range of the list you want to retrieve (use format "yyyy-MM-dd" or the new format "yyyy-MM-dd HH:mm:ss")
	EndDate *string `protobuf:"bytes,3,opt,name=end_date,json=endDate" json:"end_date,omitempty"`
	// the time the event was entered
	EntryTime *int32 `protobuf:"varint,4,opt,name=entry_time,json=entryTime" json:"entry_time,omitempty"`
	// the event level (INFO, WARN, ERROR)
	Level *string `protobuf:"bytes,5,opt,name=level" json:"level,omitempty"`
	// the start date range of the list you want to retrieve (use format "yyyy-MM-dd" or the new format "yyyy-MM-dd HH:mm:ss")
	StartDate *string `protobuf:"bytes,6,opt,name=start_date,json=startDate" json:"start_date,omitempty"`
	// the event type (see event types)
	Type *string `protobuf:"bytes,7,opt,name=type" json:"type,omitempty"`
	// the parent/start ID of the event, when provided this will list all the events with the start/parent ID including the parent event
	StartId *int64 `protobuf:"varint,8,opt,name=start_id,json=startId" json:"start_id,omitempty"`
	// the ID of the resource associated with the event
	ResourceId *string `protobuf:"bytes,9,opt,name=resource_id,json=resourceId" json:"resource_id,omitempty"`
	// the type of the resource associated with the event
	ResourceType *string `protobuf:"bytes,10,opt,name=resource_type,json=resourceType" json:"resource_type,omitempty"`
	// true to list archived events otherwise false
	Archived *bool `protobuf:"varint,11,opt,name=archived" json:"archived,omitempty"`
	// list objects by project; if projectid=-1 lists All VMs
	ProjectId *int64 `protobuf:"varint,12,opt,name=project_id,json=projectId" json:"project_id,omitempty"`
	// list resources by account. Must be used with the domainId parameter.
	AccountName *string `protobuf:"bytes,13,opt,name=account_name,json=accountName" json:"account_name,omitempty"`
	// If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false. Resources dedicated to a project are listed only if using the projectid parameter.
	ListAll *bool `protobuf:"varint,14,opt,name=list_all,json=listAll" json:"list_all,omitempty"`
	// list only resources belonging to the domain specified
	DomainId *int64 `protobuf:"varint,15,opt,name=domain_id,json=domainId" json:"domain_id,omitempty"`
	// defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.
	Recursive *bool `protobuf:"varint,16,opt,name=recursive" json:"recursive,omitempty"`
	// List by keyword
	Keyword *string `protobuf:"bytes,17,opt,name=keyword" json:"keyword,omitempty"`
	Page *int32 `protobuf:"varint,18,opt,name=page" json:"page,omitempty"`
	PageSize *int32 `protobuf:"varint,19,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	ResponseType  *string `protobuf:"bytes,20,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListEventsRequest) Reset() {
	*x = ListEventsRequest{}
	mi := &file_cloudstack_management_event_v1_event_gen_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEventsRequest) ProtoMessage() {}

func (x *ListEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_event_v1_event_gen_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEventsRequest.ProtoReflect.Descriptor instead.
func (*ListEventsRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_event_v1_event_gen_proto_rawDescGZIP(), []int{6}
}

func (x *ListEventsRequest) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *ListEventsRequest) GetDuration() int32 {
	if x != nil && x.Duration != nil {
		return *x.Duration
	}
	return 0
}

func (x *ListEventsRequest) GetEndDate() string {
	if x != nil && x.EndDate != nil {
		return *x.EndDate
	}
	return ""
}

func (x *ListEventsRequest) GetEntryTime() int32 {
	if x != nil && x.EntryTime != nil {
		return *x.EntryTime
	}
	return 0
}

func (x *ListEventsRequest) GetLevel() string {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return ""
}

func (x *ListEventsRequest) GetStartDate() string {
	if x != nil && x.StartDate != nil {
		return *x.StartDate
	}
	return ""
}

func (x *ListEventsRequest) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *ListEventsRequest) GetStartId() int64 {
	if x != nil && x.StartId != nil {
		return *x.StartId
	}
	return 0
}

func (x *ListEventsRequest) GetResourceId() string {
	if x != nil && x.ResourceId != nil {
		return *x.ResourceId
	}
	return ""
}

func (x *ListEventsRequest) GetResourceType() string {
	if x != nil && x.ResourceType != nil {
		return *x.ResourceType
	}
	return ""
}

func (x *ListEventsRequest) GetArchived() bool {
	if x != nil && x.Archived != nil {
		return *x.Archived
	}
	return false
}

func (x *ListEventsRequest) GetProjectId() int64 {
	if x != nil && x.ProjectId != nil {
		return *x.ProjectId
	}
	return 0
}

func (x *ListEventsRequest) GetAccountName() string {
	if x != nil && x.AccountName != nil {
		return *x.AccountName
	}
	return ""
}

func (x *ListEventsRequest) GetListAll() bool {
	if x != nil && x.ListAll != nil {
		return *x.ListAll
	}
	return false
}

func (x *ListEventsRequest) GetDomainId() int64 {
	if x != nil && x.DomainId != nil {
		return *x.DomainId
	}
	return 0
}

func (x *ListEventsRequest) GetRecursive() bool {
	if x != nil && x.Recursive != nil {
		return *x.Recursive
	}
	return false
}

func (x *ListEventsRequest) GetKeyword() string {
	if x != nil && x.Keyword != nil {
		return *x.Keyword
	}
	return ""
}

func (x *ListEventsRequest) GetPage() int32 {
	if x != nil && x.Page != nil {
		return *x.Page
	}
	return 0
}

func (x *ListEventsRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListEventsRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// ListEventsResponse represents the response from a command to list events.
type ListEventsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The list of Events
	Items []*Event `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	// The total count of Events
	TotalCount    *int32 `protobuf:"varint,2,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListEventsResponse) Reset() {
	*x = ListEventsResponse{}
	mi := &file_cloudstack_management_event_v1_event_gen_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEventsResponse) ProtoMessage() {}

func (x *ListEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_event_v1_event_gen_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEventsResponse.ProtoReflect.Descriptor instead.
func (*ListEventsResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_event_v1_event_gen_proto_rawDescGZIP(), []int{7}
}

func (x *ListEventsResponse) GetItems() []*Event {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListEventsResponse) GetTotalCount() int32 {
	if x != nil && x.TotalCount != nil {
		return *x.TotalCount
	}
	return 0
}

// Event represents a Event Item
type Event struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the Event
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// The name of the Event
	Name *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// The display name of the Event
	DisplayName *string `protobuf:"bytes,3,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	// The description of the Event
	Description *string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	// The date this entity was created
	Created       *string `protobuf:"bytes,5,opt,name=created" json:"created,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_cloudstack_management_event_v1_event_gen_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_event_v1_event_gen_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_event_v1_event_gen_proto_rawDescGZIP(), []int{8}
}

func (x *Event) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Event) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Event) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *Event) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *Event) GetCreated() string {
	if x != nil && x.Created != nil {
		return *x.Created
	}
	return ""
}

// EventType represents a EventType Item
type EventType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the EventType
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// The name of the EventType
	Name *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// The display name of the EventType
	DisplayName *string `protobuf:"bytes,3,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	// The description of the EventType
	Description *string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	// The date this entity was created
	Created       *string `protobuf:"bytes,5,opt,name=created" json:"created,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventType) Reset() {
	*x = EventType{}
	mi := &file_cloudstack_management_event_v1_event_gen_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventType) ProtoMessage() {}

func (x *EventType) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_event_v1_event_gen_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventType.ProtoReflect.Descriptor instead.
func (*EventType) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_event_v1_event_gen_proto_rawDescGZIP(), []int{9}
}

func (x *EventType) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *EventType) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *EventType) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *EventType) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *EventType) GetCreated() string {
	if x != nil && x.Created != nil {
		return *x.Created
	}
	return ""
}

// Success represents a Success Operation Response
type Success struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// true if operation is executed successfully
	Success *bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	// any text associated with the success or failure
	DisplayText   *string `protobuf:"bytes,2,opt,name=display_text,json=displayText" json:"display_text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Success) Reset() {
	*x = Success{}
	mi := &file_cloudstack_management_event_v1_event_gen_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Success) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Success) ProtoMessage() {}

func (x *Success) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_event_v1_event_gen_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Success.ProtoReflect.Descriptor instead.
func (*Success) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_event_v1_event_gen_proto_rawDescGZIP(), []int{10}
}

func (x *Success) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *Success) GetDisplayText() string {
	if x != nil && x.DisplayText != nil {
		return *x.DisplayText
	}
	return ""
}

// Result represents a generic operation result
type Result struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether the operation was successful
	Success *bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	// Any text associated with the success or failure
	DisplayText *string `protobuf:"bytes,2,opt,name=display_text,json=displayText" json:"display_text,omitempty"`
	// The ID of the resource affected by the operation
	Id *string `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	// The job ID for an async operation
	JobId *string `protobuf:"bytes,4,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
	// The status of the job
	JobStatus     *string `protobuf:"bytes,5,opt,name=job_status,json=jobStatus" json:"job_status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Result) Reset() {
	*x = Result{}
	mi := &file_cloudstack_management_event_v1_event_gen_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_event_v1_event_gen_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_event_v1_event_gen_proto_rawDescGZIP(), []int{11}
}

func (x *Result) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *Result) GetDisplayText() string {
	if x != nil && x.DisplayText != nil {
		return *x.DisplayText
	}
	return ""
}

func (x *Result) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Result) GetJobId() string {
	if x != nil && x.JobId != nil {
		return *x.JobId
	}
	return ""
}

func (x *Result) GetJobStatus() string {
	if x != nil && x.JobStatus != nil {
		return *x.JobStatus
	}
	return ""
}

var File_cloudstack_management_event_v1_event_gen_proto protoreflect.FileDescriptor

const file_cloudstack_management_event_v1_event_gen_proto_rawDesc = "" +
	"\n" +
	".cloudstack/management/event/v1/event.gen.proto\x12\x1ecloudstack.management.event.v1\x1a\x1bbuf/validate/validate.proto\x1a(cloudstack/annotations/annotations.proto\x1a google/protobuf/descriptor.proto\"\x9b\x01\n" +
	"\x14ArchiveEventsRequest\x12\x10\n" +
	"\x03ids\x18\x01 \x03(\tR\x03ids\x12\x19\n" +
	"\bend_date\x18\x02 \x01(\tR\aendDate\x12\x1d\n" +
	"\n" +
	"start_date\x18\x03 \x01(\tR\tstartDate\x12\x12\n" +
	"\x04type\x18\x04 \x01(\tR\x04type\x12#\n" +
	"\rresponse_type\x18\x05 \x01(\tR\fresponseType\"W\n" +
	"\x15ArchiveEventsResponse\x12>\n" +
	"\x06result\x18\x01 \x01(\v2&.cloudstack.management.event.v1.ResultR\x06result\"\x9a\x01\n" +
	"\x13DeleteEventsRequest\x12\x10\n" +
	"\x03ids\x18\x01 \x03(\tR\x03ids\x12\x19\n" +
	"\bend_date\x18\x02 \x01(\tR\aendDate\x12\x1d\n" +
	"\n" +
	"start_date\x18\x03 \x01(\tR\tstartDate\x12\x12\n" +
	"\x04type\x18\x04 \x01(\tR\x04type\x12#\n" +
	"\rresponse_type\x18\x05 \x01(\tR\fresponseType\"V\n" +
	"\x14DeleteEventsResponse\x12>\n" +
	"\x06result\x18\x01 \x01(\v2&.cloudstack.management.event.v1.ResultR\x06result\"<\n" +
	"\x15ListEventTypesRequest\x12#\n" +
	"\rresponse_type\x18\x01 \x01(\tR\fresponseType\"\x81\x01\n" +
	"\x16ListEventTypesResponse\x12?\n" +
	"\x05items\x18\x01 \x03(\v2).cloudstack.management.event.v1.EventTypeR\x05items\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount:\x05\xbaH\x02\b\x00\"\xe6\x05\n" +
	"\x11ListEventsRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x1a\n" +
	"\bduration\x18\x02 \x01(\x05R\bduration\x12\x19\n" +
	"\bend_date\x18\x03 \x01(\tR\aendDate\x12\x1d\n" +
	"\n" +
	"entry_time\x18\x04 \x01(\x05R\tentryTime\x12\x14\n" +
	"\x05level\x18\x05 \x01(\tR\x05level\x12\x1d\n" +
	"\n" +
	"start_date\x18\x06 \x01(\tR\tstartDate\x12\x12\n" +
	"\x04type\x18\a \x01(\tR\x04type\x12\x19\n" +
	"\bstart_id\x18\b \x01(\x03R\astartId\x12)\n" +
	"\vresource_id\x18\t \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\n" +
	"resourceId\x12#\n" +
	"\rresource_type\x18\n" +
	" \x01(\tR\fresourceType\x12!\n" +
	"\barchived\x18\v \x01(\bB\x05\xaa\x01\x02\b\x01R\barchived\x12\x1d\n" +
	"\n" +
	"project_id\x18\f \x01(\x03R\tprojectId\x12\xa0\x01\n" +
	"\faccount_name\x18\r \x01(\tB}\xbaHz\xba\x01w\n" +
	"\x1baccount_name_with_domain_id\x122account_name must be used with domain_id parameter\x1a$!has(account_name) || has(domain_id)R\vaccountName\x12 \n" +
	"\blist_all\x18\x0e \x01(\bB\x05\xaa\x01\x02\b\x01R\alistAll\x12\x1b\n" +
	"\tdomain_id\x18\x0f \x01(\x03R\bdomainId\x12#\n" +
	"\trecursive\x18\x10 \x01(\bB\x05\xaa\x01\x02\b\x01R\trecursive\x12\x18\n" +
	"\akeyword\x18\x11 \x01(\tR\akeyword\x12\x12\n" +
	"\x04page\x18\x12 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x13 \x01(\x05R\bpageSize\x12#\n" +
	"\rresponse_type\x18\x14 \x01(\tR\fresponseType\"y\n" +
	"\x12ListEventsResponse\x12;\n" +
	"\x05items\x18\x01 \x03(\v2%.cloudstack.management.event.v1.EventR\x05items\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount:\x05\xbaH\x02\b\x00\"\x94\x01\n" +
	"\x05Event\x12\x18\n" +
	"\x02id\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12!\n" +
	"\fdisplay_name\x18\x03 \x01(\tR\vdisplayName\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x18\n" +
	"\acreated\x18\x05 \x01(\tR\acreated\"\x98\x01\n" +
	"\tEventType\x12\x18\n" +
	"\x02id\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12!\n" +
	"\fdisplay_name\x18\x03 \x01(\tR\vdisplayName\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x18\n" +
	"\acreated\x18\x05 \x01(\tR\acreated\"F\n" +
	"\aSuccess\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12!\n" +
	"\fdisplay_text\x18\x02 \x01(\tR\vdisplayText\"\x9f\x01\n" +
	"\x06Result\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12!\n" +
	"\fdisplay_text\x18\x02 \x01(\tR\vdisplayText\x12\x18\n" +
	"\x02id\x18\x03 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x02id\x12\x1f\n" +
	"\x06job_id\x18\x04 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x05jobId\x12\x1d\n" +
	"\n" +
	"job_status\x18\x05 \x01(\tR\tjobStatus2\xad\x04\n" +
	"\fEventService\x12\x85\x01\n" +
	"\rArchiveEvents\x124.cloudstack.management.event.v1.ArchiveEventsRequest\x1a5.cloudstack.management.event.v1.ArchiveEventsResponse\"\a\xc2>\x04\xc2>\x01\x02\x12\x82\x01\n" +
	"\fDeleteEvents\x123.cloudstack.management.event.v1.DeleteEventsRequest\x1a4.cloudstack.management.event.v1.DeleteEventsResponse\"\a\xc2>\x04\xc2>\x01\x02\x12\x88\x01\n" +
	"\x0eListEventTypes\x125.cloudstack.management.event.v1.ListEventTypesRequest\x1a6.cloudstack.management.event.v1.ListEventTypesResponse\"\a\xc2>\x04\xc2>\x01\x02\x12|\n" +
	"\n" +
	"ListEvents\x121.cloudstack.management.event.v1.ListEventsRequest\x1a2.cloudstack.management.event.v1.ListEventsResponse\"\a\xc2>\x04\xc2>\x01\x02\x1a\a\xc2>\x04\xc2>\x01\x02B\xaa\x02\n" +
	"\"com.cloudstack.management.event.v1B\rEventGenProtoP\x01ZZgithub.com/walteh/cloudstack-proxy/gen/proto/golang/cloudstack/management/event/v1;eventv1\xa2\x02\x03CME\xaa\x02\x1eCloudstack.Management.Event.V1\xca\x02\x1eCloudstack\\Management\\Event\\V1\xe2\x02*Cloudstack\\Management\\Event\\V1\\GPBMetadata\xea\x02!Cloudstack::Management::Event::V1b\beditionsp\xe8\a"

var (
	file_cloudstack_management_event_v1_event_gen_proto_rawDescOnce sync.Once
	file_cloudstack_management_event_v1_event_gen_proto_rawDescData []byte
)

func file_cloudstack_management_event_v1_event_gen_proto_rawDescGZIP() []byte {
	file_cloudstack_management_event_v1_event_gen_proto_rawDescOnce.Do(func() {
		file_cloudstack_management_event_v1_event_gen_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_cloudstack_management_event_v1_event_gen_proto_rawDesc), len(file_cloudstack_management_event_v1_event_gen_proto_rawDesc)))
	})
	return file_cloudstack_management_event_v1_event_gen_proto_rawDescData
}

var file_cloudstack_management_event_v1_event_gen_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_cloudstack_management_event_v1_event_gen_proto_goTypes = []any{
	(*ArchiveEventsRequest)(nil),   // 0: cloudstack.management.event.v1.ArchiveEventsRequest
	(*ArchiveEventsResponse)(nil),  // 1: cloudstack.management.event.v1.ArchiveEventsResponse
	(*DeleteEventsRequest)(nil),    // 2: cloudstack.management.event.v1.DeleteEventsRequest
	(*DeleteEventsResponse)(nil),   // 3: cloudstack.management.event.v1.DeleteEventsResponse
	(*ListEventTypesRequest)(nil),  // 4: cloudstack.management.event.v1.ListEventTypesRequest
	(*ListEventTypesResponse)(nil), // 5: cloudstack.management.event.v1.ListEventTypesResponse
	(*ListEventsRequest)(nil),      // 6: cloudstack.management.event.v1.ListEventsRequest
	(*ListEventsResponse)(nil),     // 7: cloudstack.management.event.v1.ListEventsResponse
	(*Event)(nil),                  // 8: cloudstack.management.event.v1.Event
	(*EventType)(nil),              // 9: cloudstack.management.event.v1.EventType
	(*Success)(nil),                // 10: cloudstack.management.event.v1.Success
	(*Result)(nil),                 // 11: cloudstack.management.event.v1.Result
}
var file_cloudstack_management_event_v1_event_gen_proto_depIdxs = []int32{
	11, // 0: cloudstack.management.event.v1.ArchiveEventsResponse.result:type_name -> cloudstack.management.event.v1.Result
	11, // 1: cloudstack.management.event.v1.DeleteEventsResponse.result:type_name -> cloudstack.management.event.v1.Result
	9,  // 2: cloudstack.management.event.v1.ListEventTypesResponse.items:type_name -> cloudstack.management.event.v1.EventType
	8,  // 3: cloudstack.management.event.v1.ListEventsResponse.items:type_name -> cloudstack.management.event.v1.Event
	0,  // 4: cloudstack.management.event.v1.EventService.ArchiveEvents:input_type -> cloudstack.management.event.v1.ArchiveEventsRequest
	2,  // 5: cloudstack.management.event.v1.EventService.DeleteEvents:input_type -> cloudstack.management.event.v1.DeleteEventsRequest
	4,  // 6: cloudstack.management.event.v1.EventService.ListEventTypes:input_type -> cloudstack.management.event.v1.ListEventTypesRequest
	6,  // 7: cloudstack.management.event.v1.EventService.ListEvents:input_type -> cloudstack.management.event.v1.ListEventsRequest
	1,  // 8: cloudstack.management.event.v1.EventService.ArchiveEvents:output_type -> cloudstack.management.event.v1.ArchiveEventsResponse
	3,  // 9: cloudstack.management.event.v1.EventService.DeleteEvents:output_type -> cloudstack.management.event.v1.DeleteEventsResponse
	5,  // 10: cloudstack.management.event.v1.EventService.ListEventTypes:output_type -> cloudstack.management.event.v1.ListEventTypesResponse
	7,  // 11: cloudstack.management.event.v1.EventService.ListEvents:output_type -> cloudstack.management.event.v1.ListEventsResponse
	8,  // [8:12] is the sub-list for method output_type
	4,  // [4:8] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_cloudstack_management_event_v1_event_gen_proto_init() }
func file_cloudstack_management_event_v1_event_gen_proto_init() {
	if File_cloudstack_management_event_v1_event_gen_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_cloudstack_management_event_v1_event_gen_proto_rawDesc), len(file_cloudstack_management_event_v1_event_gen_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cloudstack_management_event_v1_event_gen_proto_goTypes,
		DependencyIndexes: file_cloudstack_management_event_v1_event_gen_proto_depIdxs,
		MessageInfos:      file_cloudstack_management_event_v1_event_gen_proto_msgTypes,
	}.Build()
	File_cloudstack_management_event_v1_event_gen_proto = out.File
	file_cloudstack_management_event_v1_event_gen_proto_goTypes = nil
	file_cloudstack_management_event_v1_event_gen_proto_depIdxs = nil
}
