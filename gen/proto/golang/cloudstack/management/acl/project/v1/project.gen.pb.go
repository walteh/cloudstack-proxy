// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: cloudstack/management/acl/project/v1/project.gen.proto

package projectv1

import (
	_ "github.com/walteh/cloudstack-proxy/gen/proto/golang/cloudstack/annotations"
	_ "github.com/walteh/cloudstack-proxy/gen/proto/golang/cloudstack/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// UpdateProjectRolePermissionRequest represents the parameters for updates a project role permission and/or order
type UpdateProjectRolePermissionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the project role
	ProjectRoleId *int64 `protobuf:"varint,1,opt,name=project_role_id,json=projectRoleId" json:"project_role_id,omitempty"`
	// ID of project where project role permission is to be updated
	ProjectId *int64 `protobuf:"varint,2,opt,name=project_id,json=projectId" json:"project_id,omitempty"`
	// The parent role permission uuid, use 0 to move this rule at the top of the list
	ProjectRulePermissionOrder []string `protobuf:"bytes,3,rep,name=project_rule_permission_order,json=projectRulePermissionOrder" json:"project_rule_permission_order,omitempty"`
	// Project Role permission rule id
	ProjectRuleId *int64 `protobuf:"varint,4,opt,name=project_rule_id,json=projectRuleId" json:"project_rule_id,omitempty"`
	// Rule permission, can be: allow or deny
	ProjectRolePermission *string `protobuf:"bytes,5,opt,name=project_role_permission,json=projectRolePermission" json:"project_role_permission,omitempty"`
	ResponseType  *string `protobuf:"bytes,6,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateProjectRolePermissionRequest) Reset() {
	*x = UpdateProjectRolePermissionRequest{}
	mi := &file_cloudstack_management_acl_project_v1_project_gen_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateProjectRolePermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProjectRolePermissionRequest) ProtoMessage() {}

func (x *UpdateProjectRolePermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_acl_project_v1_project_gen_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProjectRolePermissionRequest.ProtoReflect.Descriptor instead.
func (*UpdateProjectRolePermissionRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_acl_project_v1_project_gen_proto_rawDescGZIP(), []int{0}
}

func (x *UpdateProjectRolePermissionRequest) GetProjectRoleId() int64 {
	if x != nil && x.ProjectRoleId != nil {
		return *x.ProjectRoleId
	}
	return 0
}

func (x *UpdateProjectRolePermissionRequest) GetProjectId() int64 {
	if x != nil && x.ProjectId != nil {
		return *x.ProjectId
	}
	return 0
}

func (x *UpdateProjectRolePermissionRequest) GetProjectRulePermissionOrder() []string {
	if x != nil {
		return x.ProjectRulePermissionOrder
	}
	return nil
}

func (x *UpdateProjectRolePermissionRequest) GetProjectRuleId() int64 {
	if x != nil && x.ProjectRuleId != nil {
		return *x.ProjectRuleId
	}
	return 0
}

func (x *UpdateProjectRolePermissionRequest) GetProjectRolePermission() string {
	if x != nil && x.ProjectRolePermission != nil {
		return *x.ProjectRolePermission
	}
	return ""
}

func (x *UpdateProjectRolePermissionRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// UpdateProjectRolePermissionResponse represents the response from updates a project role permission and/or order
type UpdateProjectRolePermissionResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Result
	Result        *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateProjectRolePermissionResponse) Reset() {
	*x = UpdateProjectRolePermissionResponse{}
	mi := &file_cloudstack_management_acl_project_v1_project_gen_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateProjectRolePermissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProjectRolePermissionResponse) ProtoMessage() {}

func (x *UpdateProjectRolePermissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_acl_project_v1_project_gen_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProjectRolePermissionResponse.ProtoReflect.Descriptor instead.
func (*UpdateProjectRolePermissionResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_acl_project_v1_project_gen_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateProjectRolePermissionResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// ListProjectRolePermissionsRequest represents the parameters for lists a project's project role permissions
type ListProjectRolePermissionsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the project
	ProjectId *int64 `protobuf:"varint,1,opt,name=project_id,json=projectId" json:"project_id,omitempty"`
	// ID of the project role
	ProjectRoleId *int64 `protobuf:"varint,2,opt,name=project_role_id,json=projectRoleId" json:"project_role_id,omitempty"`
	ResponseType  *string `protobuf:"bytes,3,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListProjectRolePermissionsRequest) Reset() {
	*x = ListProjectRolePermissionsRequest{}
	mi := &file_cloudstack_management_acl_project_v1_project_gen_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListProjectRolePermissionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProjectRolePermissionsRequest) ProtoMessage() {}

func (x *ListProjectRolePermissionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_acl_project_v1_project_gen_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProjectRolePermissionsRequest.ProtoReflect.Descriptor instead.
func (*ListProjectRolePermissionsRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_acl_project_v1_project_gen_proto_rawDescGZIP(), []int{2}
}

func (x *ListProjectRolePermissionsRequest) GetProjectId() int64 {
	if x != nil && x.ProjectId != nil {
		return *x.ProjectId
	}
	return 0
}

func (x *ListProjectRolePermissionsRequest) GetProjectRoleId() int64 {
	if x != nil && x.ProjectRoleId != nil {
		return *x.ProjectRoleId
	}
	return 0
}

func (x *ListProjectRolePermissionsRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// ListProjectRolePermissionsResponse represents the response from lists a project's project role permissions
type ListProjectRolePermissionsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The list of ProjectRolePermissions
	Items []*ProjectRolePermission `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	// The total count of ProjectRolePermissions
	TotalCount    *int32 `protobuf:"varint,2,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListProjectRolePermissionsResponse) Reset() {
	*x = ListProjectRolePermissionsResponse{}
	mi := &file_cloudstack_management_acl_project_v1_project_gen_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListProjectRolePermissionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProjectRolePermissionsResponse) ProtoMessage() {}

func (x *ListProjectRolePermissionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_acl_project_v1_project_gen_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProjectRolePermissionsResponse.ProtoReflect.Descriptor instead.
func (*ListProjectRolePermissionsResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_acl_project_v1_project_gen_proto_rawDescGZIP(), []int{3}
}

func (x *ListProjectRolePermissionsResponse) GetItems() []*ProjectRolePermission {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListProjectRolePermissionsResponse) GetTotalCount() int32 {
	if x != nil && x.TotalCount != nil {
		return *x.TotalCount
	}
	return 0
}

// DeleteProjectRoleRequest represents the parameters for delete project roles in cloudstack
type DeleteProjectRoleRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the project role to be deleted
	Id *int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// ID of the project from where the role is to be deleted
	ProjectId *int64 `protobuf:"varint,2,opt,name=project_id,json=projectId" json:"project_id,omitempty"`
	ResponseType  *string `protobuf:"bytes,3,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteProjectRoleRequest) Reset() {
	*x = DeleteProjectRoleRequest{}
	mi := &file_cloudstack_management_acl_project_v1_project_gen_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteProjectRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProjectRoleRequest) ProtoMessage() {}

func (x *DeleteProjectRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_acl_project_v1_project_gen_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProjectRoleRequest.ProtoReflect.Descriptor instead.
func (*DeleteProjectRoleRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_acl_project_v1_project_gen_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteProjectRoleRequest) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *DeleteProjectRoleRequest) GetProjectId() int64 {
	if x != nil && x.ProjectId != nil {
		return *x.ProjectId
	}
	return 0
}

func (x *DeleteProjectRoleRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// DeleteProjectRoleResponse represents the response from delete project roles in cloudstack
type DeleteProjectRoleResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Result
	Result        *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteProjectRoleResponse) Reset() {
	*x = DeleteProjectRoleResponse{}
	mi := &file_cloudstack_management_acl_project_v1_project_gen_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteProjectRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProjectRoleResponse) ProtoMessage() {}

func (x *DeleteProjectRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_acl_project_v1_project_gen_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProjectRoleResponse.ProtoReflect.Descriptor instead.
func (*DeleteProjectRoleResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_acl_project_v1_project_gen_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteProjectRoleResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// DeleteProjectRolePermissionRequest represents the parameters for deletes a project role permission in the project
type DeleteProjectRolePermissionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the project where the project role permission is to be deleted
	ProjectId *int64 `protobuf:"varint,1,opt,name=project_id,json=projectId" json:"project_id,omitempty"`
	// ID of the project role permission to be deleted
	ProjectRolePermissionId *int64 `protobuf:"varint,2,opt,name=project_role_permission_id,json=projectRolePermissionId" json:"project_role_permission_id,omitempty"`
	ResponseType  *string `protobuf:"bytes,3,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteProjectRolePermissionRequest) Reset() {
	*x = DeleteProjectRolePermissionRequest{}
	mi := &file_cloudstack_management_acl_project_v1_project_gen_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteProjectRolePermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProjectRolePermissionRequest) ProtoMessage() {}

func (x *DeleteProjectRolePermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_acl_project_v1_project_gen_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProjectRolePermissionRequest.ProtoReflect.Descriptor instead.
func (*DeleteProjectRolePermissionRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_acl_project_v1_project_gen_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteProjectRolePermissionRequest) GetProjectId() int64 {
	if x != nil && x.ProjectId != nil {
		return *x.ProjectId
	}
	return 0
}

func (x *DeleteProjectRolePermissionRequest) GetProjectRolePermissionId() int64 {
	if x != nil && x.ProjectRolePermissionId != nil {
		return *x.ProjectRolePermissionId
	}
	return 0
}

func (x *DeleteProjectRolePermissionRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// DeleteProjectRolePermissionResponse represents the response from deletes a project role permission in the project
type DeleteProjectRolePermissionResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Result
	Result        *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteProjectRolePermissionResponse) Reset() {
	*x = DeleteProjectRolePermissionResponse{}
	mi := &file_cloudstack_management_acl_project_v1_project_gen_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteProjectRolePermissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProjectRolePermissionResponse) ProtoMessage() {}

func (x *DeleteProjectRolePermissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_acl_project_v1_project_gen_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProjectRolePermissionResponse.ProtoReflect.Descriptor instead.
func (*DeleteProjectRolePermissionResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_acl_project_v1_project_gen_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteProjectRolePermissionResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// CreateProjectRolePermissionRequest represents the parameters for adds api permissions to a project role
type CreateProjectRolePermissionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the project role
	ProjectRoleId *int64 `protobuf:"varint,1,opt,name=project_role_id,json=projectRoleId" json:"project_role_id,omitempty"`
	// ID of project where project role permission is to be created
	ProjectId *int64 `protobuf:"varint,2,opt,name=project_id,json=projectId" json:"project_id,omitempty"`
	// The API name or wildcard rule such as list*
	Rule *string `protobuf:"bytes,3,opt,name=rule" json:"rule,omitempty"`
	// The rule permission, allow or deny. Default: deny.
	Permission *string `protobuf:"bytes,4,opt,name=permission" json:"permission,omitempty"`
	// The description of the role permission
	Description *string `protobuf:"bytes,5,opt,name=description" json:"description,omitempty"`
	ResponseType  *string `protobuf:"bytes,6,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateProjectRolePermissionRequest) Reset() {
	*x = CreateProjectRolePermissionRequest{}
	mi := &file_cloudstack_management_acl_project_v1_project_gen_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateProjectRolePermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProjectRolePermissionRequest) ProtoMessage() {}

func (x *CreateProjectRolePermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_acl_project_v1_project_gen_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProjectRolePermissionRequest.ProtoReflect.Descriptor instead.
func (*CreateProjectRolePermissionRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_acl_project_v1_project_gen_proto_rawDescGZIP(), []int{8}
}

func (x *CreateProjectRolePermissionRequest) GetProjectRoleId() int64 {
	if x != nil && x.ProjectRoleId != nil {
		return *x.ProjectRoleId
	}
	return 0
}

func (x *CreateProjectRolePermissionRequest) GetProjectId() int64 {
	if x != nil && x.ProjectId != nil {
		return *x.ProjectId
	}
	return 0
}

func (x *CreateProjectRolePermissionRequest) GetRule() string {
	if x != nil && x.Rule != nil {
		return *x.Rule
	}
	return ""
}

func (x *CreateProjectRolePermissionRequest) GetPermission() string {
	if x != nil && x.Permission != nil {
		return *x.Permission
	}
	return ""
}

func (x *CreateProjectRolePermissionRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *CreateProjectRolePermissionRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// CreateProjectRolePermissionResponse represents the response from adds api permissions to a project role
type CreateProjectRolePermissionResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Result
	Result        *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateProjectRolePermissionResponse) Reset() {
	*x = CreateProjectRolePermissionResponse{}
	mi := &file_cloudstack_management_acl_project_v1_project_gen_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateProjectRolePermissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProjectRolePermissionResponse) ProtoMessage() {}

func (x *CreateProjectRolePermissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_acl_project_v1_project_gen_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProjectRolePermissionResponse.ProtoReflect.Descriptor instead.
func (*CreateProjectRolePermissionResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_acl_project_v1_project_gen_proto_rawDescGZIP(), []int{9}
}

func (x *CreateProjectRolePermissionResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// ListProjectRolesRequest represents the parameters for lists project roles in cloudstack
type ListProjectRolesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List project role by project role ID.
	ProjectRoleId *int64 `protobuf:"varint,1,opt,name=project_role_id,json=projectRoleId" json:"project_role_id,omitempty"`
	// List project role by project ID.
	ProjectId *int64 `protobuf:"varint,2,opt,name=project_id,json=projectId" json:"project_id,omitempty"`
	// List project role by project role name.
	RoleName *string `protobuf:"bytes,3,opt,name=role_name,json=roleName" json:"role_name,omitempty"`
	// List by keyword
	Keyword *string `protobuf:"bytes,4,opt,name=keyword" json:"keyword,omitempty"`
	Page *int32 `protobuf:"varint,5,opt,name=page" json:"page,omitempty"`
	PageSize *int32 `protobuf:"varint,6,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	ResponseType  *string `protobuf:"bytes,7,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListProjectRolesRequest) Reset() {
	*x = ListProjectRolesRequest{}
	mi := &file_cloudstack_management_acl_project_v1_project_gen_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListProjectRolesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProjectRolesRequest) ProtoMessage() {}

func (x *ListProjectRolesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_acl_project_v1_project_gen_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProjectRolesRequest.ProtoReflect.Descriptor instead.
func (*ListProjectRolesRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_acl_project_v1_project_gen_proto_rawDescGZIP(), []int{10}
}

func (x *ListProjectRolesRequest) GetProjectRoleId() int64 {
	if x != nil && x.ProjectRoleId != nil {
		return *x.ProjectRoleId
	}
	return 0
}

func (x *ListProjectRolesRequest) GetProjectId() int64 {
	if x != nil && x.ProjectId != nil {
		return *x.ProjectId
	}
	return 0
}

func (x *ListProjectRolesRequest) GetRoleName() string {
	if x != nil && x.RoleName != nil {
		return *x.RoleName
	}
	return ""
}

func (x *ListProjectRolesRequest) GetKeyword() string {
	if x != nil && x.Keyword != nil {
		return *x.Keyword
	}
	return ""
}

func (x *ListProjectRolesRequest) GetPage() int32 {
	if x != nil && x.Page != nil {
		return *x.Page
	}
	return 0
}

func (x *ListProjectRolesRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListProjectRolesRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// ListProjectRolesResponse represents the response from lists project roles in cloudstack
type ListProjectRolesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The list of ProjectRoles
	Items []*ProjectRole `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	// The total count of ProjectRoles
	TotalCount    *int32 `protobuf:"varint,2,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListProjectRolesResponse) Reset() {
	*x = ListProjectRolesResponse{}
	mi := &file_cloudstack_management_acl_project_v1_project_gen_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListProjectRolesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProjectRolesResponse) ProtoMessage() {}

func (x *ListProjectRolesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_acl_project_v1_project_gen_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProjectRolesResponse.ProtoReflect.Descriptor instead.
func (*ListProjectRolesResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_acl_project_v1_project_gen_proto_rawDescGZIP(), []int{11}
}

func (x *ListProjectRolesResponse) GetItems() []*ProjectRole {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListProjectRolesResponse) GetTotalCount() int32 {
	if x != nil && x.TotalCount != nil {
		return *x.TotalCount
	}
	return 0
}

// UpdateProjectRoleRequest represents the parameters for creates a project role
type UpdateProjectRoleRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the Project role
	Id *int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// creates a project role with this unique name
	ProjectRoleName *string `protobuf:"bytes,2,opt,name=project_role_name,json=projectRoleName" json:"project_role_name,omitempty"`
	// ID of project where role is being created
	ProjectId *int64 `protobuf:"varint,3,opt,name=project_id,json=projectId" json:"project_id,omitempty"`
	// The description of the Project role
	ProjectRoleDescription *string `protobuf:"bytes,4,opt,name=project_role_description,json=projectRoleDescription" json:"project_role_description,omitempty"`
	ResponseType  *string `protobuf:"bytes,5,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateProjectRoleRequest) Reset() {
	*x = UpdateProjectRoleRequest{}
	mi := &file_cloudstack_management_acl_project_v1_project_gen_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateProjectRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProjectRoleRequest) ProtoMessage() {}

func (x *UpdateProjectRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_acl_project_v1_project_gen_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProjectRoleRequest.ProtoReflect.Descriptor instead.
func (*UpdateProjectRoleRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_acl_project_v1_project_gen_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateProjectRoleRequest) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *UpdateProjectRoleRequest) GetProjectRoleName() string {
	if x != nil && x.ProjectRoleName != nil {
		return *x.ProjectRoleName
	}
	return ""
}

func (x *UpdateProjectRoleRequest) GetProjectId() int64 {
	if x != nil && x.ProjectId != nil {
		return *x.ProjectId
	}
	return 0
}

func (x *UpdateProjectRoleRequest) GetProjectRoleDescription() string {
	if x != nil && x.ProjectRoleDescription != nil {
		return *x.ProjectRoleDescription
	}
	return ""
}

func (x *UpdateProjectRoleRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// UpdateProjectRoleResponse represents the response from creates a project role
type UpdateProjectRoleResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Result
	Result        *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateProjectRoleResponse) Reset() {
	*x = UpdateProjectRoleResponse{}
	mi := &file_cloudstack_management_acl_project_v1_project_gen_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateProjectRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProjectRoleResponse) ProtoMessage() {}

func (x *UpdateProjectRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_acl_project_v1_project_gen_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProjectRoleResponse.ProtoReflect.Descriptor instead.
func (*UpdateProjectRoleResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_acl_project_v1_project_gen_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateProjectRoleResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// CreateProjectRoleRequest represents the parameters for creates a project role
type CreateProjectRoleRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// creates a project role with this unique name
	ProjectRoleName *string `protobuf:"bytes,1,opt,name=project_role_name,json=projectRoleName" json:"project_role_name,omitempty"`
	// ID of project where role is being created
	ProjectId *int64 `protobuf:"varint,2,opt,name=project_id,json=projectId" json:"project_id,omitempty"`
	// The description of the Project role
	ProjectRoleDescription *string `protobuf:"bytes,3,opt,name=project_role_description,json=projectRoleDescription" json:"project_role_description,omitempty"`
	ResponseType  *string `protobuf:"bytes,4,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateProjectRoleRequest) Reset() {
	*x = CreateProjectRoleRequest{}
	mi := &file_cloudstack_management_acl_project_v1_project_gen_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateProjectRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProjectRoleRequest) ProtoMessage() {}

func (x *CreateProjectRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_acl_project_v1_project_gen_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProjectRoleRequest.ProtoReflect.Descriptor instead.
func (*CreateProjectRoleRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_acl_project_v1_project_gen_proto_rawDescGZIP(), []int{14}
}

func (x *CreateProjectRoleRequest) GetProjectRoleName() string {
	if x != nil && x.ProjectRoleName != nil {
		return *x.ProjectRoleName
	}
	return ""
}

func (x *CreateProjectRoleRequest) GetProjectId() int64 {
	if x != nil && x.ProjectId != nil {
		return *x.ProjectId
	}
	return 0
}

func (x *CreateProjectRoleRequest) GetProjectRoleDescription() string {
	if x != nil && x.ProjectRoleDescription != nil {
		return *x.ProjectRoleDescription
	}
	return ""
}

func (x *CreateProjectRoleRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// CreateProjectRoleResponse represents the response from creates a project role
type CreateProjectRoleResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Result
	Result        *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateProjectRoleResponse) Reset() {
	*x = CreateProjectRoleResponse{}
	mi := &file_cloudstack_management_acl_project_v1_project_gen_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateProjectRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProjectRoleResponse) ProtoMessage() {}

func (x *CreateProjectRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_acl_project_v1_project_gen_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProjectRoleResponse.ProtoReflect.Descriptor instead.
func (*CreateProjectRoleResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_acl_project_v1_project_gen_proto_rawDescGZIP(), []int{15}
}

func (x *CreateProjectRoleResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// ProjectRolePermission represents a ProjectRolePermission Item
type ProjectRolePermission struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the ProjectRolePermission
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// The name of the ProjectRolePermission
	Name *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// The display name of the ProjectRolePermission
	DisplayName *string `protobuf:"bytes,3,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	// The description of the ProjectRolePermission
	Description *string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	// The date this entity was created
	Created       *string `protobuf:"bytes,5,opt,name=created" json:"created,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectRolePermission) Reset() {
	*x = ProjectRolePermission{}
	mi := &file_cloudstack_management_acl_project_v1_project_gen_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectRolePermission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectRolePermission) ProtoMessage() {}

func (x *ProjectRolePermission) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_acl_project_v1_project_gen_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectRolePermission.ProtoReflect.Descriptor instead.
func (*ProjectRolePermission) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_acl_project_v1_project_gen_proto_rawDescGZIP(), []int{16}
}

func (x *ProjectRolePermission) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *ProjectRolePermission) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ProjectRolePermission) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *ProjectRolePermission) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *ProjectRolePermission) GetCreated() string {
	if x != nil && x.Created != nil {
		return *x.Created
	}
	return ""
}

// ProjectRole represents a ProjectRole Item
type ProjectRole struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the ProjectRole
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// The name of the ProjectRole
	Name *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// The display name of the ProjectRole
	DisplayName *string `protobuf:"bytes,3,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	// The description of the ProjectRole
	Description *string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	// The date this entity was created
	Created       *string `protobuf:"bytes,5,opt,name=created" json:"created,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectRole) Reset() {
	*x = ProjectRole{}
	mi := &file_cloudstack_management_acl_project_v1_project_gen_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectRole) ProtoMessage() {}

func (x *ProjectRole) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_acl_project_v1_project_gen_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectRole.ProtoReflect.Descriptor instead.
func (*ProjectRole) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_acl_project_v1_project_gen_proto_rawDescGZIP(), []int{17}
}

func (x *ProjectRole) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *ProjectRole) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ProjectRole) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *ProjectRole) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *ProjectRole) GetCreated() string {
	if x != nil && x.Created != nil {
		return *x.Created
	}
	return ""
}

// Success represents a Success Operation Response
type Success struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// true if operation is executed successfully
	Success *bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	// any text associated with the success or failure
	DisplayText   *string `protobuf:"bytes,2,opt,name=display_text,json=displayText" json:"display_text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Success) Reset() {
	*x = Success{}
	mi := &file_cloudstack_management_acl_project_v1_project_gen_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Success) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Success) ProtoMessage() {}

func (x *Success) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_acl_project_v1_project_gen_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Success.ProtoReflect.Descriptor instead.
func (*Success) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_acl_project_v1_project_gen_proto_rawDescGZIP(), []int{18}
}

func (x *Success) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *Success) GetDisplayText() string {
	if x != nil && x.DisplayText != nil {
		return *x.DisplayText
	}
	return ""
}

// Item represents a generic item in a list response
type Item struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the item
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// The name of the item
	Name *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// The display name of the item
	DisplayName *string `protobuf:"bytes,3,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	// The description of the item
	Description *string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	// The account ID the item belongs to
	AccountId *string `protobuf:"bytes,5,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	// The domain ID the item belongs to
	DomainId *string `protobuf:"bytes,6,opt,name=domain_id,json=domainId" json:"domain_id,omitempty"`
	// The domain name the item belongs to
	Domain *string `protobuf:"bytes,7,opt,name=domain" json:"domain,omitempty"`
	// The project ID the item belongs to
	ProjectId *string `protobuf:"bytes,8,opt,name=project_id,json=projectId" json:"project_id,omitempty"`
	// The project name the item belongs to
	Project *string `protobuf:"bytes,9,opt,name=project" json:"project,omitempty"`
	// The date the item was created
	Created *string `protobuf:"bytes,10,opt,name=created" json:"created,omitempty"`
	// The state of the item
	State *string `protobuf:"bytes,11,opt,name=state" json:"state,omitempty"`
	// Additional fields returned by the API
	Details       map[string]string `protobuf:"bytes,12,rep,name=details" json:"details,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Item) Reset() {
	*x = Item{}
	mi := &file_cloudstack_management_acl_project_v1_project_gen_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_acl_project_v1_project_gen_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_acl_project_v1_project_gen_proto_rawDescGZIP(), []int{19}
}

func (x *Item) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Item) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Item) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *Item) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *Item) GetAccountId() string {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return ""
}

func (x *Item) GetDomainId() string {
	if x != nil && x.DomainId != nil {
		return *x.DomainId
	}
	return ""
}

func (x *Item) GetDomain() string {
	if x != nil && x.Domain != nil {
		return *x.Domain
	}
	return ""
}

func (x *Item) GetProjectId() string {
	if x != nil && x.ProjectId != nil {
		return *x.ProjectId
	}
	return ""
}

func (x *Item) GetProject() string {
	if x != nil && x.Project != nil {
		return *x.Project
	}
	return ""
}

func (x *Item) GetCreated() string {
	if x != nil && x.Created != nil {
		return *x.Created
	}
	return ""
}

func (x *Item) GetState() string {
	if x != nil && x.State != nil {
		return *x.State
	}
	return ""
}

func (x *Item) GetDetails() map[string]string {
	if x != nil {
		return x.Details
	}
	return nil
}

// Result represents a generic operation result
type Result struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether the operation was successful
	Success *bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	// Any text associated with the success or failure
	DisplayText *string `protobuf:"bytes,2,opt,name=display_text,json=displayText" json:"display_text,omitempty"`
	// The ID of the resource affected by the operation
	Id *string `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	// The job ID for an async operation
	JobId *string `protobuf:"bytes,4,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
	// The status of the job
	JobStatus     *string `protobuf:"bytes,5,opt,name=job_status,json=jobStatus" json:"job_status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Result) Reset() {
	*x = Result{}
	mi := &file_cloudstack_management_acl_project_v1_project_gen_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_acl_project_v1_project_gen_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_acl_project_v1_project_gen_proto_rawDescGZIP(), []int{20}
}

func (x *Result) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *Result) GetDisplayText() string {
	if x != nil && x.DisplayText != nil {
		return *x.DisplayText
	}
	return ""
}

func (x *Result) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Result) GetJobId() string {
	if x != nil && x.JobId != nil {
		return *x.JobId
	}
	return ""
}

func (x *Result) GetJobStatus() string {
	if x != nil && x.JobStatus != nil {
		return *x.JobStatus
	}
	return ""
}

var File_cloudstack_management_acl_project_v1_project_gen_proto protoreflect.FileDescriptor

const file_cloudstack_management_acl_project_v1_project_gen_proto_rawDesc = "" +
	"\n" +
	"6cloudstack/management/acl/project/v1/project.gen.proto\x12$cloudstack.management.acl.project.v1\x1a(cloudstack/annotations/annotations.proto\x1a\"cloudstack/validate/validate.proto\x1a google/protobuf/descriptor.proto\"\xc3\x02\n" +
	"\"UpdateProjectRolePermissionRequest\x12.\n" +
	"\x0fproject_role_id\x18\x01 \x01(\x03B\x06\xbaH\x03\xc8\x01\x01R\rprojectRoleId\x12%\n" +
	"\n" +
	"project_id\x18\x02 \x01(\x03B\x06\xbaH\x03\xc8\x01\x01R\tprojectId\x12A\n" +
	"\x1dproject_rule_permission_order\x18\x03 \x03(\tR\x1aprojectRulePermissionOrder\x12&\n" +
	"\x0fproject_rule_id\x18\x04 \x01(\x03R\rprojectRuleId\x126\n" +
	"\x17project_role_permission\x18\x05 \x01(\tR\x15projectRolePermission\x12#\n" +
	"\rresponse_type\x18\x06 \x01(\tR\fresponseType\"k\n" +
	"#UpdateProjectRolePermissionResponse\x12D\n" +
	"\x06result\x18\x01 \x01(\v2,.cloudstack.management.acl.project.v1.ResultR\x06result\"\x97\x01\n" +
	"!ListProjectRolePermissionsRequest\x12%\n" +
	"\n" +
	"project_id\x18\x01 \x01(\x03B\x06\xbaH\x03\xc8\x01\x01R\tprojectId\x12&\n" +
	"\x0fproject_role_id\x18\x02 \x01(\x03R\rprojectRoleId\x12#\n" +
	"\rresponse_type\x18\x03 \x01(\tR\fresponseType\"\x9f\x01\n" +
	"\"ListProjectRolePermissionsResponse\x12Q\n" +
	"\x05items\x18\x01 \x03(\v2;.cloudstack.management.acl.project.v1.ProjectRolePermissionR\x05items\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount:\x05\xbaH\x02\b\x00\"~\n" +
	"\x18DeleteProjectRoleRequest\x12\x16\n" +
	"\x02id\x18\x01 \x01(\x03B\x06\xbaH\x03\xc8\x01\x01R\x02id\x12%\n" +
	"\n" +
	"project_id\x18\x02 \x01(\x03B\x06\xbaH\x03\xc8\x01\x01R\tprojectId\x12#\n" +
	"\rresponse_type\x18\x03 \x01(\tR\fresponseType\"a\n" +
	"\x19DeleteProjectRoleResponse\x12D\n" +
	"\x06result\x18\x01 \x01(\v2,.cloudstack.management.acl.project.v1.ResultR\x06result\"\xb5\x01\n" +
	"\"DeleteProjectRolePermissionRequest\x12%\n" +
	"\n" +
	"project_id\x18\x01 \x01(\x03B\x06\xbaH\x03\xc8\x01\x01R\tprojectId\x12C\n" +
	"\x1aproject_role_permission_id\x18\x02 \x01(\x03B\x06\xbaH\x03\xc8\x01\x01R\x17projectRolePermissionId\x12#\n" +
	"\rresponse_type\x18\x03 \x01(\tR\fresponseType\"k\n" +
	"#DeleteProjectRolePermissionResponse\x12D\n" +
	"\x06result\x18\x01 \x01(\v2,.cloudstack.management.acl.project.v1.ResultR\x06result\"\x92\x02\n" +
	"\"CreateProjectRolePermissionRequest\x12.\n" +
	"\x0fproject_role_id\x18\x01 \x01(\x03B\x06\xbaH\x03\xc8\x01\x01R\rprojectRoleId\x12%\n" +
	"\n" +
	"project_id\x18\x02 \x01(\x03B\x06\xbaH\x03\xc8\x01\x01R\tprojectId\x12\x1a\n" +
	"\x04rule\x18\x03 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\x04rule\x12&\n" +
	"\n" +
	"permission\x18\x04 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\n" +
	"permission\x12,\n" +
	"\vdescription\x18\x05 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x01\x18\x80\bR\vdescription\x12#\n" +
	"\rresponse_type\x18\x06 \x01(\tR\fresponseType\"k\n" +
	"#CreateProjectRolePermissionResponse\x12D\n" +
	"\x06result\x18\x01 \x01(\v2,.cloudstack.management.acl.project.v1.ResultR\x06result\"\x81\x02\n" +
	"\x17ListProjectRolesRequest\x12&\n" +
	"\x0fproject_role_id\x18\x01 \x01(\x03R\rprojectRoleId\x12%\n" +
	"\n" +
	"project_id\x18\x02 \x01(\x03B\x06\xbaH\x03\xc8\x01\x01R\tprojectId\x12'\n" +
	"\trole_name\x18\x03 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x01\x18\xff\x01R\broleName\x12\x18\n" +
	"\akeyword\x18\x04 \x01(\tR\akeyword\x12\x12\n" +
	"\x04page\x18\x05 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x06 \x01(\x05R\bpageSize\x12#\n" +
	"\rresponse_type\x18\a \x01(\tR\fresponseType\"\x8b\x01\n" +
	"\x18ListProjectRolesResponse\x12G\n" +
	"\x05items\x18\x01 \x03(\v21.cloudstack.management.acl.project.v1.ProjectRoleR\x05items\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount:\x05\xbaH\x02\b\x00\"\xfc\x01\n" +
	"\x18UpdateProjectRoleRequest\x12\x16\n" +
	"\x02id\x18\x01 \x01(\x03B\x06\xbaH\x03\xc8\x01\x01R\x02id\x126\n" +
	"\x11project_role_name\x18\x02 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x01\x18\xff\x01R\x0fprojectRoleName\x12%\n" +
	"\n" +
	"project_id\x18\x03 \x01(\x03B\x06\xbaH\x03\xc8\x01\x01R\tprojectId\x12D\n" +
	"\x18project_role_description\x18\x04 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x01\x18\x80\bR\x16projectRoleDescription\x12#\n" +
	"\rresponse_type\x18\x05 \x01(\tR\fresponseType\"a\n" +
	"\x19UpdateProjectRoleResponse\x12D\n" +
	"\x06result\x18\x01 \x01(\v2,.cloudstack.management.acl.project.v1.ResultR\x06result\"\xe7\x01\n" +
	"\x18CreateProjectRoleRequest\x129\n" +
	"\x11project_role_name\x18\x01 \x01(\tB\r\xbaH\n" +
	"\xc8\x01\x01r\x05\x10\x01\x18\xff\x01R\x0fprojectRoleName\x12%\n" +
	"\n" +
	"project_id\x18\x02 \x01(\x03B\x06\xbaH\x03\xc8\x01\x01R\tprojectId\x12D\n" +
	"\x18project_role_description\x18\x03 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x01\x18\x80\bR\x16projectRoleDescription\x12#\n" +
	"\rresponse_type\x18\x04 \x01(\tR\fresponseType\"a\n" +
	"\x19CreateProjectRoleResponse\x12D\n" +
	"\x06result\x18\x01 \x01(\v2,.cloudstack.management.acl.project.v1.ResultR\x06result\"\xa4\x01\n" +
	"\x15ProjectRolePermission\x12\x18\n" +
	"\x02id\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12!\n" +
	"\fdisplay_name\x18\x03 \x01(\tR\vdisplayName\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x18\n" +
	"\acreated\x18\x05 \x01(\tR\acreated\"\x9a\x01\n" +
	"\vProjectRole\x12\x18\n" +
	"\x02id\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12!\n" +
	"\fdisplay_name\x18\x03 \x01(\tR\vdisplayName\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x18\n" +
	"\acreated\x18\x05 \x01(\tR\acreated\"F\n" +
	"\aSuccess\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12!\n" +
	"\fdisplay_text\x18\x02 \x01(\tR\vdisplayText\"\xe3\x03\n" +
	"\x04Item\x12\x18\n" +
	"\x02id\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12!\n" +
	"\fdisplay_name\x18\x03 \x01(\tR\vdisplayName\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12'\n" +
	"\n" +
	"account_id\x18\x05 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\taccountId\x12%\n" +
	"\tdomain_id\x18\x06 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\bdomainId\x12\x16\n" +
	"\x06domain\x18\a \x01(\tR\x06domain\x12'\n" +
	"\n" +
	"project_id\x18\b \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\tprojectId\x12\x18\n" +
	"\aproject\x18\t \x01(\tR\aproject\x12\x18\n" +
	"\acreated\x18\n" +
	" \x01(\tR\acreated\x12\x14\n" +
	"\x05state\x18\v \x01(\tR\x05state\x12Q\n" +
	"\adetails\x18\f \x03(\v27.cloudstack.management.acl.project.v1.Item.DetailsEntryR\adetails\x1a:\n" +
	"\fDetailsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x9f\x01\n" +
	"\x06Result\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12!\n" +
	"\fdisplay_text\x18\x02 \x01(\tR\vdisplayText\x12\x18\n" +
	"\x02id\x18\x03 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x02id\x12\x1f\n" +
	"\x06job_id\x18\x04 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x05jobId\x12\x1d\n" +
	"\n" +
	"job_status\x18\x05 \x01(\tR\tjobStatus2\xd2\n" +
	"\n" +
	"\x0eProjectService\x12\xb4\x01\n" +
	"\x1bUpdateProjectRolePermission\x12H.cloudstack.management.acl.project.v1.UpdateProjectRolePermissionRequest\x1aI.cloudstack.management.acl.project.v1.UpdateProjectRolePermissionResponse\"\x00\x12\xb1\x01\n" +
	"\x1aListProjectRolePermissions\x12G.cloudstack.management.acl.project.v1.ListProjectRolePermissionsRequest\x1aH.cloudstack.management.acl.project.v1.ListProjectRolePermissionsResponse\"\x00\x12\x96\x01\n" +
	"\x11DeleteProjectRole\x12>.cloudstack.management.acl.project.v1.DeleteProjectRoleRequest\x1a?.cloudstack.management.acl.project.v1.DeleteProjectRoleResponse\"\x00\x12\xb4\x01\n" +
	"\x1bDeleteProjectRolePermission\x12H.cloudstack.management.acl.project.v1.DeleteProjectRolePermissionRequest\x1aI.cloudstack.management.acl.project.v1.DeleteProjectRolePermissionResponse\"\x00\x12\xb4\x01\n" +
	"\x1bCreateProjectRolePermission\x12H.cloudstack.management.acl.project.v1.CreateProjectRolePermissionRequest\x1aI.cloudstack.management.acl.project.v1.CreateProjectRolePermissionResponse\"\x00\x12\x93\x01\n" +
	"\x10ListProjectRoles\x12=.cloudstack.management.acl.project.v1.ListProjectRolesRequest\x1a>.cloudstack.management.acl.project.v1.ListProjectRolesResponse\"\x00\x12\x96\x01\n" +
	"\x11UpdateProjectRole\x12>.cloudstack.management.acl.project.v1.UpdateProjectRoleRequest\x1a?.cloudstack.management.acl.project.v1.UpdateProjectRoleResponse\"\x00\x12\x96\x01\n" +
	"\x11CreateProjectRole\x12>.cloudstack.management.acl.project.v1.CreateProjectRoleRequest\x1a?.cloudstack.management.acl.project.v1.CreateProjectRoleResponse\"\x00\x1a\x06\xc2>\x03\xc0>\x02B\xd4\x02\n" +
	"(com.cloudstack.management.acl.project.v1B\x0fProjectGenProtoP\x01Zbgithub.com/walteh/cloudstack-proxy/gen/proto/golang/cloudstack/management/acl/project/v1;projectv1\xa2\x02\x04CMAP\xaa\x02$Cloudstack.Management.Acl.Project.V1\xca\x02$Cloudstack\\Management\\Acl\\Project\\V1\xe2\x020Cloudstack\\Management\\Acl\\Project\\V1\\GPBMetadata\xea\x02(Cloudstack::Management::Acl::Project::V1b\beditionsp\xe8\a"

var (
	file_cloudstack_management_acl_project_v1_project_gen_proto_rawDescOnce sync.Once
	file_cloudstack_management_acl_project_v1_project_gen_proto_rawDescData []byte
)

func file_cloudstack_management_acl_project_v1_project_gen_proto_rawDescGZIP() []byte {
	file_cloudstack_management_acl_project_v1_project_gen_proto_rawDescOnce.Do(func() {
		file_cloudstack_management_acl_project_v1_project_gen_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_cloudstack_management_acl_project_v1_project_gen_proto_rawDesc), len(file_cloudstack_management_acl_project_v1_project_gen_proto_rawDesc)))
	})
	return file_cloudstack_management_acl_project_v1_project_gen_proto_rawDescData
}

var file_cloudstack_management_acl_project_v1_project_gen_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_cloudstack_management_acl_project_v1_project_gen_proto_goTypes = []any{
	(*UpdateProjectRolePermissionRequest)(nil),  // 0: cloudstack.management.acl.project.v1.UpdateProjectRolePermissionRequest
	(*UpdateProjectRolePermissionResponse)(nil), // 1: cloudstack.management.acl.project.v1.UpdateProjectRolePermissionResponse
	(*ListProjectRolePermissionsRequest)(nil),   // 2: cloudstack.management.acl.project.v1.ListProjectRolePermissionsRequest
	(*ListProjectRolePermissionsResponse)(nil),  // 3: cloudstack.management.acl.project.v1.ListProjectRolePermissionsResponse
	(*DeleteProjectRoleRequest)(nil),            // 4: cloudstack.management.acl.project.v1.DeleteProjectRoleRequest
	(*DeleteProjectRoleResponse)(nil),           // 5: cloudstack.management.acl.project.v1.DeleteProjectRoleResponse
	(*DeleteProjectRolePermissionRequest)(nil),  // 6: cloudstack.management.acl.project.v1.DeleteProjectRolePermissionRequest
	(*DeleteProjectRolePermissionResponse)(nil), // 7: cloudstack.management.acl.project.v1.DeleteProjectRolePermissionResponse
	(*CreateProjectRolePermissionRequest)(nil),  // 8: cloudstack.management.acl.project.v1.CreateProjectRolePermissionRequest
	(*CreateProjectRolePermissionResponse)(nil), // 9: cloudstack.management.acl.project.v1.CreateProjectRolePermissionResponse
	(*ListProjectRolesRequest)(nil),             // 10: cloudstack.management.acl.project.v1.ListProjectRolesRequest
	(*ListProjectRolesResponse)(nil),            // 11: cloudstack.management.acl.project.v1.ListProjectRolesResponse
	(*UpdateProjectRoleRequest)(nil),            // 12: cloudstack.management.acl.project.v1.UpdateProjectRoleRequest
	(*UpdateProjectRoleResponse)(nil),           // 13: cloudstack.management.acl.project.v1.UpdateProjectRoleResponse
	(*CreateProjectRoleRequest)(nil),            // 14: cloudstack.management.acl.project.v1.CreateProjectRoleRequest
	(*CreateProjectRoleResponse)(nil),           // 15: cloudstack.management.acl.project.v1.CreateProjectRoleResponse
	(*ProjectRolePermission)(nil),               // 16: cloudstack.management.acl.project.v1.ProjectRolePermission
	(*ProjectRole)(nil),                         // 17: cloudstack.management.acl.project.v1.ProjectRole
	(*Success)(nil),                             // 18: cloudstack.management.acl.project.v1.Success
	(*Item)(nil),                                // 19: cloudstack.management.acl.project.v1.Item
	(*Result)(nil),                              // 20: cloudstack.management.acl.project.v1.Result
	nil,                                         // 21: cloudstack.management.acl.project.v1.Item.DetailsEntry
}
var file_cloudstack_management_acl_project_v1_project_gen_proto_depIdxs = []int32{
	20, // 0: cloudstack.management.acl.project.v1.UpdateProjectRolePermissionResponse.result:type_name -> cloudstack.management.acl.project.v1.Result
	16, // 1: cloudstack.management.acl.project.v1.ListProjectRolePermissionsResponse.items:type_name -> cloudstack.management.acl.project.v1.ProjectRolePermission
	20, // 2: cloudstack.management.acl.project.v1.DeleteProjectRoleResponse.result:type_name -> cloudstack.management.acl.project.v1.Result
	20, // 3: cloudstack.management.acl.project.v1.DeleteProjectRolePermissionResponse.result:type_name -> cloudstack.management.acl.project.v1.Result
	20, // 4: cloudstack.management.acl.project.v1.CreateProjectRolePermissionResponse.result:type_name -> cloudstack.management.acl.project.v1.Result
	17, // 5: cloudstack.management.acl.project.v1.ListProjectRolesResponse.items:type_name -> cloudstack.management.acl.project.v1.ProjectRole
	20, // 6: cloudstack.management.acl.project.v1.UpdateProjectRoleResponse.result:type_name -> cloudstack.management.acl.project.v1.Result
	20, // 7: cloudstack.management.acl.project.v1.CreateProjectRoleResponse.result:type_name -> cloudstack.management.acl.project.v1.Result
	21, // 8: cloudstack.management.acl.project.v1.Item.details:type_name -> cloudstack.management.acl.project.v1.Item.DetailsEntry
	0,  // 9: cloudstack.management.acl.project.v1.ProjectService.UpdateProjectRolePermission:input_type -> cloudstack.management.acl.project.v1.UpdateProjectRolePermissionRequest
	2,  // 10: cloudstack.management.acl.project.v1.ProjectService.ListProjectRolePermissions:input_type -> cloudstack.management.acl.project.v1.ListProjectRolePermissionsRequest
	4,  // 11: cloudstack.management.acl.project.v1.ProjectService.DeleteProjectRole:input_type -> cloudstack.management.acl.project.v1.DeleteProjectRoleRequest
	6,  // 12: cloudstack.management.acl.project.v1.ProjectService.DeleteProjectRolePermission:input_type -> cloudstack.management.acl.project.v1.DeleteProjectRolePermissionRequest
	8,  // 13: cloudstack.management.acl.project.v1.ProjectService.CreateProjectRolePermission:input_type -> cloudstack.management.acl.project.v1.CreateProjectRolePermissionRequest
	10, // 14: cloudstack.management.acl.project.v1.ProjectService.ListProjectRoles:input_type -> cloudstack.management.acl.project.v1.ListProjectRolesRequest
	12, // 15: cloudstack.management.acl.project.v1.ProjectService.UpdateProjectRole:input_type -> cloudstack.management.acl.project.v1.UpdateProjectRoleRequest
	14, // 16: cloudstack.management.acl.project.v1.ProjectService.CreateProjectRole:input_type -> cloudstack.management.acl.project.v1.CreateProjectRoleRequest
	1,  // 17: cloudstack.management.acl.project.v1.ProjectService.UpdateProjectRolePermission:output_type -> cloudstack.management.acl.project.v1.UpdateProjectRolePermissionResponse
	3,  // 18: cloudstack.management.acl.project.v1.ProjectService.ListProjectRolePermissions:output_type -> cloudstack.management.acl.project.v1.ListProjectRolePermissionsResponse
	5,  // 19: cloudstack.management.acl.project.v1.ProjectService.DeleteProjectRole:output_type -> cloudstack.management.acl.project.v1.DeleteProjectRoleResponse
	7,  // 20: cloudstack.management.acl.project.v1.ProjectService.DeleteProjectRolePermission:output_type -> cloudstack.management.acl.project.v1.DeleteProjectRolePermissionResponse
	9,  // 21: cloudstack.management.acl.project.v1.ProjectService.CreateProjectRolePermission:output_type -> cloudstack.management.acl.project.v1.CreateProjectRolePermissionResponse
	11, // 22: cloudstack.management.acl.project.v1.ProjectService.ListProjectRoles:output_type -> cloudstack.management.acl.project.v1.ListProjectRolesResponse
	13, // 23: cloudstack.management.acl.project.v1.ProjectService.UpdateProjectRole:output_type -> cloudstack.management.acl.project.v1.UpdateProjectRoleResponse
	15, // 24: cloudstack.management.acl.project.v1.ProjectService.CreateProjectRole:output_type -> cloudstack.management.acl.project.v1.CreateProjectRoleResponse
	17, // [17:25] is the sub-list for method output_type
	9,  // [9:17] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_cloudstack_management_acl_project_v1_project_gen_proto_init() }
func file_cloudstack_management_acl_project_v1_project_gen_proto_init() {
	if File_cloudstack_management_acl_project_v1_project_gen_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_cloudstack_management_acl_project_v1_project_gen_proto_rawDesc), len(file_cloudstack_management_acl_project_v1_project_gen_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cloudstack_management_acl_project_v1_project_gen_proto_goTypes,
		DependencyIndexes: file_cloudstack_management_acl_project_v1_project_gen_proto_depIdxs,
		MessageInfos:      file_cloudstack_management_acl_project_v1_project_gen_proto_msgTypes,
	}.Build()
	File_cloudstack_management_acl_project_v1_project_gen_proto = out.File
	file_cloudstack_management_acl_project_v1_project_gen_proto_goTypes = nil
	file_cloudstack_management_acl_project_v1_project_gen_proto_depIdxs = nil
}
