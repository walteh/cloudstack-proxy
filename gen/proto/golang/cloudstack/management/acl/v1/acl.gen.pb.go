// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: cloudstack/management/acl/v1/acl.gen.proto

package aclv1

import (
	_ "github.com/walteh/cloudstack-proxy/gen/proto/golang/buf/validate"
	_ "github.com/walteh/cloudstack-proxy/gen/proto/golang/cloudstack/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// RulePermissionType represents the possible values for Rule permission, can be: allow or deny
type RulePermissionType int32

const (
	// Default unspecified value
	RulePermissionType_RULE_PERMISSION_TYPE_UNSPECIFIED RulePermissionType = 0
	// ALLOW value
	RulePermissionType_RULE_PERMISSION_TYPE_ALLOW RulePermissionType = 1
	// DENY value
	RulePermissionType_RULE_PERMISSION_TYPE_DENY RulePermissionType = 2
)

// Enum value maps for RulePermissionType.
var (
	RulePermissionType_name = map[int32]string{
		0: "RULE_PERMISSION_TYPE_UNSPECIFIED",
		1: "RULE_PERMISSION_TYPE_ALLOW",
		2: "RULE_PERMISSION_TYPE_DENY",
	}
	RulePermissionType_value = map[string]int32{
		"RULE_PERMISSION_TYPE_UNSPECIFIED": 0,
		"RULE_PERMISSION_TYPE_ALLOW":       1,
		"RULE_PERMISSION_TYPE_DENY":        2,
	}
)

func (x RulePermissionType) Enum() *RulePermissionType {
	p := new(RulePermissionType)
	*p = x
	return p
}

func (x RulePermissionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RulePermissionType) Descriptor() protoreflect.EnumDescriptor {
	return file_cloudstack_management_acl_v1_acl_gen_proto_enumTypes[0].Descriptor()
}

func (RulePermissionType) Type() protoreflect.EnumType {
	return &file_cloudstack_management_acl_v1_acl_gen_proto_enumTypes[0]
}

func (x RulePermissionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RulePermissionType.Descriptor instead.
func (RulePermissionType) EnumDescriptor() ([]byte, []int) {
	return file_cloudstack_management_acl_v1_acl_gen_proto_rawDescGZIP(), []int{0}
}

// CreateRoleRequest represents the parameters for creates a role
type CreateRoleRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Creates a role with this unique name
	RoleName *string `protobuf:"bytes,1,opt,name=role_name,json=roleName" json:"role_name,omitempty"`
	// ID of the role to be cloned from. Either roleid or type must be passed in
	RoleId *int64 `protobuf:"varint,2,opt,name=role_id,json=roleId" json:"role_id,omitempty"`
	// Indicates whether the role will be visible to all users (public) or only to root admins (private). Default is true.
	PublicRole *bool `protobuf:"varint,3,opt,name=public_role,json=publicRole" json:"public_role,omitempty"`
	// The type of the role, valid options are: Admin, ResourceAdmin, DomainAdmin, User
	RoleType *string `protobuf:"bytes,4,opt,name=role_type,json=roleType" json:"role_type,omitempty"`
	// The description of the role
	RoleDescription *string `protobuf:"bytes,5,opt,name=role_description,json=roleDescription" json:"role_description,omitempty"`
	ResponseType  *string `protobuf:"bytes,6,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRoleRequest) Reset() {
	*x = CreateRoleRequest{}
	mi := &file_cloudstack_management_acl_v1_acl_gen_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoleRequest) ProtoMessage() {}

func (x *CreateRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_acl_v1_acl_gen_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoleRequest.ProtoReflect.Descriptor instead.
func (*CreateRoleRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_acl_v1_acl_gen_proto_rawDescGZIP(), []int{0}
}

func (x *CreateRoleRequest) GetRoleName() string {
	if x != nil && x.RoleName != nil {
		return *x.RoleName
	}
	return ""
}

func (x *CreateRoleRequest) GetRoleId() int64 {
	if x != nil && x.RoleId != nil {
		return *x.RoleId
	}
	return 0
}

func (x *CreateRoleRequest) GetPublicRole() bool {
	if x != nil && x.PublicRole != nil {
		return *x.PublicRole
	}
	return false
}

func (x *CreateRoleRequest) GetRoleType() string {
	if x != nil && x.RoleType != nil {
		return *x.RoleType
	}
	return ""
}

func (x *CreateRoleRequest) GetRoleDescription() string {
	if x != nil && x.RoleDescription != nil {
		return *x.RoleDescription
	}
	return ""
}

func (x *CreateRoleRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// CreateRoleResponse represents the response from creates a role
type CreateRoleResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Result
	Result        *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRoleResponse) Reset() {
	*x = CreateRoleResponse{}
	mi := &file_cloudstack_management_acl_v1_acl_gen_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoleResponse) ProtoMessage() {}

func (x *CreateRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_acl_v1_acl_gen_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoleResponse.ProtoReflect.Descriptor instead.
func (*CreateRoleResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_acl_v1_acl_gen_proto_rawDescGZIP(), []int{1}
}

func (x *CreateRoleResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// CreateRolePermissionRequest represents the parameters for adds an api permission to a role
type CreateRolePermissionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the role
	RoleId *int64 `protobuf:"varint,1,opt,name=role_id,json=roleId" json:"role_id,omitempty"`
	// The API name or wildcard rule such as list*
	Rule *string `protobuf:"bytes,2,opt,name=rule" json:"rule,omitempty"`
	// The rule permission, allow or deny. Default: deny.
	Permission *string `protobuf:"bytes,3,opt,name=permission" json:"permission,omitempty"`
	// The description of the role permission
	Description *string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	ResponseType  *string `protobuf:"bytes,5,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRolePermissionRequest) Reset() {
	*x = CreateRolePermissionRequest{}
	mi := &file_cloudstack_management_acl_v1_acl_gen_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRolePermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRolePermissionRequest) ProtoMessage() {}

func (x *CreateRolePermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_acl_v1_acl_gen_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRolePermissionRequest.ProtoReflect.Descriptor instead.
func (*CreateRolePermissionRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_acl_v1_acl_gen_proto_rawDescGZIP(), []int{2}
}

func (x *CreateRolePermissionRequest) GetRoleId() int64 {
	if x != nil && x.RoleId != nil {
		return *x.RoleId
	}
	return 0
}

func (x *CreateRolePermissionRequest) GetRule() string {
	if x != nil && x.Rule != nil {
		return *x.Rule
	}
	return ""
}

func (x *CreateRolePermissionRequest) GetPermission() string {
	if x != nil && x.Permission != nil {
		return *x.Permission
	}
	return ""
}

func (x *CreateRolePermissionRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *CreateRolePermissionRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// CreateRolePermissionResponse represents the response from adds an api permission to a role
type CreateRolePermissionResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Result
	Result        *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRolePermissionResponse) Reset() {
	*x = CreateRolePermissionResponse{}
	mi := &file_cloudstack_management_acl_v1_acl_gen_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRolePermissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRolePermissionResponse) ProtoMessage() {}

func (x *CreateRolePermissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_acl_v1_acl_gen_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRolePermissionResponse.ProtoReflect.Descriptor instead.
func (*CreateRolePermissionResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_acl_v1_acl_gen_proto_rawDescGZIP(), []int{3}
}

func (x *CreateRolePermissionResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// DeleteRoleRequest represents the parameters for deletes a role
type DeleteRoleRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the role
	RoleId *int64 `protobuf:"varint,1,opt,name=role_id,json=roleId" json:"role_id,omitempty"`
	ResponseType  *string `protobuf:"bytes,2,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRoleRequest) Reset() {
	*x = DeleteRoleRequest{}
	mi := &file_cloudstack_management_acl_v1_acl_gen_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRoleRequest) ProtoMessage() {}

func (x *DeleteRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_acl_v1_acl_gen_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRoleRequest.ProtoReflect.Descriptor instead.
func (*DeleteRoleRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_acl_v1_acl_gen_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteRoleRequest) GetRoleId() int64 {
	if x != nil && x.RoleId != nil {
		return *x.RoleId
	}
	return 0
}

func (x *DeleteRoleRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// DeleteRoleResponse represents the response from deletes a role
type DeleteRoleResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Result
	Result        *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRoleResponse) Reset() {
	*x = DeleteRoleResponse{}
	mi := &file_cloudstack_management_acl_v1_acl_gen_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRoleResponse) ProtoMessage() {}

func (x *DeleteRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_acl_v1_acl_gen_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRoleResponse.ProtoReflect.Descriptor instead.
func (*DeleteRoleResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_acl_v1_acl_gen_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteRoleResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// DeleteRolePermissionRequest represents the parameters for deletes a role permission
type DeleteRolePermissionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the role permission
	RolePermissionId *int64 `protobuf:"varint,1,opt,name=role_permission_id,json=rolePermissionId" json:"role_permission_id,omitempty"`
	ResponseType  *string `protobuf:"bytes,2,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRolePermissionRequest) Reset() {
	*x = DeleteRolePermissionRequest{}
	mi := &file_cloudstack_management_acl_v1_acl_gen_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRolePermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRolePermissionRequest) ProtoMessage() {}

func (x *DeleteRolePermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_acl_v1_acl_gen_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRolePermissionRequest.ProtoReflect.Descriptor instead.
func (*DeleteRolePermissionRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_acl_v1_acl_gen_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteRolePermissionRequest) GetRolePermissionId() int64 {
	if x != nil && x.RolePermissionId != nil {
		return *x.RolePermissionId
	}
	return 0
}

func (x *DeleteRolePermissionRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// DeleteRolePermissionResponse represents the response from deletes a role permission
type DeleteRolePermissionResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Result
	Result        *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRolePermissionResponse) Reset() {
	*x = DeleteRolePermissionResponse{}
	mi := &file_cloudstack_management_acl_v1_acl_gen_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRolePermissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRolePermissionResponse) ProtoMessage() {}

func (x *DeleteRolePermissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_acl_v1_acl_gen_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRolePermissionResponse.ProtoReflect.Descriptor instead.
func (*DeleteRolePermissionResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_acl_v1_acl_gen_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteRolePermissionResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// DisableRoleRequest represents the parameters for disables a role
type DisableRoleRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the role
	RoleId *int64 `protobuf:"varint,1,opt,name=role_id,json=roleId" json:"role_id,omitempty"`
	ResponseType  *string `protobuf:"bytes,2,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisableRoleRequest) Reset() {
	*x = DisableRoleRequest{}
	mi := &file_cloudstack_management_acl_v1_acl_gen_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisableRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableRoleRequest) ProtoMessage() {}

func (x *DisableRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_acl_v1_acl_gen_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableRoleRequest.ProtoReflect.Descriptor instead.
func (*DisableRoleRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_acl_v1_acl_gen_proto_rawDescGZIP(), []int{8}
}

func (x *DisableRoleRequest) GetRoleId() int64 {
	if x != nil && x.RoleId != nil {
		return *x.RoleId
	}
	return 0
}

func (x *DisableRoleRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// DisableRoleResponse represents the response from disables a role
type DisableRoleResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Result
	Result        *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisableRoleResponse) Reset() {
	*x = DisableRoleResponse{}
	mi := &file_cloudstack_management_acl_v1_acl_gen_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisableRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableRoleResponse) ProtoMessage() {}

func (x *DisableRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_acl_v1_acl_gen_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableRoleResponse.ProtoReflect.Descriptor instead.
func (*DisableRoleResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_acl_v1_acl_gen_proto_rawDescGZIP(), []int{9}
}

func (x *DisableRoleResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// EnableRoleRequest represents the parameters for enables a role
type EnableRoleRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the role
	RoleId *int64 `protobuf:"varint,1,opt,name=role_id,json=roleId" json:"role_id,omitempty"`
	ResponseType  *string `protobuf:"bytes,2,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnableRoleRequest) Reset() {
	*x = EnableRoleRequest{}
	mi := &file_cloudstack_management_acl_v1_acl_gen_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnableRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableRoleRequest) ProtoMessage() {}

func (x *EnableRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_acl_v1_acl_gen_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableRoleRequest.ProtoReflect.Descriptor instead.
func (*EnableRoleRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_acl_v1_acl_gen_proto_rawDescGZIP(), []int{10}
}

func (x *EnableRoleRequest) GetRoleId() int64 {
	if x != nil && x.RoleId != nil {
		return *x.RoleId
	}
	return 0
}

func (x *EnableRoleRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// EnableRoleResponse represents the response from enables a role
type EnableRoleResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Result
	Result        *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnableRoleResponse) Reset() {
	*x = EnableRoleResponse{}
	mi := &file_cloudstack_management_acl_v1_acl_gen_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnableRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableRoleResponse) ProtoMessage() {}

func (x *EnableRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_acl_v1_acl_gen_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableRoleResponse.ProtoReflect.Descriptor instead.
func (*EnableRoleResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_acl_v1_acl_gen_proto_rawDescGZIP(), []int{11}
}

func (x *EnableRoleResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// ImportRoleRequest represents the parameters for imports a role based on provided map of rule permissions
type ImportRoleRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Creates a role with this unique name
	RoleName *string `protobuf:"bytes,1,opt,name=role_name,json=roleName" json:"role_name,omitempty"`
	// Rules param list, rule and permission is must. Example: rules[0].rule=create*&rules[0].permission=allow&rules[0].description=create%20rule&rules[1].rule=list*&rules[1].permission=allow&rules[1].description=listing
	Rules map[string]string `protobuf:"bytes,2,rep,name=rules" json:"rules,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Force create a role with the same name. This overrides the role type, description and rule permissions for the existing role. Default is false.
	Forced *bool `protobuf:"varint,3,opt,name=forced" json:"forced,omitempty"`
	// Indicates whether the role will be visible to all users (public) or only to root admins (private). If this parameter is not specified during the creation of the role its value will be defaulted to true (public).
	PublicRole *bool `protobuf:"varint,4,opt,name=public_role,json=publicRole" json:"public_role,omitempty"`
	// The type of the role, valid options are: Admin, ResourceAdmin, DomainAdmin, User
	RoleType *string `protobuf:"bytes,5,opt,name=role_type,json=roleType" json:"role_type,omitempty"`
	// The description of the role
	RoleDescription *string `protobuf:"bytes,6,opt,name=role_description,json=roleDescription" json:"role_description,omitempty"`
	ResponseType  *string `protobuf:"bytes,7,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImportRoleRequest) Reset() {
	*x = ImportRoleRequest{}
	mi := &file_cloudstack_management_acl_v1_acl_gen_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportRoleRequest) ProtoMessage() {}

func (x *ImportRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_acl_v1_acl_gen_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportRoleRequest.ProtoReflect.Descriptor instead.
func (*ImportRoleRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_acl_v1_acl_gen_proto_rawDescGZIP(), []int{12}
}

func (x *ImportRoleRequest) GetRoleName() string {
	if x != nil && x.RoleName != nil {
		return *x.RoleName
	}
	return ""
}

func (x *ImportRoleRequest) GetRules() map[string]string {
	if x != nil {
		return x.Rules
	}
	return nil
}

func (x *ImportRoleRequest) GetForced() bool {
	if x != nil && x.Forced != nil {
		return *x.Forced
	}
	return false
}

func (x *ImportRoleRequest) GetPublicRole() bool {
	if x != nil && x.PublicRole != nil {
		return *x.PublicRole
	}
	return false
}

func (x *ImportRoleRequest) GetRoleType() string {
	if x != nil && x.RoleType != nil {
		return *x.RoleType
	}
	return ""
}

func (x *ImportRoleRequest) GetRoleDescription() string {
	if x != nil && x.RoleDescription != nil {
		return *x.RoleDescription
	}
	return ""
}

func (x *ImportRoleRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// ImportRoleResponse represents the response from imports a role based on provided map of rule permissions
type ImportRoleResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Result
	Result        *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImportRoleResponse) Reset() {
	*x = ImportRoleResponse{}
	mi := &file_cloudstack_management_acl_v1_acl_gen_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportRoleResponse) ProtoMessage() {}

func (x *ImportRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_acl_v1_acl_gen_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportRoleResponse.ProtoReflect.Descriptor instead.
func (*ImportRoleResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_acl_v1_acl_gen_proto_rawDescGZIP(), []int{13}
}

func (x *ImportRoleResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// ListRolePermissionsRequest represents the parameters for lists role permissions
type ListRolePermissionsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the role
	RoleId *int64 `protobuf:"varint,1,opt,name=role_id,json=roleId" json:"role_id,omitempty"`
	ResponseType  *string `protobuf:"bytes,2,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRolePermissionsRequest) Reset() {
	*x = ListRolePermissionsRequest{}
	mi := &file_cloudstack_management_acl_v1_acl_gen_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRolePermissionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRolePermissionsRequest) ProtoMessage() {}

func (x *ListRolePermissionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_acl_v1_acl_gen_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRolePermissionsRequest.ProtoReflect.Descriptor instead.
func (*ListRolePermissionsRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_acl_v1_acl_gen_proto_rawDescGZIP(), []int{14}
}

func (x *ListRolePermissionsRequest) GetRoleId() int64 {
	if x != nil && x.RoleId != nil {
		return *x.RoleId
	}
	return 0
}

func (x *ListRolePermissionsRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// ListRolePermissionsResponse represents the response from lists role permissions
type ListRolePermissionsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The list of RolePermissions
	Items []*RolePermission `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	// The total count of RolePermissions
	TotalCount    *int32 `protobuf:"varint,2,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRolePermissionsResponse) Reset() {
	*x = ListRolePermissionsResponse{}
	mi := &file_cloudstack_management_acl_v1_acl_gen_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRolePermissionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRolePermissionsResponse) ProtoMessage() {}

func (x *ListRolePermissionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_acl_v1_acl_gen_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRolePermissionsResponse.ProtoReflect.Descriptor instead.
func (*ListRolePermissionsResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_acl_v1_acl_gen_proto_rawDescGZIP(), []int{15}
}

func (x *ListRolePermissionsResponse) GetItems() []*RolePermission {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListRolePermissionsResponse) GetTotalCount() int32 {
	if x != nil && x.TotalCount != nil {
		return *x.TotalCount
	}
	return 0
}

// ListRolesRequest represents the parameters for lists dynamic roles in cloudstack
type ListRolesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List role by role ID.
	Id *int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// List role by role name.
	RoleName *string `protobuf:"bytes,2,opt,name=role_name,json=roleName" json:"role_name,omitempty"`
	// List role by role type, valid options are: Admin, ResourceAdmin, DomainAdmin, User.
	RoleType *string `protobuf:"bytes,3,opt,name=role_type,json=roleType" json:"role_type,omitempty"`
	// List role by role type status, valid options are: enabled, disabled
	RoleState *string `protobuf:"bytes,4,opt,name=role_state,json=roleState" json:"role_state,omitempty"`
	// List by keyword
	Keyword *string `protobuf:"bytes,5,opt,name=keyword" json:"keyword,omitempty"`
	Page *int32 `protobuf:"varint,6,opt,name=page" json:"page,omitempty"`
	PageSize *int32 `protobuf:"varint,7,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	ResponseType  *string `protobuf:"bytes,8,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRolesRequest) Reset() {
	*x = ListRolesRequest{}
	mi := &file_cloudstack_management_acl_v1_acl_gen_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRolesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRolesRequest) ProtoMessage() {}

func (x *ListRolesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_acl_v1_acl_gen_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRolesRequest.ProtoReflect.Descriptor instead.
func (*ListRolesRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_acl_v1_acl_gen_proto_rawDescGZIP(), []int{16}
}

func (x *ListRolesRequest) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *ListRolesRequest) GetRoleName() string {
	if x != nil && x.RoleName != nil {
		return *x.RoleName
	}
	return ""
}

func (x *ListRolesRequest) GetRoleType() string {
	if x != nil && x.RoleType != nil {
		return *x.RoleType
	}
	return ""
}

func (x *ListRolesRequest) GetRoleState() string {
	if x != nil && x.RoleState != nil {
		return *x.RoleState
	}
	return ""
}

func (x *ListRolesRequest) GetKeyword() string {
	if x != nil && x.Keyword != nil {
		return *x.Keyword
	}
	return ""
}

func (x *ListRolesRequest) GetPage() int32 {
	if x != nil && x.Page != nil {
		return *x.Page
	}
	return 0
}

func (x *ListRolesRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListRolesRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// ListRolesResponse represents the response from lists dynamic roles in cloudstack
type ListRolesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The list of Roles
	Items []*Role `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	// The total count of Roles
	TotalCount    *int32 `protobuf:"varint,2,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRolesResponse) Reset() {
	*x = ListRolesResponse{}
	mi := &file_cloudstack_management_acl_v1_acl_gen_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRolesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRolesResponse) ProtoMessage() {}

func (x *ListRolesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_acl_v1_acl_gen_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRolesResponse.ProtoReflect.Descriptor instead.
func (*ListRolesResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_acl_v1_acl_gen_proto_rawDescGZIP(), []int{17}
}

func (x *ListRolesResponse) GetItems() []*Role {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListRolesResponse) GetTotalCount() int32 {
	if x != nil && x.TotalCount != nil {
		return *x.TotalCount
	}
	return 0
}

// UpdateRoleRequest represents the parameters for updates a role
type UpdateRoleRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the role
	RoleId *int64 `protobuf:"varint,1,opt,name=role_id,json=roleId" json:"role_id,omitempty"`
	// creates a role with this unique name
	RoleName *string `protobuf:"bytes,2,opt,name=role_name,json=roleName" json:"role_name,omitempty"`
	// The description of the role
	RoleDescription *string `protobuf:"bytes,3,opt,name=role_description,json=roleDescription" json:"role_description,omitempty"`
	// Indicates whether the role will be visible to all users (public) or only to root admins (private).
	PublicRole *bool `protobuf:"varint,4,opt,name=public_role,json=publicRole" json:"public_role,omitempty"`
	// The type of the role, valid options are: Admin, ResourceAdmin, DomainAdmin, User
	RoleType *string `protobuf:"bytes,5,opt,name=role_type,json=roleType" json:"role_type,omitempty"`
	ResponseType  *string `protobuf:"bytes,6,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRoleRequest) Reset() {
	*x = UpdateRoleRequest{}
	mi := &file_cloudstack_management_acl_v1_acl_gen_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRoleRequest) ProtoMessage() {}

func (x *UpdateRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_acl_v1_acl_gen_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRoleRequest.ProtoReflect.Descriptor instead.
func (*UpdateRoleRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_acl_v1_acl_gen_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateRoleRequest) GetRoleId() int64 {
	if x != nil && x.RoleId != nil {
		return *x.RoleId
	}
	return 0
}

func (x *UpdateRoleRequest) GetRoleName() string {
	if x != nil && x.RoleName != nil {
		return *x.RoleName
	}
	return ""
}

func (x *UpdateRoleRequest) GetRoleDescription() string {
	if x != nil && x.RoleDescription != nil {
		return *x.RoleDescription
	}
	return ""
}

func (x *UpdateRoleRequest) GetPublicRole() bool {
	if x != nil && x.PublicRole != nil {
		return *x.PublicRole
	}
	return false
}

func (x *UpdateRoleRequest) GetRoleType() string {
	if x != nil && x.RoleType != nil {
		return *x.RoleType
	}
	return ""
}

func (x *UpdateRoleRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// UpdateRoleResponse represents the response from updates a role
type UpdateRoleResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Result
	Result        *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRoleResponse) Reset() {
	*x = UpdateRoleResponse{}
	mi := &file_cloudstack_management_acl_v1_acl_gen_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRoleResponse) ProtoMessage() {}

func (x *UpdateRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_acl_v1_acl_gen_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRoleResponse.ProtoReflect.Descriptor instead.
func (*UpdateRoleResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_acl_v1_acl_gen_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateRoleResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// UpdateRolePermissionRequest represents the parameters for updates a role permission order
type UpdateRolePermissionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the role
	RoleId *int64 `protobuf:"varint,1,opt,name=role_id,json=roleId" json:"role_id,omitempty"`
	// The parent role permission uuid, use 0 to move this rule at the top of the list
	RulePermissionOrder []string `protobuf:"bytes,2,rep,name=rule_permission_order,json=rulePermissionOrder" json:"rule_permission_order,omitempty"`
	// Role permission rule id
	RuleId *int64 `protobuf:"varint,3,opt,name=rule_id,json=ruleId" json:"rule_id,omitempty"`
	// Rule permission, can be: allow or deny
	RulePermission *string `protobuf:"bytes,4,opt,name=rule_permission,json=rulePermission" json:"rule_permission,omitempty"`
	ResponseType  *string `protobuf:"bytes,5,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRolePermissionRequest) Reset() {
	*x = UpdateRolePermissionRequest{}
	mi := &file_cloudstack_management_acl_v1_acl_gen_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRolePermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRolePermissionRequest) ProtoMessage() {}

func (x *UpdateRolePermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_acl_v1_acl_gen_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRolePermissionRequest.ProtoReflect.Descriptor instead.
func (*UpdateRolePermissionRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_acl_v1_acl_gen_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateRolePermissionRequest) GetRoleId() int64 {
	if x != nil && x.RoleId != nil {
		return *x.RoleId
	}
	return 0
}

func (x *UpdateRolePermissionRequest) GetRulePermissionOrder() []string {
	if x != nil {
		return x.RulePermissionOrder
	}
	return nil
}

func (x *UpdateRolePermissionRequest) GetRuleId() int64 {
	if x != nil && x.RuleId != nil {
		return *x.RuleId
	}
	return 0
}

func (x *UpdateRolePermissionRequest) GetRulePermission() string {
	if x != nil && x.RulePermission != nil {
		return *x.RulePermission
	}
	return ""
}

func (x *UpdateRolePermissionRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// UpdateRolePermissionResponse represents the response from updates a role permission order
type UpdateRolePermissionResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Result
	Result        *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRolePermissionResponse) Reset() {
	*x = UpdateRolePermissionResponse{}
	mi := &file_cloudstack_management_acl_v1_acl_gen_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRolePermissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRolePermissionResponse) ProtoMessage() {}

func (x *UpdateRolePermissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_acl_v1_acl_gen_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRolePermissionResponse.ProtoReflect.Descriptor instead.
func (*UpdateRolePermissionResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_acl_v1_acl_gen_proto_rawDescGZIP(), []int{21}
}

func (x *UpdateRolePermissionResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// Role represents a Role Item
type Role struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the Role
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// The name of the Role
	Name *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// The display name of the Role
	DisplayName *string `protobuf:"bytes,3,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	// The description of the Role
	Description *string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	// The date this entity was created
	Created       *string `protobuf:"bytes,5,opt,name=created" json:"created,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Role) Reset() {
	*x = Role{}
	mi := &file_cloudstack_management_acl_v1_acl_gen_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Role) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Role) ProtoMessage() {}

func (x *Role) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_acl_v1_acl_gen_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Role.ProtoReflect.Descriptor instead.
func (*Role) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_acl_v1_acl_gen_proto_rawDescGZIP(), []int{22}
}

func (x *Role) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Role) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Role) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *Role) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *Role) GetCreated() string {
	if x != nil && x.Created != nil {
		return *x.Created
	}
	return ""
}

// RolePermission represents a RolePermission Item
type RolePermission struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the RolePermission
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// The name of the RolePermission
	Name *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// The display name of the RolePermission
	DisplayName *string `protobuf:"bytes,3,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	// The description of the RolePermission
	Description *string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	// The date this entity was created
	Created       *string `protobuf:"bytes,5,opt,name=created" json:"created,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RolePermission) Reset() {
	*x = RolePermission{}
	mi := &file_cloudstack_management_acl_v1_acl_gen_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RolePermission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RolePermission) ProtoMessage() {}

func (x *RolePermission) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_acl_v1_acl_gen_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RolePermission.ProtoReflect.Descriptor instead.
func (*RolePermission) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_acl_v1_acl_gen_proto_rawDescGZIP(), []int{23}
}

func (x *RolePermission) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *RolePermission) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *RolePermission) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *RolePermission) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *RolePermission) GetCreated() string {
	if x != nil && x.Created != nil {
		return *x.Created
	}
	return ""
}

// Success represents a Success Operation Response
type Success struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// true if operation is executed successfully
	Success *bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	// any text associated with the success or failure
	DisplayText   *string `protobuf:"bytes,2,opt,name=display_text,json=displayText" json:"display_text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Success) Reset() {
	*x = Success{}
	mi := &file_cloudstack_management_acl_v1_acl_gen_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Success) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Success) ProtoMessage() {}

func (x *Success) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_acl_v1_acl_gen_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Success.ProtoReflect.Descriptor instead.
func (*Success) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_acl_v1_acl_gen_proto_rawDescGZIP(), []int{24}
}

func (x *Success) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *Success) GetDisplayText() string {
	if x != nil && x.DisplayText != nil {
		return *x.DisplayText
	}
	return ""
}

// Result represents a generic operation result
type Result struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether the operation was successful
	Success *bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	// Any text associated with the success or failure
	DisplayText *string `protobuf:"bytes,2,opt,name=display_text,json=displayText" json:"display_text,omitempty"`
	// The ID of the resource affected by the operation
	Id *string `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	// The job ID for an async operation
	JobId *string `protobuf:"bytes,4,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
	// The status of the job
	JobStatus     *string `protobuf:"bytes,5,opt,name=job_status,json=jobStatus" json:"job_status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Result) Reset() {
	*x = Result{}
	mi := &file_cloudstack_management_acl_v1_acl_gen_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_acl_v1_acl_gen_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_acl_v1_acl_gen_proto_rawDescGZIP(), []int{25}
}

func (x *Result) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *Result) GetDisplayText() string {
	if x != nil && x.DisplayText != nil {
		return *x.DisplayText
	}
	return ""
}

func (x *Result) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Result) GetJobId() string {
	if x != nil && x.JobId != nil {
		return *x.JobId
	}
	return ""
}

func (x *Result) GetJobStatus() string {
	if x != nil && x.JobStatus != nil {
		return *x.JobStatus
	}
	return ""
}

var File_cloudstack_management_acl_v1_acl_gen_proto protoreflect.FileDescriptor

const file_cloudstack_management_acl_v1_acl_gen_proto_rawDesc = "" +
	"\n" +
	"*cloudstack/management/acl/v1/acl.gen.proto\x12\x1ccloudstack.management.acl.v1\x1a\x1bbuf/validate/validate.proto\x1a(cloudstack/annotations/annotations.proto\x1a google/protobuf/descriptor.proto\"\xf9\x01\n" +
	"\x11CreateRoleRequest\x12*\n" +
	"\trole_name\x18\x01 \x01(\tB\r\xbaH\n" +
	"\xc8\x01\x01r\x05\x10\x01\x18\xff\x01R\broleName\x12\x17\n" +
	"\arole_id\x18\x02 \x01(\x03R\x06roleId\x12&\n" +
	"\vpublic_role\x18\x03 \x01(\bB\x05\xaa\x01\x02\b\x01R\n" +
	"publicRole\x12\x1b\n" +
	"\trole_type\x18\x04 \x01(\tR\broleType\x125\n" +
	"\x10role_description\x18\x05 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x01\x18\x80\bR\x0froleDescription\x12#\n" +
	"\rresponse_type\x18\x06 \x01(\tR\fresponseType\"R\n" +
	"\x12CreateRoleResponse\x12<\n" +
	"\x06result\x18\x01 \x01(\v2$.cloudstack.management.acl.v1.ResultR\x06result\"\xd5\x01\n" +
	"\x1bCreateRolePermissionRequest\x12\x1f\n" +
	"\arole_id\x18\x01 \x01(\x03B\x06\xbaH\x03\xc8\x01\x01R\x06roleId\x12\x1a\n" +
	"\x04rule\x18\x02 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\x04rule\x12&\n" +
	"\n" +
	"permission\x18\x03 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\n" +
	"permission\x12,\n" +
	"\vdescription\x18\x04 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x01\x18\x80\bR\vdescription\x12#\n" +
	"\rresponse_type\x18\x05 \x01(\tR\fresponseType\"\\\n" +
	"\x1cCreateRolePermissionResponse\x12<\n" +
	"\x06result\x18\x01 \x01(\v2$.cloudstack.management.acl.v1.ResultR\x06result\"Y\n" +
	"\x11DeleteRoleRequest\x12\x1f\n" +
	"\arole_id\x18\x01 \x01(\x03B\x06\xbaH\x03\xc8\x01\x01R\x06roleId\x12#\n" +
	"\rresponse_type\x18\x02 \x01(\tR\fresponseType\"R\n" +
	"\x12DeleteRoleResponse\x12<\n" +
	"\x06result\x18\x01 \x01(\v2$.cloudstack.management.acl.v1.ResultR\x06result\"x\n" +
	"\x1bDeleteRolePermissionRequest\x124\n" +
	"\x12role_permission_id\x18\x01 \x01(\x03B\x06\xbaH\x03\xc8\x01\x01R\x10rolePermissionId\x12#\n" +
	"\rresponse_type\x18\x02 \x01(\tR\fresponseType\"\\\n" +
	"\x1cDeleteRolePermissionResponse\x12<\n" +
	"\x06result\x18\x01 \x01(\v2$.cloudstack.management.acl.v1.ResultR\x06result\"Z\n" +
	"\x12DisableRoleRequest\x12\x1f\n" +
	"\arole_id\x18\x01 \x01(\x03B\x06\xbaH\x03\xc8\x01\x01R\x06roleId\x12#\n" +
	"\rresponse_type\x18\x02 \x01(\tR\fresponseType\"S\n" +
	"\x13DisableRoleResponse\x12<\n" +
	"\x06result\x18\x01 \x01(\v2$.cloudstack.management.acl.v1.ResultR\x06result\"Y\n" +
	"\x11EnableRoleRequest\x12\x1f\n" +
	"\arole_id\x18\x01 \x01(\x03B\x06\xbaH\x03\xc8\x01\x01R\x06roleId\x12#\n" +
	"\rresponse_type\x18\x02 \x01(\tR\fresponseType\"R\n" +
	"\x12EnableRoleResponse\x12<\n" +
	"\x06result\x18\x01 \x01(\v2$.cloudstack.management.acl.v1.ResultR\x06result\"\x93\x03\n" +
	"\x11ImportRoleRequest\x12*\n" +
	"\trole_name\x18\x01 \x01(\tB\r\xbaH\n" +
	"\xc8\x01\x01r\x05\x10\x01\x18\xff\x01R\broleName\x12X\n" +
	"\x05rules\x18\x02 \x03(\v2:.cloudstack.management.acl.v1.ImportRoleRequest.RulesEntryB\x06\xbaH\x03\xc8\x01\x01R\x05rules\x12\x1d\n" +
	"\x06forced\x18\x03 \x01(\bB\x05\xaa\x01\x02\b\x01R\x06forced\x12&\n" +
	"\vpublic_role\x18\x04 \x01(\bB\x05\xaa\x01\x02\b\x01R\n" +
	"publicRole\x12\x1b\n" +
	"\trole_type\x18\x05 \x01(\tR\broleType\x125\n" +
	"\x10role_description\x18\x06 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x01\x18\x80\bR\x0froleDescription\x12#\n" +
	"\rresponse_type\x18\a \x01(\tR\fresponseType\x1a8\n" +
	"\n" +
	"RulesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"R\n" +
	"\x12ImportRoleResponse\x12<\n" +
	"\x06result\x18\x01 \x01(\v2$.cloudstack.management.acl.v1.ResultR\x06result\"Z\n" +
	"\x1aListRolePermissionsRequest\x12\x17\n" +
	"\arole_id\x18\x01 \x01(\x03R\x06roleId\x12#\n" +
	"\rresponse_type\x18\x02 \x01(\tR\fresponseType\"\x89\x01\n" +
	"\x1bListRolePermissionsResponse\x12B\n" +
	"\x05items\x18\x01 \x03(\v2,.cloudstack.management.acl.v1.RolePermissionR\x05items\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount:\x05\xbaH\x02\b\x00\"\xf7\x01\n" +
	"\x10ListRolesRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12'\n" +
	"\trole_name\x18\x02 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x01\x18\xff\x01R\broleName\x12\x1b\n" +
	"\trole_type\x18\x03 \x01(\tR\broleType\x12\x1d\n" +
	"\n" +
	"role_state\x18\x04 \x01(\tR\troleState\x12\x18\n" +
	"\akeyword\x18\x05 \x01(\tR\akeyword\x12\x12\n" +
	"\x04page\x18\x06 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\a \x01(\x05R\bpageSize\x12#\n" +
	"\rresponse_type\x18\b \x01(\tR\fresponseType\"u\n" +
	"\x11ListRolesResponse\x128\n" +
	"\x05items\x18\x01 \x03(\v2\".cloudstack.management.acl.v1.RoleR\x05items\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount:\x05\xbaH\x02\b\x00\"\xfe\x01\n" +
	"\x11UpdateRoleRequest\x12\x1f\n" +
	"\arole_id\x18\x01 \x01(\x03B\x06\xbaH\x03\xc8\x01\x01R\x06roleId\x12'\n" +
	"\trole_name\x18\x02 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x01\x18\xff\x01R\broleName\x125\n" +
	"\x10role_description\x18\x03 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x01\x18\x80\bR\x0froleDescription\x12&\n" +
	"\vpublic_role\x18\x04 \x01(\bB\x05\xaa\x01\x02\b\x01R\n" +
	"publicRole\x12\x1b\n" +
	"\trole_type\x18\x05 \x01(\tR\broleType\x12#\n" +
	"\rresponse_type\x18\x06 \x01(\tR\fresponseType\"R\n" +
	"\x12UpdateRoleResponse\x12<\n" +
	"\x06result\x18\x01 \x01(\v2$.cloudstack.management.acl.v1.ResultR\x06result\"\xd9\x01\n" +
	"\x1bUpdateRolePermissionRequest\x12\x1f\n" +
	"\arole_id\x18\x01 \x01(\x03B\x06\xbaH\x03\xc8\x01\x01R\x06roleId\x122\n" +
	"\x15rule_permission_order\x18\x02 \x03(\tR\x13rulePermissionOrder\x12\x17\n" +
	"\arule_id\x18\x03 \x01(\x03R\x06ruleId\x12'\n" +
	"\x0frule_permission\x18\x04 \x01(\tR\x0erulePermission\x12#\n" +
	"\rresponse_type\x18\x05 \x01(\tR\fresponseType\"\\\n" +
	"\x1cUpdateRolePermissionResponse\x12<\n" +
	"\x06result\x18\x01 \x01(\v2$.cloudstack.management.acl.v1.ResultR\x06result\"\x93\x01\n" +
	"\x04Role\x12\x18\n" +
	"\x02id\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12!\n" +
	"\fdisplay_name\x18\x03 \x01(\tR\vdisplayName\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x18\n" +
	"\acreated\x18\x05 \x01(\tR\acreated\"\x9d\x01\n" +
	"\x0eRolePermission\x12\x18\n" +
	"\x02id\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12!\n" +
	"\fdisplay_name\x18\x03 \x01(\tR\vdisplayName\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x18\n" +
	"\acreated\x18\x05 \x01(\tR\acreated\"F\n" +
	"\aSuccess\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12!\n" +
	"\fdisplay_text\x18\x02 \x01(\tR\vdisplayText\"\x9f\x01\n" +
	"\x06Result\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12!\n" +
	"\fdisplay_text\x18\x02 \x01(\tR\vdisplayText\x12\x18\n" +
	"\x02id\x18\x03 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x02id\x12\x1f\n" +
	"\x06job_id\x18\x04 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x05jobId\x12\x1d\n" +
	"\n" +
	"job_status\x18\x05 \x01(\tR\tjobStatus*y\n" +
	"\x12RulePermissionType\x12$\n" +
	" RULE_PERMISSION_TYPE_UNSPECIFIED\x10\x00\x12\x1e\n" +
	"\x1aRULE_PERMISSION_TYPE_ALLOW\x10\x01\x12\x1d\n" +
	"\x19RULE_PERMISSION_TYPE_DENY\x10\x022\xcc\v\n" +
	"\n" +
	"AclService\x12x\n" +
	"\n" +
	"CreateRole\x12/.cloudstack.management.acl.v1.CreateRoleRequest\x1a0.cloudstack.management.acl.v1.CreateRoleResponse\"\a\xc2>\x04\xc2>\x01\x02\x12\x96\x01\n" +
	"\x14CreateRolePermission\x129.cloudstack.management.acl.v1.CreateRolePermissionRequest\x1a:.cloudstack.management.acl.v1.CreateRolePermissionResponse\"\a\xc2>\x04\xc2>\x01\x02\x12x\n" +
	"\n" +
	"DeleteRole\x12/.cloudstack.management.acl.v1.DeleteRoleRequest\x1a0.cloudstack.management.acl.v1.DeleteRoleResponse\"\a\xc2>\x04\xc2>\x01\x02\x12\x96\x01\n" +
	"\x14DeleteRolePermission\x129.cloudstack.management.acl.v1.DeleteRolePermissionRequest\x1a:.cloudstack.management.acl.v1.DeleteRolePermissionResponse\"\a\xc2>\x04\xc2>\x01\x02\x12{\n" +
	"\vDisableRole\x120.cloudstack.management.acl.v1.DisableRoleRequest\x1a1.cloudstack.management.acl.v1.DisableRoleResponse\"\a\xc2>\x04\xc2>\x01\x02\x12x\n" +
	"\n" +
	"EnableRole\x12/.cloudstack.management.acl.v1.EnableRoleRequest\x1a0.cloudstack.management.acl.v1.EnableRoleResponse\"\a\xc2>\x04\xc2>\x01\x02\x12x\n" +
	"\n" +
	"ImportRole\x12/.cloudstack.management.acl.v1.ImportRoleRequest\x1a0.cloudstack.management.acl.v1.ImportRoleResponse\"\a\xc2>\x04\xc2>\x01\x02\x12\x93\x01\n" +
	"\x13ListRolePermissions\x128.cloudstack.management.acl.v1.ListRolePermissionsRequest\x1a9.cloudstack.management.acl.v1.ListRolePermissionsResponse\"\a\xc2>\x04\xc2>\x01\x02\x12u\n" +
	"\tListRoles\x12..cloudstack.management.acl.v1.ListRolesRequest\x1a/.cloudstack.management.acl.v1.ListRolesResponse\"\a\xc2>\x04\xc2>\x01\x02\x12x\n" +
	"\n" +
	"UpdateRole\x12/.cloudstack.management.acl.v1.UpdateRoleRequest\x1a0.cloudstack.management.acl.v1.UpdateRoleResponse\"\a\xc2>\x04\xc2>\x01\x02\x12\x96\x01\n" +
	"\x14UpdateRolePermission\x129.cloudstack.management.acl.v1.UpdateRolePermissionRequest\x1a:.cloudstack.management.acl.v1.UpdateRolePermissionResponse\"\a\xc2>\x04\xc2>\x01\x02\x1a\a\xc2>\x04\xc2>\x01\x02B\x9a\x02\n" +
	" com.cloudstack.management.acl.v1B\vAclGenProtoP\x01ZVgithub.com/walteh/cloudstack-proxy/gen/proto/golang/cloudstack/management/acl/v1;aclv1\xa2\x02\x03CMA\xaa\x02\x1cCloudstack.Management.Acl.V1\xca\x02\x1cCloudstack\\Management\\Acl\\V1\xe2\x02(Cloudstack\\Management\\Acl\\V1\\GPBMetadata\xea\x02\x1fCloudstack::Management::Acl::V1b\beditionsp\xe8\a"

var (
	file_cloudstack_management_acl_v1_acl_gen_proto_rawDescOnce sync.Once
	file_cloudstack_management_acl_v1_acl_gen_proto_rawDescData []byte
)

func file_cloudstack_management_acl_v1_acl_gen_proto_rawDescGZIP() []byte {
	file_cloudstack_management_acl_v1_acl_gen_proto_rawDescOnce.Do(func() {
		file_cloudstack_management_acl_v1_acl_gen_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_cloudstack_management_acl_v1_acl_gen_proto_rawDesc), len(file_cloudstack_management_acl_v1_acl_gen_proto_rawDesc)))
	})
	return file_cloudstack_management_acl_v1_acl_gen_proto_rawDescData
}

var file_cloudstack_management_acl_v1_acl_gen_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_cloudstack_management_acl_v1_acl_gen_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_cloudstack_management_acl_v1_acl_gen_proto_goTypes = []any{
	(RulePermissionType)(0),              // 0: cloudstack.management.acl.v1.RulePermissionType
	(*CreateRoleRequest)(nil),            // 1: cloudstack.management.acl.v1.CreateRoleRequest
	(*CreateRoleResponse)(nil),           // 2: cloudstack.management.acl.v1.CreateRoleResponse
	(*CreateRolePermissionRequest)(nil),  // 3: cloudstack.management.acl.v1.CreateRolePermissionRequest
	(*CreateRolePermissionResponse)(nil), // 4: cloudstack.management.acl.v1.CreateRolePermissionResponse
	(*DeleteRoleRequest)(nil),            // 5: cloudstack.management.acl.v1.DeleteRoleRequest
	(*DeleteRoleResponse)(nil),           // 6: cloudstack.management.acl.v1.DeleteRoleResponse
	(*DeleteRolePermissionRequest)(nil),  // 7: cloudstack.management.acl.v1.DeleteRolePermissionRequest
	(*DeleteRolePermissionResponse)(nil), // 8: cloudstack.management.acl.v1.DeleteRolePermissionResponse
	(*DisableRoleRequest)(nil),           // 9: cloudstack.management.acl.v1.DisableRoleRequest
	(*DisableRoleResponse)(nil),          // 10: cloudstack.management.acl.v1.DisableRoleResponse
	(*EnableRoleRequest)(nil),            // 11: cloudstack.management.acl.v1.EnableRoleRequest
	(*EnableRoleResponse)(nil),           // 12: cloudstack.management.acl.v1.EnableRoleResponse
	(*ImportRoleRequest)(nil),            // 13: cloudstack.management.acl.v1.ImportRoleRequest
	(*ImportRoleResponse)(nil),           // 14: cloudstack.management.acl.v1.ImportRoleResponse
	(*ListRolePermissionsRequest)(nil),   // 15: cloudstack.management.acl.v1.ListRolePermissionsRequest
	(*ListRolePermissionsResponse)(nil),  // 16: cloudstack.management.acl.v1.ListRolePermissionsResponse
	(*ListRolesRequest)(nil),             // 17: cloudstack.management.acl.v1.ListRolesRequest
	(*ListRolesResponse)(nil),            // 18: cloudstack.management.acl.v1.ListRolesResponse
	(*UpdateRoleRequest)(nil),            // 19: cloudstack.management.acl.v1.UpdateRoleRequest
	(*UpdateRoleResponse)(nil),           // 20: cloudstack.management.acl.v1.UpdateRoleResponse
	(*UpdateRolePermissionRequest)(nil),  // 21: cloudstack.management.acl.v1.UpdateRolePermissionRequest
	(*UpdateRolePermissionResponse)(nil), // 22: cloudstack.management.acl.v1.UpdateRolePermissionResponse
	(*Role)(nil),                         // 23: cloudstack.management.acl.v1.Role
	(*RolePermission)(nil),               // 24: cloudstack.management.acl.v1.RolePermission
	(*Success)(nil),                      // 25: cloudstack.management.acl.v1.Success
	(*Result)(nil),                       // 26: cloudstack.management.acl.v1.Result
	nil,                                  // 27: cloudstack.management.acl.v1.ImportRoleRequest.RulesEntry
}
var file_cloudstack_management_acl_v1_acl_gen_proto_depIdxs = []int32{
	26, // 0: cloudstack.management.acl.v1.CreateRoleResponse.result:type_name -> cloudstack.management.acl.v1.Result
	26, // 1: cloudstack.management.acl.v1.CreateRolePermissionResponse.result:type_name -> cloudstack.management.acl.v1.Result
	26, // 2: cloudstack.management.acl.v1.DeleteRoleResponse.result:type_name -> cloudstack.management.acl.v1.Result
	26, // 3: cloudstack.management.acl.v1.DeleteRolePermissionResponse.result:type_name -> cloudstack.management.acl.v1.Result
	26, // 4: cloudstack.management.acl.v1.DisableRoleResponse.result:type_name -> cloudstack.management.acl.v1.Result
	26, // 5: cloudstack.management.acl.v1.EnableRoleResponse.result:type_name -> cloudstack.management.acl.v1.Result
	27, // 6: cloudstack.management.acl.v1.ImportRoleRequest.rules:type_name -> cloudstack.management.acl.v1.ImportRoleRequest.RulesEntry
	26, // 7: cloudstack.management.acl.v1.ImportRoleResponse.result:type_name -> cloudstack.management.acl.v1.Result
	24, // 8: cloudstack.management.acl.v1.ListRolePermissionsResponse.items:type_name -> cloudstack.management.acl.v1.RolePermission
	23, // 9: cloudstack.management.acl.v1.ListRolesResponse.items:type_name -> cloudstack.management.acl.v1.Role
	26, // 10: cloudstack.management.acl.v1.UpdateRoleResponse.result:type_name -> cloudstack.management.acl.v1.Result
	26, // 11: cloudstack.management.acl.v1.UpdateRolePermissionResponse.result:type_name -> cloudstack.management.acl.v1.Result
	1,  // 12: cloudstack.management.acl.v1.AclService.CreateRole:input_type -> cloudstack.management.acl.v1.CreateRoleRequest
	3,  // 13: cloudstack.management.acl.v1.AclService.CreateRolePermission:input_type -> cloudstack.management.acl.v1.CreateRolePermissionRequest
	5,  // 14: cloudstack.management.acl.v1.AclService.DeleteRole:input_type -> cloudstack.management.acl.v1.DeleteRoleRequest
	7,  // 15: cloudstack.management.acl.v1.AclService.DeleteRolePermission:input_type -> cloudstack.management.acl.v1.DeleteRolePermissionRequest
	9,  // 16: cloudstack.management.acl.v1.AclService.DisableRole:input_type -> cloudstack.management.acl.v1.DisableRoleRequest
	11, // 17: cloudstack.management.acl.v1.AclService.EnableRole:input_type -> cloudstack.management.acl.v1.EnableRoleRequest
	13, // 18: cloudstack.management.acl.v1.AclService.ImportRole:input_type -> cloudstack.management.acl.v1.ImportRoleRequest
	15, // 19: cloudstack.management.acl.v1.AclService.ListRolePermissions:input_type -> cloudstack.management.acl.v1.ListRolePermissionsRequest
	17, // 20: cloudstack.management.acl.v1.AclService.ListRoles:input_type -> cloudstack.management.acl.v1.ListRolesRequest
	19, // 21: cloudstack.management.acl.v1.AclService.UpdateRole:input_type -> cloudstack.management.acl.v1.UpdateRoleRequest
	21, // 22: cloudstack.management.acl.v1.AclService.UpdateRolePermission:input_type -> cloudstack.management.acl.v1.UpdateRolePermissionRequest
	2,  // 23: cloudstack.management.acl.v1.AclService.CreateRole:output_type -> cloudstack.management.acl.v1.CreateRoleResponse
	4,  // 24: cloudstack.management.acl.v1.AclService.CreateRolePermission:output_type -> cloudstack.management.acl.v1.CreateRolePermissionResponse
	6,  // 25: cloudstack.management.acl.v1.AclService.DeleteRole:output_type -> cloudstack.management.acl.v1.DeleteRoleResponse
	8,  // 26: cloudstack.management.acl.v1.AclService.DeleteRolePermission:output_type -> cloudstack.management.acl.v1.DeleteRolePermissionResponse
	10, // 27: cloudstack.management.acl.v1.AclService.DisableRole:output_type -> cloudstack.management.acl.v1.DisableRoleResponse
	12, // 28: cloudstack.management.acl.v1.AclService.EnableRole:output_type -> cloudstack.management.acl.v1.EnableRoleResponse
	14, // 29: cloudstack.management.acl.v1.AclService.ImportRole:output_type -> cloudstack.management.acl.v1.ImportRoleResponse
	16, // 30: cloudstack.management.acl.v1.AclService.ListRolePermissions:output_type -> cloudstack.management.acl.v1.ListRolePermissionsResponse
	18, // 31: cloudstack.management.acl.v1.AclService.ListRoles:output_type -> cloudstack.management.acl.v1.ListRolesResponse
	20, // 32: cloudstack.management.acl.v1.AclService.UpdateRole:output_type -> cloudstack.management.acl.v1.UpdateRoleResponse
	22, // 33: cloudstack.management.acl.v1.AclService.UpdateRolePermission:output_type -> cloudstack.management.acl.v1.UpdateRolePermissionResponse
	23, // [23:34] is the sub-list for method output_type
	12, // [12:23] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_cloudstack_management_acl_v1_acl_gen_proto_init() }
func file_cloudstack_management_acl_v1_acl_gen_proto_init() {
	if File_cloudstack_management_acl_v1_acl_gen_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_cloudstack_management_acl_v1_acl_gen_proto_rawDesc), len(file_cloudstack_management_acl_v1_acl_gen_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cloudstack_management_acl_v1_acl_gen_proto_goTypes,
		DependencyIndexes: file_cloudstack_management_acl_v1_acl_gen_proto_depIdxs,
		EnumInfos:         file_cloudstack_management_acl_v1_acl_gen_proto_enumTypes,
		MessageInfos:      file_cloudstack_management_acl_v1_acl_gen_proto_msgTypes,
	}.Build()
	File_cloudstack_management_acl_v1_acl_gen_proto = out.File
	file_cloudstack_management_acl_v1_acl_gen_proto_goTypes = nil
	file_cloudstack_management_acl_v1_acl_gen_proto_depIdxs = nil
}
