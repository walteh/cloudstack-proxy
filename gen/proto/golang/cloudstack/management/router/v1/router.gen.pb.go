// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: cloudstack/management/router/v1/router.gen.proto

package routerv1

import (
	_ "github.com/walteh/cloudstack-proxy/gen/proto/golang/cloudstack/annotations"
	_ "github.com/walteh/cloudstack-proxy/gen/proto/golang/cloudstack/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ConfigureOvsElementRequest represents the parameters for configures an ovs element.
type ConfigureOvsElementRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the ID of the ovs provider
	Id *int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// Enabled/Disabled the service provider
	Enabled *bool `protobuf:"varint,2,opt,name=enabled" json:"enabled,omitempty"`
	StartEventId *int64 `protobuf:"varint,3,opt,name=start_event_id,json=startEventId" json:"start_event_id,omitempty"`
	InjectedJobId *string `protobuf:"bytes,4,opt,name=injected_job_id,json=injectedJobId" json:"injected_job_id,omitempty"`
	ResponseType  *string `protobuf:"bytes,5,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigureOvsElementRequest) Reset() {
	*x = ConfigureOvsElementRequest{}
	mi := &file_cloudstack_management_router_v1_router_gen_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigureOvsElementRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigureOvsElementRequest) ProtoMessage() {}

func (x *ConfigureOvsElementRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_router_v1_router_gen_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigureOvsElementRequest.ProtoReflect.Descriptor instead.
func (*ConfigureOvsElementRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_router_v1_router_gen_proto_rawDescGZIP(), []int{0}
}

func (x *ConfigureOvsElementRequest) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *ConfigureOvsElementRequest) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

func (x *ConfigureOvsElementRequest) GetStartEventId() int64 {
	if x != nil && x.StartEventId != nil {
		return *x.StartEventId
	}
	return 0
}

func (x *ConfigureOvsElementRequest) GetInjectedJobId() string {
	if x != nil && x.InjectedJobId != nil {
		return *x.InjectedJobId
	}
	return ""
}

func (x *ConfigureOvsElementRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// ConfigureOvsElementResponse represents the response from configures an ovs element.
type ConfigureOvsElementResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Result
	Result        *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigureOvsElementResponse) Reset() {
	*x = ConfigureOvsElementResponse{}
	mi := &file_cloudstack_management_router_v1_router_gen_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigureOvsElementResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigureOvsElementResponse) ProtoMessage() {}

func (x *ConfigureOvsElementResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_router_v1_router_gen_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigureOvsElementResponse.ProtoReflect.Descriptor instead.
func (*ConfigureOvsElementResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_router_v1_router_gen_proto_rawDescGZIP(), []int{1}
}

func (x *ConfigureOvsElementResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// ConfigureVirtualRouterElementRequest represents the parameters for configures a virtual router element.
type ConfigureVirtualRouterElementRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the ID of the virtual router provider
	Id *int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// Enabled/Disabled the service provider
	Enabled *bool `protobuf:"varint,2,opt,name=enabled" json:"enabled,omitempty"`
	StartEventId *int64 `protobuf:"varint,3,opt,name=start_event_id,json=startEventId" json:"start_event_id,omitempty"`
	InjectedJobId *string `protobuf:"bytes,4,opt,name=injected_job_id,json=injectedJobId" json:"injected_job_id,omitempty"`
	ResponseType  *string `protobuf:"bytes,5,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigureVirtualRouterElementRequest) Reset() {
	*x = ConfigureVirtualRouterElementRequest{}
	mi := &file_cloudstack_management_router_v1_router_gen_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigureVirtualRouterElementRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigureVirtualRouterElementRequest) ProtoMessage() {}

func (x *ConfigureVirtualRouterElementRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_router_v1_router_gen_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigureVirtualRouterElementRequest.ProtoReflect.Descriptor instead.
func (*ConfigureVirtualRouterElementRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_router_v1_router_gen_proto_rawDescGZIP(), []int{2}
}

func (x *ConfigureVirtualRouterElementRequest) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *ConfigureVirtualRouterElementRequest) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

func (x *ConfigureVirtualRouterElementRequest) GetStartEventId() int64 {
	if x != nil && x.StartEventId != nil {
		return *x.StartEventId
	}
	return 0
}

func (x *ConfigureVirtualRouterElementRequest) GetInjectedJobId() string {
	if x != nil && x.InjectedJobId != nil {
		return *x.InjectedJobId
	}
	return ""
}

func (x *ConfigureVirtualRouterElementRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// ConfigureVirtualRouterElementResponse represents the response from configures a virtual router element.
type ConfigureVirtualRouterElementResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Result
	Result        *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigureVirtualRouterElementResponse) Reset() {
	*x = ConfigureVirtualRouterElementResponse{}
	mi := &file_cloudstack_management_router_v1_router_gen_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigureVirtualRouterElementResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigureVirtualRouterElementResponse) ProtoMessage() {}

func (x *ConfigureVirtualRouterElementResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_router_v1_router_gen_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigureVirtualRouterElementResponse.ProtoReflect.Descriptor instead.
func (*ConfigureVirtualRouterElementResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_router_v1_router_gen_proto_rawDescGZIP(), []int{3}
}

func (x *ConfigureVirtualRouterElementResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// CreateVirtualRouterElementRequest represents the parameters for create a virtual router element.
type CreateVirtualRouterElementRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the network service provider ID of the virtual router element
	NspId *int64 `protobuf:"varint,1,opt,name=nsp_id,json=nspId" json:"nsp_id,omitempty"`
	// The provider type. Supported types are VirtualRouter (default) and VPCVirtualRouter
	ProviderType *string `protobuf:"bytes,2,opt,name=provider_type,json=providerType" json:"provider_type,omitempty"`
	StartEventId *int64 `protobuf:"varint,3,opt,name=start_event_id,json=startEventId" json:"start_event_id,omitempty"`
	InjectedJobId *string `protobuf:"bytes,4,opt,name=injected_job_id,json=injectedJobId" json:"injected_job_id,omitempty"`
	ResponseType  *string `protobuf:"bytes,5,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateVirtualRouterElementRequest) Reset() {
	*x = CreateVirtualRouterElementRequest{}
	mi := &file_cloudstack_management_router_v1_router_gen_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVirtualRouterElementRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVirtualRouterElementRequest) ProtoMessage() {}

func (x *CreateVirtualRouterElementRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_router_v1_router_gen_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVirtualRouterElementRequest.ProtoReflect.Descriptor instead.
func (*CreateVirtualRouterElementRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_router_v1_router_gen_proto_rawDescGZIP(), []int{4}
}

func (x *CreateVirtualRouterElementRequest) GetNspId() int64 {
	if x != nil && x.NspId != nil {
		return *x.NspId
	}
	return 0
}

func (x *CreateVirtualRouterElementRequest) GetProviderType() string {
	if x != nil && x.ProviderType != nil {
		return *x.ProviderType
	}
	return ""
}

func (x *CreateVirtualRouterElementRequest) GetStartEventId() int64 {
	if x != nil && x.StartEventId != nil {
		return *x.StartEventId
	}
	return 0
}

func (x *CreateVirtualRouterElementRequest) GetInjectedJobId() string {
	if x != nil && x.InjectedJobId != nil {
		return *x.InjectedJobId
	}
	return ""
}

func (x *CreateVirtualRouterElementRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// CreateVirtualRouterElementResponse represents the response from create a virtual router element.
type CreateVirtualRouterElementResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Result
	Result        *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateVirtualRouterElementResponse) Reset() {
	*x = CreateVirtualRouterElementResponse{}
	mi := &file_cloudstack_management_router_v1_router_gen_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVirtualRouterElementResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVirtualRouterElementResponse) ProtoMessage() {}

func (x *CreateVirtualRouterElementResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_router_v1_router_gen_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVirtualRouterElementResponse.ProtoReflect.Descriptor instead.
func (*CreateVirtualRouterElementResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_router_v1_router_gen_proto_rawDescGZIP(), []int{5}
}

func (x *CreateVirtualRouterElementResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// DestroyRouterRequest represents the parameters for destroys a router.
type DestroyRouterRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the ID of the router
	Id *int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	StartEventId *int64 `protobuf:"varint,2,opt,name=start_event_id,json=startEventId" json:"start_event_id,omitempty"`
	InjectedJobId *string `protobuf:"bytes,3,opt,name=injected_job_id,json=injectedJobId" json:"injected_job_id,omitempty"`
	ResponseType  *string `protobuf:"bytes,4,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DestroyRouterRequest) Reset() {
	*x = DestroyRouterRequest{}
	mi := &file_cloudstack_management_router_v1_router_gen_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DestroyRouterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestroyRouterRequest) ProtoMessage() {}

func (x *DestroyRouterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_router_v1_router_gen_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestroyRouterRequest.ProtoReflect.Descriptor instead.
func (*DestroyRouterRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_router_v1_router_gen_proto_rawDescGZIP(), []int{6}
}

func (x *DestroyRouterRequest) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *DestroyRouterRequest) GetStartEventId() int64 {
	if x != nil && x.StartEventId != nil {
		return *x.StartEventId
	}
	return 0
}

func (x *DestroyRouterRequest) GetInjectedJobId() string {
	if x != nil && x.InjectedJobId != nil {
		return *x.InjectedJobId
	}
	return ""
}

func (x *DestroyRouterRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// DestroyRouterResponse represents the response from destroys a router.
type DestroyRouterResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Result
	Result        *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DestroyRouterResponse) Reset() {
	*x = DestroyRouterResponse{}
	mi := &file_cloudstack_management_router_v1_router_gen_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DestroyRouterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestroyRouterResponse) ProtoMessage() {}

func (x *DestroyRouterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_router_v1_router_gen_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestroyRouterResponse.ProtoReflect.Descriptor instead.
func (*DestroyRouterResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_router_v1_router_gen_proto_rawDescGZIP(), []int{7}
}

func (x *DestroyRouterResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// GetRouterHealthCheckResultsRequest represents the parameters for starts a router.
type GetRouterHealthCheckResultsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the ID of the router
	RouterId *int64 `protobuf:"varint,1,opt,name=router_id,json=routerId" json:"router_id,omitempty"`
	// if true is passed for this parameter, health checks are performed on the fly. Else last performed checks data is fetched
	PerformFreshChecks *bool `protobuf:"varint,2,opt,name=perform_fresh_checks,json=performFreshChecks" json:"perform_fresh_checks,omitempty"`
	ResponseType  *string `protobuf:"bytes,3,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRouterHealthCheckResultsRequest) Reset() {
	*x = GetRouterHealthCheckResultsRequest{}
	mi := &file_cloudstack_management_router_v1_router_gen_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRouterHealthCheckResultsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRouterHealthCheckResultsRequest) ProtoMessage() {}

func (x *GetRouterHealthCheckResultsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_router_v1_router_gen_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRouterHealthCheckResultsRequest.ProtoReflect.Descriptor instead.
func (*GetRouterHealthCheckResultsRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_router_v1_router_gen_proto_rawDescGZIP(), []int{8}
}

func (x *GetRouterHealthCheckResultsRequest) GetRouterId() int64 {
	if x != nil && x.RouterId != nil {
		return *x.RouterId
	}
	return 0
}

func (x *GetRouterHealthCheckResultsRequest) GetPerformFreshChecks() bool {
	if x != nil && x.PerformFreshChecks != nil {
		return *x.PerformFreshChecks
	}
	return false
}

func (x *GetRouterHealthCheckResultsRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// GetRouterHealthCheckResultsResponse represents the response from starts a router.
type GetRouterHealthCheckResultsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Result
	Result        *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRouterHealthCheckResultsResponse) Reset() {
	*x = GetRouterHealthCheckResultsResponse{}
	mi := &file_cloudstack_management_router_v1_router_gen_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRouterHealthCheckResultsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRouterHealthCheckResultsResponse) ProtoMessage() {}

func (x *GetRouterHealthCheckResultsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_router_v1_router_gen_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRouterHealthCheckResultsResponse.ProtoReflect.Descriptor instead.
func (*GetRouterHealthCheckResultsResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_router_v1_router_gen_proto_rawDescGZIP(), []int{9}
}

func (x *GetRouterHealthCheckResultsResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// ListOvsElementsRequest represents the parameters for lists all available ovs elements.
type ListOvsElementsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// list ovs elements by id
	Id *int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// list ovs elements by network service provider id
	NspId *int64 `protobuf:"varint,2,opt,name=nsp_id,json=nspId" json:"nsp_id,omitempty"`
	// list network offerings by enabled state
	Enabled *bool `protobuf:"varint,3,opt,name=enabled" json:"enabled,omitempty"`
	// List by keyword
	Keyword *string `protobuf:"bytes,4,opt,name=keyword" json:"keyword,omitempty"`
	Page *int32 `protobuf:"varint,5,opt,name=page" json:"page,omitempty"`
	PageSize *int32 `protobuf:"varint,6,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	ResponseType  *string `protobuf:"bytes,7,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListOvsElementsRequest) Reset() {
	*x = ListOvsElementsRequest{}
	mi := &file_cloudstack_management_router_v1_router_gen_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListOvsElementsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOvsElementsRequest) ProtoMessage() {}

func (x *ListOvsElementsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_router_v1_router_gen_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOvsElementsRequest.ProtoReflect.Descriptor instead.
func (*ListOvsElementsRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_router_v1_router_gen_proto_rawDescGZIP(), []int{10}
}

func (x *ListOvsElementsRequest) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *ListOvsElementsRequest) GetNspId() int64 {
	if x != nil && x.NspId != nil {
		return *x.NspId
	}
	return 0
}

func (x *ListOvsElementsRequest) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

func (x *ListOvsElementsRequest) GetKeyword() string {
	if x != nil && x.Keyword != nil {
		return *x.Keyword
	}
	return ""
}

func (x *ListOvsElementsRequest) GetPage() int32 {
	if x != nil && x.Page != nil {
		return *x.Page
	}
	return 0
}

func (x *ListOvsElementsRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListOvsElementsRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// ListOvsElementsResponse represents the response from lists all available ovs elements.
type ListOvsElementsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The list of OvsProviders
	Items []*OvsProvider `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	// The total count of OvsProviders
	TotalCount    *int32 `protobuf:"varint,2,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListOvsElementsResponse) Reset() {
	*x = ListOvsElementsResponse{}
	mi := &file_cloudstack_management_router_v1_router_gen_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListOvsElementsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOvsElementsResponse) ProtoMessage() {}

func (x *ListOvsElementsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_router_v1_router_gen_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOvsElementsResponse.ProtoReflect.Descriptor instead.
func (*ListOvsElementsResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_router_v1_router_gen_proto_rawDescGZIP(), []int{11}
}

func (x *ListOvsElementsResponse) GetItems() []*OvsProvider {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListOvsElementsResponse) GetTotalCount() int32 {
	if x != nil && x.TotalCount != nil {
		return *x.TotalCount
	}
	return 0
}

// ListRoutersRequest represents the parameters for list routers.
type ListRoutersRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the host ID of the router
	HostId *int64 `protobuf:"varint,1,opt,name=host_id,json=hostId" json:"host_id,omitempty"`
	// the ID of the disk router
	Id *int64 `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	// the name of the router
	RouterName *string `protobuf:"bytes,3,opt,name=router_name,json=routerName" json:"router_name,omitempty"`
	// the Pod ID of the router
	PodId *int64 `protobuf:"varint,4,opt,name=pod_id,json=podId" json:"pod_id,omitempty"`
	// the state of the router
	State *string `protobuf:"bytes,5,opt,name=state" json:"state,omitempty"`
	// the Zone ID of the router
	ZoneId *int64 `protobuf:"varint,6,opt,name=zone_id,json=zoneId" json:"zone_id,omitempty"`
	// the cluster ID of the router
	ClusterId *int64 `protobuf:"varint,7,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	// list by network id
	NetworkId *int64 `protobuf:"varint,8,opt,name=network_id,json=networkId" json:"network_id,omitempty"`
	// List networks by VPC
	VpcId *int64 `protobuf:"varint,9,opt,name=vpc_id,json=vpcId" json:"vpc_id,omitempty"`
	// if true is passed for this parameter, list only VPC routers
	ForVpc *bool `protobuf:"varint,10,opt,name=for_vpc,json=forVpc" json:"for_vpc,omitempty"`
	// list virtual router elements by version
	Version *string `protobuf:"bytes,11,opt,name=version" json:"version,omitempty"`
	// if this parameter is passed, list only routers by health check results
	HealthCheckFailed *bool `protobuf:"varint,12,opt,name=health_check_failed,json=healthCheckFailed" json:"health_check_failed,omitempty"`
	// if true is passed for this parameter, also fetch last executed health check results for the router. Default is false
	FetchHealthCheckResults *bool `protobuf:"varint,13,opt,name=fetch_health_check_results,json=fetchHealthCheckResults" json:"fetch_health_check_results,omitempty"`
	// list objects by project; if projectid=-1 lists All VMs
	ProjectId *int64 `protobuf:"varint,14,opt,name=project_id,json=projectId" json:"project_id,omitempty"`
	// list resources by account. Must be used with the domainId parameter.
	AccountName *string `protobuf:"bytes,15,opt,name=account_name,json=accountName" json:"account_name,omitempty"`
	// If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false. Resources dedicated to a project are listed only if using the projectid parameter.
	ListAll *bool `protobuf:"varint,16,opt,name=list_all,json=listAll" json:"list_all,omitempty"`
	// list only resources belonging to the domain specified
	DomainId *int64 `protobuf:"varint,17,opt,name=domain_id,json=domainId" json:"domain_id,omitempty"`
	// defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.
	Recursive *bool `protobuf:"varint,18,opt,name=recursive" json:"recursive,omitempty"`
	// List by keyword
	Keyword *string `protobuf:"bytes,19,opt,name=keyword" json:"keyword,omitempty"`
	Page *int32 `protobuf:"varint,20,opt,name=page" json:"page,omitempty"`
	PageSize *int32 `protobuf:"varint,21,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	ResponseType  *string `protobuf:"bytes,22,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRoutersRequest) Reset() {
	*x = ListRoutersRequest{}
	mi := &file_cloudstack_management_router_v1_router_gen_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRoutersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRoutersRequest) ProtoMessage() {}

func (x *ListRoutersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_router_v1_router_gen_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRoutersRequest.ProtoReflect.Descriptor instead.
func (*ListRoutersRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_router_v1_router_gen_proto_rawDescGZIP(), []int{12}
}

func (x *ListRoutersRequest) GetHostId() int64 {
	if x != nil && x.HostId != nil {
		return *x.HostId
	}
	return 0
}

func (x *ListRoutersRequest) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *ListRoutersRequest) GetRouterName() string {
	if x != nil && x.RouterName != nil {
		return *x.RouterName
	}
	return ""
}

func (x *ListRoutersRequest) GetPodId() int64 {
	if x != nil && x.PodId != nil {
		return *x.PodId
	}
	return 0
}

func (x *ListRoutersRequest) GetState() string {
	if x != nil && x.State != nil {
		return *x.State
	}
	return ""
}

func (x *ListRoutersRequest) GetZoneId() int64 {
	if x != nil && x.ZoneId != nil {
		return *x.ZoneId
	}
	return 0
}

func (x *ListRoutersRequest) GetClusterId() int64 {
	if x != nil && x.ClusterId != nil {
		return *x.ClusterId
	}
	return 0
}

func (x *ListRoutersRequest) GetNetworkId() int64 {
	if x != nil && x.NetworkId != nil {
		return *x.NetworkId
	}
	return 0
}

func (x *ListRoutersRequest) GetVpcId() int64 {
	if x != nil && x.VpcId != nil {
		return *x.VpcId
	}
	return 0
}

func (x *ListRoutersRequest) GetForVpc() bool {
	if x != nil && x.ForVpc != nil {
		return *x.ForVpc
	}
	return false
}

func (x *ListRoutersRequest) GetVersion() string {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return ""
}

func (x *ListRoutersRequest) GetHealthCheckFailed() bool {
	if x != nil && x.HealthCheckFailed != nil {
		return *x.HealthCheckFailed
	}
	return false
}

func (x *ListRoutersRequest) GetFetchHealthCheckResults() bool {
	if x != nil && x.FetchHealthCheckResults != nil {
		return *x.FetchHealthCheckResults
	}
	return false
}

func (x *ListRoutersRequest) GetProjectId() int64 {
	if x != nil && x.ProjectId != nil {
		return *x.ProjectId
	}
	return 0
}

func (x *ListRoutersRequest) GetAccountName() string {
	if x != nil && x.AccountName != nil {
		return *x.AccountName
	}
	return ""
}

func (x *ListRoutersRequest) GetListAll() bool {
	if x != nil && x.ListAll != nil {
		return *x.ListAll
	}
	return false
}

func (x *ListRoutersRequest) GetDomainId() int64 {
	if x != nil && x.DomainId != nil {
		return *x.DomainId
	}
	return 0
}

func (x *ListRoutersRequest) GetRecursive() bool {
	if x != nil && x.Recursive != nil {
		return *x.Recursive
	}
	return false
}

func (x *ListRoutersRequest) GetKeyword() string {
	if x != nil && x.Keyword != nil {
		return *x.Keyword
	}
	return ""
}

func (x *ListRoutersRequest) GetPage() int32 {
	if x != nil && x.Page != nil {
		return *x.Page
	}
	return 0
}

func (x *ListRoutersRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListRoutersRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// ListRoutersResponse represents the response from list routers.
type ListRoutersResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The list of DomainRouters
	Items []*DomainRouter `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	// The total count of DomainRouters
	TotalCount    *int32 `protobuf:"varint,2,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRoutersResponse) Reset() {
	*x = ListRoutersResponse{}
	mi := &file_cloudstack_management_router_v1_router_gen_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRoutersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRoutersResponse) ProtoMessage() {}

func (x *ListRoutersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_router_v1_router_gen_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRoutersResponse.ProtoReflect.Descriptor instead.
func (*ListRoutersResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_router_v1_router_gen_proto_rawDescGZIP(), []int{13}
}

func (x *ListRoutersResponse) GetItems() []*DomainRouter {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListRoutersResponse) GetTotalCount() int32 {
	if x != nil && x.TotalCount != nil {
		return *x.TotalCount
	}
	return 0
}

// ListVirtualRouterElementsRequest represents the parameters for lists all available virtual router elements.
type ListVirtualRouterElementsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// list virtual router elements by id
	Id *int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// list virtual router elements by network service provider id
	NspId *int64 `protobuf:"varint,2,opt,name=nsp_id,json=nspId" json:"nsp_id,omitempty"`
	// list network offerings by enabled state
	Enabled *bool `protobuf:"varint,3,opt,name=enabled" json:"enabled,omitempty"`
	// List by keyword
	Keyword *string `protobuf:"bytes,4,opt,name=keyword" json:"keyword,omitempty"`
	Page *int32 `protobuf:"varint,5,opt,name=page" json:"page,omitempty"`
	PageSize *int32 `protobuf:"varint,6,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	ResponseType  *string `protobuf:"bytes,7,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListVirtualRouterElementsRequest) Reset() {
	*x = ListVirtualRouterElementsRequest{}
	mi := &file_cloudstack_management_router_v1_router_gen_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVirtualRouterElementsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVirtualRouterElementsRequest) ProtoMessage() {}

func (x *ListVirtualRouterElementsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_router_v1_router_gen_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVirtualRouterElementsRequest.ProtoReflect.Descriptor instead.
func (*ListVirtualRouterElementsRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_router_v1_router_gen_proto_rawDescGZIP(), []int{14}
}

func (x *ListVirtualRouterElementsRequest) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *ListVirtualRouterElementsRequest) GetNspId() int64 {
	if x != nil && x.NspId != nil {
		return *x.NspId
	}
	return 0
}

func (x *ListVirtualRouterElementsRequest) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

func (x *ListVirtualRouterElementsRequest) GetKeyword() string {
	if x != nil && x.Keyword != nil {
		return *x.Keyword
	}
	return ""
}

func (x *ListVirtualRouterElementsRequest) GetPage() int32 {
	if x != nil && x.Page != nil {
		return *x.Page
	}
	return 0
}

func (x *ListVirtualRouterElementsRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListVirtualRouterElementsRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// ListVirtualRouterElementsResponse represents the response from lists all available virtual router elements.
type ListVirtualRouterElementsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The list of VirtualRouterProviders
	Items []*VirtualRouterProvider `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	// The total count of VirtualRouterProviders
	TotalCount    *int32 `protobuf:"varint,2,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListVirtualRouterElementsResponse) Reset() {
	*x = ListVirtualRouterElementsResponse{}
	mi := &file_cloudstack_management_router_v1_router_gen_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVirtualRouterElementsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVirtualRouterElementsResponse) ProtoMessage() {}

func (x *ListVirtualRouterElementsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_router_v1_router_gen_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVirtualRouterElementsResponse.ProtoReflect.Descriptor instead.
func (*ListVirtualRouterElementsResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_router_v1_router_gen_proto_rawDescGZIP(), []int{15}
}

func (x *ListVirtualRouterElementsResponse) GetItems() []*VirtualRouterProvider {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListVirtualRouterElementsResponse) GetTotalCount() int32 {
	if x != nil && x.TotalCount != nil {
		return *x.TotalCount
	}
	return 0
}

// RebootRouterRequest represents the parameters for starts a router.
type RebootRouterRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the ID of the router
	Id *int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// Force reboot the router (Router is force Stopped and then Started)
	Forced *bool `protobuf:"varint,2,opt,name=forced" json:"forced,omitempty"`
	StartEventId *int64 `protobuf:"varint,3,opt,name=start_event_id,json=startEventId" json:"start_event_id,omitempty"`
	InjectedJobId *string `protobuf:"bytes,4,opt,name=injected_job_id,json=injectedJobId" json:"injected_job_id,omitempty"`
	ResponseType  *string `protobuf:"bytes,5,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RebootRouterRequest) Reset() {
	*x = RebootRouterRequest{}
	mi := &file_cloudstack_management_router_v1_router_gen_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RebootRouterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RebootRouterRequest) ProtoMessage() {}

func (x *RebootRouterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_router_v1_router_gen_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RebootRouterRequest.ProtoReflect.Descriptor instead.
func (*RebootRouterRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_router_v1_router_gen_proto_rawDescGZIP(), []int{16}
}

func (x *RebootRouterRequest) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *RebootRouterRequest) GetForced() bool {
	if x != nil && x.Forced != nil {
		return *x.Forced
	}
	return false
}

func (x *RebootRouterRequest) GetStartEventId() int64 {
	if x != nil && x.StartEventId != nil {
		return *x.StartEventId
	}
	return 0
}

func (x *RebootRouterRequest) GetInjectedJobId() string {
	if x != nil && x.InjectedJobId != nil {
		return *x.InjectedJobId
	}
	return ""
}

func (x *RebootRouterRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// RebootRouterResponse represents the response from starts a router.
type RebootRouterResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Result
	Result        *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RebootRouterResponse) Reset() {
	*x = RebootRouterResponse{}
	mi := &file_cloudstack_management_router_v1_router_gen_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RebootRouterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RebootRouterResponse) ProtoMessage() {}

func (x *RebootRouterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_router_v1_router_gen_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RebootRouterResponse.ProtoReflect.Descriptor instead.
func (*RebootRouterResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_router_v1_router_gen_proto_rawDescGZIP(), []int{17}
}

func (x *RebootRouterResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// StartRouterRequest represents the parameters for starts a router.
type StartRouterRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the ID of the router
	Id *int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	StartEventId *int64 `protobuf:"varint,2,opt,name=start_event_id,json=startEventId" json:"start_event_id,omitempty"`
	InjectedJobId *string `protobuf:"bytes,3,opt,name=injected_job_id,json=injectedJobId" json:"injected_job_id,omitempty"`
	ResponseType  *string `protobuf:"bytes,4,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartRouterRequest) Reset() {
	*x = StartRouterRequest{}
	mi := &file_cloudstack_management_router_v1_router_gen_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartRouterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartRouterRequest) ProtoMessage() {}

func (x *StartRouterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_router_v1_router_gen_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartRouterRequest.ProtoReflect.Descriptor instead.
func (*StartRouterRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_router_v1_router_gen_proto_rawDescGZIP(), []int{18}
}

func (x *StartRouterRequest) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *StartRouterRequest) GetStartEventId() int64 {
	if x != nil && x.StartEventId != nil {
		return *x.StartEventId
	}
	return 0
}

func (x *StartRouterRequest) GetInjectedJobId() string {
	if x != nil && x.InjectedJobId != nil {
		return *x.InjectedJobId
	}
	return ""
}

func (x *StartRouterRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// StartRouterResponse represents the response from starts a router.
type StartRouterResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Result
	Result        *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartRouterResponse) Reset() {
	*x = StartRouterResponse{}
	mi := &file_cloudstack_management_router_v1_router_gen_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartRouterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartRouterResponse) ProtoMessage() {}

func (x *StartRouterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_router_v1_router_gen_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartRouterResponse.ProtoReflect.Descriptor instead.
func (*StartRouterResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_router_v1_router_gen_proto_rawDescGZIP(), []int{19}
}

func (x *StartRouterResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// StopRouterRequest represents the parameters for stops a router.
type StopRouterRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the ID of the router
	Id *int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// Force stop the VM (vm is marked as Stopped even when command fails to be send to the backend, otherwise a force poweroff is attempted). To be used if the caller knows the VM is stopped and should be marked as such.
	Forced *bool `protobuf:"varint,2,opt,name=forced" json:"forced,omitempty"`
	StartEventId *int64 `protobuf:"varint,3,opt,name=start_event_id,json=startEventId" json:"start_event_id,omitempty"`
	InjectedJobId *string `protobuf:"bytes,4,opt,name=injected_job_id,json=injectedJobId" json:"injected_job_id,omitempty"`
	ResponseType  *string `protobuf:"bytes,5,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopRouterRequest) Reset() {
	*x = StopRouterRequest{}
	mi := &file_cloudstack_management_router_v1_router_gen_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopRouterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopRouterRequest) ProtoMessage() {}

func (x *StopRouterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_router_v1_router_gen_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopRouterRequest.ProtoReflect.Descriptor instead.
func (*StopRouterRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_router_v1_router_gen_proto_rawDescGZIP(), []int{20}
}

func (x *StopRouterRequest) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *StopRouterRequest) GetForced() bool {
	if x != nil && x.Forced != nil {
		return *x.Forced
	}
	return false
}

func (x *StopRouterRequest) GetStartEventId() int64 {
	if x != nil && x.StartEventId != nil {
		return *x.StartEventId
	}
	return 0
}

func (x *StopRouterRequest) GetInjectedJobId() string {
	if x != nil && x.InjectedJobId != nil {
		return *x.InjectedJobId
	}
	return ""
}

func (x *StopRouterRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// StopRouterResponse represents the response from stops a router.
type StopRouterResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Result
	Result        *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopRouterResponse) Reset() {
	*x = StopRouterResponse{}
	mi := &file_cloudstack_management_router_v1_router_gen_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopRouterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopRouterResponse) ProtoMessage() {}

func (x *StopRouterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_router_v1_router_gen_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopRouterResponse.ProtoReflect.Descriptor instead.
func (*StopRouterResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_router_v1_router_gen_proto_rawDescGZIP(), []int{21}
}

func (x *StopRouterResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// UpgradeRouterRequest represents the parameters for upgrades domain router to a new service offering
type UpgradeRouterRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the router
	Id *int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// the service offering ID to apply to the domain router
	ServiceOfferingId *int64 `protobuf:"varint,2,opt,name=service_offering_id,json=serviceOfferingId" json:"service_offering_id,omitempty"`
	ResponseType  *string `protobuf:"bytes,3,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpgradeRouterRequest) Reset() {
	*x = UpgradeRouterRequest{}
	mi := &file_cloudstack_management_router_v1_router_gen_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpgradeRouterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradeRouterRequest) ProtoMessage() {}

func (x *UpgradeRouterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_router_v1_router_gen_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpgradeRouterRequest.ProtoReflect.Descriptor instead.
func (*UpgradeRouterRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_router_v1_router_gen_proto_rawDescGZIP(), []int{22}
}

func (x *UpgradeRouterRequest) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *UpgradeRouterRequest) GetServiceOfferingId() int64 {
	if x != nil && x.ServiceOfferingId != nil {
		return *x.ServiceOfferingId
	}
	return 0
}

func (x *UpgradeRouterRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// UpgradeRouterResponse represents the response from upgrades domain router to a new service offering
type UpgradeRouterResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Result
	Result        *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpgradeRouterResponse) Reset() {
	*x = UpgradeRouterResponse{}
	mi := &file_cloudstack_management_router_v1_router_gen_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpgradeRouterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradeRouterResponse) ProtoMessage() {}

func (x *UpgradeRouterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_router_v1_router_gen_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpgradeRouterResponse.ProtoReflect.Descriptor instead.
func (*UpgradeRouterResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_router_v1_router_gen_proto_rawDescGZIP(), []int{23}
}

func (x *UpgradeRouterResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// UpgradeRouterTemplateRequest represents the parameters for upgrades router to use newer template
type UpgradeRouterTemplateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// upgrades router with the specified Id
	Id *int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// upgrades all routers within the specified cluster
	ClusterId *int64 `protobuf:"varint,2,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	// upgrades all routers within the specified pod
	PodId *int64 `protobuf:"varint,3,opt,name=pod_id,json=podId" json:"pod_id,omitempty"`
	// upgrades all routers within the specified zone
	ZoneId *int64 `protobuf:"varint,4,opt,name=zone_id,json=zoneId" json:"zone_id,omitempty"`
	// upgrades all routers owned by the specified account
	Account *string `protobuf:"bytes,5,opt,name=account" json:"account,omitempty"`
	// upgrades all routers owned by the specified domain
	DomainId *int64 `protobuf:"varint,6,opt,name=domain_id,json=domainId" json:"domain_id,omitempty"`
	ResponseType  *string `protobuf:"bytes,7,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpgradeRouterTemplateRequest) Reset() {
	*x = UpgradeRouterTemplateRequest{}
	mi := &file_cloudstack_management_router_v1_router_gen_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpgradeRouterTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradeRouterTemplateRequest) ProtoMessage() {}

func (x *UpgradeRouterTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_router_v1_router_gen_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpgradeRouterTemplateRequest.ProtoReflect.Descriptor instead.
func (*UpgradeRouterTemplateRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_router_v1_router_gen_proto_rawDescGZIP(), []int{24}
}

func (x *UpgradeRouterTemplateRequest) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *UpgradeRouterTemplateRequest) GetClusterId() int64 {
	if x != nil && x.ClusterId != nil {
		return *x.ClusterId
	}
	return 0
}

func (x *UpgradeRouterTemplateRequest) GetPodId() int64 {
	if x != nil && x.PodId != nil {
		return *x.PodId
	}
	return 0
}

func (x *UpgradeRouterTemplateRequest) GetZoneId() int64 {
	if x != nil && x.ZoneId != nil {
		return *x.ZoneId
	}
	return 0
}

func (x *UpgradeRouterTemplateRequest) GetAccount() string {
	if x != nil && x.Account != nil {
		return *x.Account
	}
	return ""
}

func (x *UpgradeRouterTemplateRequest) GetDomainId() int64 {
	if x != nil && x.DomainId != nil {
		return *x.DomainId
	}
	return 0
}

func (x *UpgradeRouterTemplateRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// UpgradeRouterTemplateResponse represents the response from upgrades router to use newer template
type UpgradeRouterTemplateResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Result
	Result        *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpgradeRouterTemplateResponse) Reset() {
	*x = UpgradeRouterTemplateResponse{}
	mi := &file_cloudstack_management_router_v1_router_gen_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpgradeRouterTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradeRouterTemplateResponse) ProtoMessage() {}

func (x *UpgradeRouterTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_router_v1_router_gen_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpgradeRouterTemplateResponse.ProtoReflect.Descriptor instead.
func (*UpgradeRouterTemplateResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_router_v1_router_gen_proto_rawDescGZIP(), []int{25}
}

func (x *UpgradeRouterTemplateResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// DomainRouter represents a DomainRouter Item
type DomainRouter struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the DomainRouter
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// The name of the DomainRouter
	Name *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// The display name of the DomainRouter
	DisplayName *string `protobuf:"bytes,3,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	// The description of the DomainRouter
	Description *string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	// The date this entity was created
	Created       *string `protobuf:"bytes,5,opt,name=created" json:"created,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DomainRouter) Reset() {
	*x = DomainRouter{}
	mi := &file_cloudstack_management_router_v1_router_gen_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DomainRouter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DomainRouter) ProtoMessage() {}

func (x *DomainRouter) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_router_v1_router_gen_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DomainRouter.ProtoReflect.Descriptor instead.
func (*DomainRouter) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_router_v1_router_gen_proto_rawDescGZIP(), []int{26}
}

func (x *DomainRouter) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *DomainRouter) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *DomainRouter) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *DomainRouter) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *DomainRouter) GetCreated() string {
	if x != nil && x.Created != nil {
		return *x.Created
	}
	return ""
}

// OvsProvider represents a OvsProvider Item
type OvsProvider struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the OvsProvider
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// The name of the OvsProvider
	Name *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// The display name of the OvsProvider
	DisplayName *string `protobuf:"bytes,3,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	// The description of the OvsProvider
	Description *string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	// The date this entity was created
	Created       *string `protobuf:"bytes,5,opt,name=created" json:"created,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OvsProvider) Reset() {
	*x = OvsProvider{}
	mi := &file_cloudstack_management_router_v1_router_gen_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OvsProvider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OvsProvider) ProtoMessage() {}

func (x *OvsProvider) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_router_v1_router_gen_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OvsProvider.ProtoReflect.Descriptor instead.
func (*OvsProvider) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_router_v1_router_gen_proto_rawDescGZIP(), []int{27}
}

func (x *OvsProvider) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *OvsProvider) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *OvsProvider) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *OvsProvider) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *OvsProvider) GetCreated() string {
	if x != nil && x.Created != nil {
		return *x.Created
	}
	return ""
}

// VirtualRouterProvider represents a VirtualRouterProvider Item
type VirtualRouterProvider struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the VirtualRouterProvider
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// The name of the VirtualRouterProvider
	Name *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// The display name of the VirtualRouterProvider
	DisplayName *string `protobuf:"bytes,3,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	// The description of the VirtualRouterProvider
	Description *string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	// The date this entity was created
	Created       *string `protobuf:"bytes,5,opt,name=created" json:"created,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VirtualRouterProvider) Reset() {
	*x = VirtualRouterProvider{}
	mi := &file_cloudstack_management_router_v1_router_gen_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VirtualRouterProvider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualRouterProvider) ProtoMessage() {}

func (x *VirtualRouterProvider) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_router_v1_router_gen_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualRouterProvider.ProtoReflect.Descriptor instead.
func (*VirtualRouterProvider) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_router_v1_router_gen_proto_rawDescGZIP(), []int{28}
}

func (x *VirtualRouterProvider) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *VirtualRouterProvider) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *VirtualRouterProvider) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *VirtualRouterProvider) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *VirtualRouterProvider) GetCreated() string {
	if x != nil && x.Created != nil {
		return *x.Created
	}
	return ""
}

// Success represents a Success Operation Response
type Success struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// true if operation is executed successfully
	Success *bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	// any text associated with the success or failure
	DisplayText   *string `protobuf:"bytes,2,opt,name=display_text,json=displayText" json:"display_text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Success) Reset() {
	*x = Success{}
	mi := &file_cloudstack_management_router_v1_router_gen_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Success) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Success) ProtoMessage() {}

func (x *Success) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_router_v1_router_gen_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Success.ProtoReflect.Descriptor instead.
func (*Success) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_router_v1_router_gen_proto_rawDescGZIP(), []int{29}
}

func (x *Success) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *Success) GetDisplayText() string {
	if x != nil && x.DisplayText != nil {
		return *x.DisplayText
	}
	return ""
}

// Result represents a generic operation result
type Result struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether the operation was successful
	Success *bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	// Any text associated with the success or failure
	DisplayText *string `protobuf:"bytes,2,opt,name=display_text,json=displayText" json:"display_text,omitempty"`
	// The ID of the resource affected by the operation
	Id *string `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	// The job ID for an async operation
	JobId *string `protobuf:"bytes,4,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
	// The status of the job
	JobStatus     *string `protobuf:"bytes,5,opt,name=job_status,json=jobStatus" json:"job_status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Result) Reset() {
	*x = Result{}
	mi := &file_cloudstack_management_router_v1_router_gen_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_router_v1_router_gen_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_router_v1_router_gen_proto_rawDescGZIP(), []int{30}
}

func (x *Result) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *Result) GetDisplayText() string {
	if x != nil && x.DisplayText != nil {
		return *x.DisplayText
	}
	return ""
}

func (x *Result) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Result) GetJobId() string {
	if x != nil && x.JobId != nil {
		return *x.JobId
	}
	return ""
}

func (x *Result) GetJobStatus() string {
	if x != nil && x.JobStatus != nil {
		return *x.JobStatus
	}
	return ""
}

var File_cloudstack_management_router_v1_router_gen_proto protoreflect.FileDescriptor

const file_cloudstack_management_router_v1_router_gen_proto_rawDesc = "" +
	"\n" +
	"0cloudstack/management/router/v1/router.gen.proto\x12\x1fcloudstack.management.router.v1\x1a(cloudstack/annotations/annotations.proto\x1a\"cloudstack/validate/validate.proto\x1a google/protobuf/descriptor.proto\"\xd8\x01\n" +
	"\x1aConfigureOvsElementRequest\x12\x16\n" +
	"\x02id\x18\x01 \x01(\x03B\x06\xbaH\x03\xc8\x01\x01R\x02id\x12%\n" +
	"\aenabled\x18\x02 \x01(\bB\v\xbaH\x03\xc8\x01\x01\xaa\x01\x02\b\x01R\aenabled\x12$\n" +
	"\x0estart_event_id\x18\x03 \x01(\x03R\fstartEventId\x120\n" +
	"\x0finjected_job_id\x18\x04 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\rinjectedJobId\x12#\n" +
	"\rresponse_type\x18\x05 \x01(\tR\fresponseType\"^\n" +
	"\x1bConfigureOvsElementResponse\x12?\n" +
	"\x06result\x18\x01 \x01(\v2'.cloudstack.management.router.v1.ResultR\x06result\"\xe2\x01\n" +
	"$ConfigureVirtualRouterElementRequest\x12\x16\n" +
	"\x02id\x18\x01 \x01(\x03B\x06\xbaH\x03\xc8\x01\x01R\x02id\x12%\n" +
	"\aenabled\x18\x02 \x01(\bB\v\xbaH\x03\xc8\x01\x01\xaa\x01\x02\b\x01R\aenabled\x12$\n" +
	"\x0estart_event_id\x18\x03 \x01(\x03R\fstartEventId\x120\n" +
	"\x0finjected_job_id\x18\x04 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\rinjectedJobId\x12#\n" +
	"\rresponse_type\x18\x05 \x01(\tR\fresponseType\"h\n" +
	"%ConfigureVirtualRouterElementResponse\x12?\n" +
	"\x06result\x18\x01 \x01(\v2'.cloudstack.management.router.v1.ResultR\x06result\"\xee\x01\n" +
	"!CreateVirtualRouterElementRequest\x12\x1d\n" +
	"\x06nsp_id\x18\x01 \x01(\x03B\x06\xbaH\x03\xc8\x01\x01R\x05nspId\x12-\n" +
	"\rprovider_type\x18\x02 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\fproviderType\x12$\n" +
	"\x0estart_event_id\x18\x03 \x01(\x03R\fstartEventId\x120\n" +
	"\x0finjected_job_id\x18\x04 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\rinjectedJobId\x12#\n" +
	"\rresponse_type\x18\x05 \x01(\tR\fresponseType\"e\n" +
	"\"CreateVirtualRouterElementResponse\x12?\n" +
	"\x06result\x18\x01 \x01(\v2'.cloudstack.management.router.v1.ResultR\x06result\"\xab\x01\n" +
	"\x14DestroyRouterRequest\x12\x16\n" +
	"\x02id\x18\x01 \x01(\x03B\x06\xbaH\x03\xc8\x01\x01R\x02id\x12$\n" +
	"\x0estart_event_id\x18\x02 \x01(\x03R\fstartEventId\x120\n" +
	"\x0finjected_job_id\x18\x03 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\rinjectedJobId\x12#\n" +
	"\rresponse_type\x18\x04 \x01(\tR\fresponseType\"X\n" +
	"\x15DestroyRouterResponse\x12?\n" +
	"\x06result\x18\x01 \x01(\v2'.cloudstack.management.router.v1.ResultR\x06result\"\xa7\x01\n" +
	"\"GetRouterHealthCheckResultsRequest\x12#\n" +
	"\trouter_id\x18\x01 \x01(\x03B\x06\xbaH\x03\xc8\x01\x01R\brouterId\x127\n" +
	"\x14perform_fresh_checks\x18\x02 \x01(\bB\x05\xaa\x01\x02\b\x01R\x12performFreshChecks\x12#\n" +
	"\rresponse_type\x18\x03 \x01(\tR\fresponseType\"f\n" +
	"#GetRouterHealthCheckResultsResponse\x12?\n" +
	"\x06result\x18\x01 \x01(\v2'.cloudstack.management.router.v1.ResultR\x06result\"\xd0\x01\n" +
	"\x16ListOvsElementsRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x15\n" +
	"\x06nsp_id\x18\x02 \x01(\x03R\x05nspId\x12\x1f\n" +
	"\aenabled\x18\x03 \x01(\bB\x05\xaa\x01\x02\b\x01R\aenabled\x12\x18\n" +
	"\akeyword\x18\x04 \x01(\tR\akeyword\x12\x12\n" +
	"\x04page\x18\x05 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x06 \x01(\x05R\bpageSize\x12#\n" +
	"\rresponse_type\x18\a \x01(\tR\fresponseType\"\x85\x01\n" +
	"\x17ListOvsElementsResponse\x12B\n" +
	"\x05items\x18\x01 \x03(\v2,.cloudstack.management.router.v1.OvsProviderR\x05items\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount:\x05\xbaH\x02\b\x00\"\xd0\x06\n" +
	"\x12ListRoutersRequest\x12\x17\n" +
	"\ahost_id\x18\x01 \x01(\x03R\x06hostId\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\x03R\x02id\x12+\n" +
	"\vrouter_name\x18\x03 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x01\x18\xff\x01R\n" +
	"routerName\x12\x15\n" +
	"\x06pod_id\x18\x04 \x01(\x03R\x05podId\x12\x14\n" +
	"\x05state\x18\x05 \x01(\tR\x05state\x12\x17\n" +
	"\azone_id\x18\x06 \x01(\x03R\x06zoneId\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\a \x01(\x03R\tclusterId\x12\x1d\n" +
	"\n" +
	"network_id\x18\b \x01(\x03R\tnetworkId\x12\x15\n" +
	"\x06vpc_id\x18\t \x01(\x03R\x05vpcId\x12\x1e\n" +
	"\afor_vpc\x18\n" +
	" \x01(\bB\x05\xaa\x01\x02\b\x01R\x06forVpc\x12\x18\n" +
	"\aversion\x18\v \x01(\tR\aversion\x125\n" +
	"\x13health_check_failed\x18\f \x01(\bB\x05\xaa\x01\x02\b\x01R\x11healthCheckFailed\x12B\n" +
	"\x1afetch_health_check_results\x18\r \x01(\bB\x05\xaa\x01\x02\b\x01R\x17fetchHealthCheckResults\x12\x1d\n" +
	"\n" +
	"project_id\x18\x0e \x01(\x03R\tprojectId\x12\xa0\x01\n" +
	"\faccount_name\x18\x0f \x01(\tB}\xbaHz\xba\x01w\n" +
	"\x1baccount_name_with_domain_id\x122account_name must be used with domain_id parameter\x1a$!has(account_name) || has(domain_id)R\vaccountName\x12 \n" +
	"\blist_all\x18\x10 \x01(\bB\x05\xaa\x01\x02\b\x01R\alistAll\x12\x1b\n" +
	"\tdomain_id\x18\x11 \x01(\x03R\bdomainId\x12#\n" +
	"\trecursive\x18\x12 \x01(\bB\x05\xaa\x01\x02\b\x01R\trecursive\x12\x18\n" +
	"\akeyword\x18\x13 \x01(\tR\akeyword\x12\x12\n" +
	"\x04page\x18\x14 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x15 \x01(\x05R\bpageSize\x12#\n" +
	"\rresponse_type\x18\x16 \x01(\tR\fresponseType\"\x82\x01\n" +
	"\x13ListRoutersResponse\x12C\n" +
	"\x05items\x18\x01 \x03(\v2-.cloudstack.management.router.v1.DomainRouterR\x05items\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount:\x05\xbaH\x02\b\x00\"\xda\x01\n" +
	" ListVirtualRouterElementsRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x15\n" +
	"\x06nsp_id\x18\x02 \x01(\x03R\x05nspId\x12\x1f\n" +
	"\aenabled\x18\x03 \x01(\bB\x05\xaa\x01\x02\b\x01R\aenabled\x12\x18\n" +
	"\akeyword\x18\x04 \x01(\tR\akeyword\x12\x12\n" +
	"\x04page\x18\x05 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x06 \x01(\x05R\bpageSize\x12#\n" +
	"\rresponse_type\x18\a \x01(\tR\fresponseType\"\x99\x01\n" +
	"!ListVirtualRouterElementsResponse\x12L\n" +
	"\x05items\x18\x01 \x03(\v26.cloudstack.management.router.v1.VirtualRouterProviderR\x05items\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount:\x05\xbaH\x02\b\x00\"\xc9\x01\n" +
	"\x13RebootRouterRequest\x12\x16\n" +
	"\x02id\x18\x01 \x01(\x03B\x06\xbaH\x03\xc8\x01\x01R\x02id\x12\x1d\n" +
	"\x06forced\x18\x02 \x01(\bB\x05\xaa\x01\x02\b\x01R\x06forced\x12$\n" +
	"\x0estart_event_id\x18\x03 \x01(\x03R\fstartEventId\x120\n" +
	"\x0finjected_job_id\x18\x04 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\rinjectedJobId\x12#\n" +
	"\rresponse_type\x18\x05 \x01(\tR\fresponseType\"W\n" +
	"\x14RebootRouterResponse\x12?\n" +
	"\x06result\x18\x01 \x01(\v2'.cloudstack.management.router.v1.ResultR\x06result\"\xa9\x01\n" +
	"\x12StartRouterRequest\x12\x16\n" +
	"\x02id\x18\x01 \x01(\x03B\x06\xbaH\x03\xc8\x01\x01R\x02id\x12$\n" +
	"\x0estart_event_id\x18\x02 \x01(\x03R\fstartEventId\x120\n" +
	"\x0finjected_job_id\x18\x03 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\rinjectedJobId\x12#\n" +
	"\rresponse_type\x18\x04 \x01(\tR\fresponseType\"V\n" +
	"\x13StartRouterResponse\x12?\n" +
	"\x06result\x18\x01 \x01(\v2'.cloudstack.management.router.v1.ResultR\x06result\"\xc7\x01\n" +
	"\x11StopRouterRequest\x12\x16\n" +
	"\x02id\x18\x01 \x01(\x03B\x06\xbaH\x03\xc8\x01\x01R\x02id\x12\x1d\n" +
	"\x06forced\x18\x02 \x01(\bB\x05\xaa\x01\x02\b\x01R\x06forced\x12$\n" +
	"\x0estart_event_id\x18\x03 \x01(\x03R\fstartEventId\x120\n" +
	"\x0finjected_job_id\x18\x04 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\rinjectedJobId\x12#\n" +
	"\rresponse_type\x18\x05 \x01(\tR\fresponseType\"U\n" +
	"\x12StopRouterResponse\x12?\n" +
	"\x06result\x18\x01 \x01(\v2'.cloudstack.management.router.v1.ResultR\x06result\"\x8b\x01\n" +
	"\x14UpgradeRouterRequest\x12\x16\n" +
	"\x02id\x18\x01 \x01(\x03B\x06\xbaH\x03\xc8\x01\x01R\x02id\x126\n" +
	"\x13service_offering_id\x18\x02 \x01(\x03B\x06\xbaH\x03\xc8\x01\x01R\x11serviceOfferingId\x12#\n" +
	"\rresponse_type\x18\x03 \x01(\tR\fresponseType\"X\n" +
	"\x15UpgradeRouterResponse\x12?\n" +
	"\x06result\x18\x01 \x01(\v2'.cloudstack.management.router.v1.ResultR\x06result\"\xd9\x01\n" +
	"\x1cUpgradeRouterTemplateRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x02 \x01(\x03R\tclusterId\x12\x15\n" +
	"\x06pod_id\x18\x03 \x01(\x03R\x05podId\x12\x17\n" +
	"\azone_id\x18\x04 \x01(\x03R\x06zoneId\x12\x18\n" +
	"\aaccount\x18\x05 \x01(\tR\aaccount\x12\x1b\n" +
	"\tdomain_id\x18\x06 \x01(\x03R\bdomainId\x12#\n" +
	"\rresponse_type\x18\a \x01(\tR\fresponseType\"`\n" +
	"\x1dUpgradeRouterTemplateResponse\x12?\n" +
	"\x06result\x18\x01 \x01(\v2'.cloudstack.management.router.v1.ResultR\x06result\"\x9b\x01\n" +
	"\fDomainRouter\x12\x18\n" +
	"\x02id\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12!\n" +
	"\fdisplay_name\x18\x03 \x01(\tR\vdisplayName\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x18\n" +
	"\acreated\x18\x05 \x01(\tR\acreated\"\x9a\x01\n" +
	"\vOvsProvider\x12\x18\n" +
	"\x02id\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12!\n" +
	"\fdisplay_name\x18\x03 \x01(\tR\vdisplayName\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x18\n" +
	"\acreated\x18\x05 \x01(\tR\acreated\"\xa4\x01\n" +
	"\x15VirtualRouterProvider\x12\x18\n" +
	"\x02id\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12!\n" +
	"\fdisplay_name\x18\x03 \x01(\tR\vdisplayName\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x18\n" +
	"\acreated\x18\x05 \x01(\tR\acreated\"F\n" +
	"\aSuccess\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12!\n" +
	"\fdisplay_text\x18\x02 \x01(\tR\vdisplayText\"\x9f\x01\n" +
	"\x06Result\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12!\n" +
	"\fdisplay_text\x18\x02 \x01(\tR\vdisplayText\x12\x18\n" +
	"\x02id\x18\x03 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x02id\x12\x1f\n" +
	"\x06job_id\x18\x04 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x05jobId\x12\x1d\n" +
	"\n" +
	"job_status\x18\x05 \x01(\tR\tjobStatus2\xd6\x0f\n" +
	"\rRouterService\x12\x99\x01\n" +
	"\x13ConfigureOvsElement\x12;.cloudstack.management.router.v1.ConfigureOvsElementRequest\x1a<.cloudstack.management.router.v1.ConfigureOvsElementResponse\"\a\xc2>\x04\xc2>\x01\x02\x12\xb7\x01\n" +
	"\x1dConfigureVirtualRouterElement\x12E.cloudstack.management.router.v1.ConfigureVirtualRouterElementRequest\x1aF.cloudstack.management.router.v1.ConfigureVirtualRouterElementResponse\"\a\xc2>\x04\xc2>\x01\x02\x12\xae\x01\n" +
	"\x1aCreateVirtualRouterElement\x12B.cloudstack.management.router.v1.CreateVirtualRouterElementRequest\x1aC.cloudstack.management.router.v1.CreateVirtualRouterElementResponse\"\a\xc2>\x04\xc2>\x01\x02\x12\x87\x01\n" +
	"\rDestroyRouter\x125.cloudstack.management.router.v1.DestroyRouterRequest\x1a6.cloudstack.management.router.v1.DestroyRouterResponse\"\a\xc2>\x04\xc2>\x01\x02\x12\xb1\x01\n" +
	"\x1bGetRouterHealthCheckResults\x12C.cloudstack.management.router.v1.GetRouterHealthCheckResultsRequest\x1aD.cloudstack.management.router.v1.GetRouterHealthCheckResultsResponse\"\a\xc2>\x04\xc2>\x01\x02\x12\x8d\x01\n" +
	"\x0fListOvsElements\x127.cloudstack.management.router.v1.ListOvsElementsRequest\x1a8.cloudstack.management.router.v1.ListOvsElementsResponse\"\a\xc2>\x04\xc2>\x01\x02\x12\x81\x01\n" +
	"\vListRouters\x123.cloudstack.management.router.v1.ListRoutersRequest\x1a4.cloudstack.management.router.v1.ListRoutersResponse\"\a\xc2>\x04\xc2>\x01\x02\x12\xab\x01\n" +
	"\x19ListVirtualRouterElements\x12A.cloudstack.management.router.v1.ListVirtualRouterElementsRequest\x1aB.cloudstack.management.router.v1.ListVirtualRouterElementsResponse\"\a\xc2>\x04\xc2>\x01\x02\x12\x84\x01\n" +
	"\fRebootRouter\x124.cloudstack.management.router.v1.RebootRouterRequest\x1a5.cloudstack.management.router.v1.RebootRouterResponse\"\a\xc2>\x04\xc2>\x01\x02\x12\x81\x01\n" +
	"\vStartRouter\x123.cloudstack.management.router.v1.StartRouterRequest\x1a4.cloudstack.management.router.v1.StartRouterResponse\"\a\xc2>\x04\xc2>\x01\x02\x12~\n" +
	"\n" +
	"StopRouter\x122.cloudstack.management.router.v1.StopRouterRequest\x1a3.cloudstack.management.router.v1.StopRouterResponse\"\a\xc2>\x04\xc2>\x01\x02\x12\x87\x01\n" +
	"\rUpgradeRouter\x125.cloudstack.management.router.v1.UpgradeRouterRequest\x1a6.cloudstack.management.router.v1.UpgradeRouterResponse\"\a\xc2>\x04\xc2>\x01\x02\x12\x9f\x01\n" +
	"\x15UpgradeRouterTemplate\x12=.cloudstack.management.router.v1.UpgradeRouterTemplateRequest\x1a>.cloudstack.management.router.v1.UpgradeRouterTemplateResponse\"\a\xc2>\x04\xc2>\x01\x02\x1a\a\xc2>\x04\xc2>\x01\x02B\xb2\x02\n" +
	"#com.cloudstack.management.router.v1B\x0eRouterGenProtoP\x01Z\\github.com/walteh/cloudstack-proxy/gen/proto/golang/cloudstack/management/router/v1;routerv1\xa2\x02\x03CMR\xaa\x02\x1fCloudstack.Management.Router.V1\xca\x02\x1fCloudstack\\Management\\Router\\V1\xe2\x02+Cloudstack\\Management\\Router\\V1\\GPBMetadata\xea\x02\"Cloudstack::Management::Router::V1b\beditionsp\xe8\a"

var (
	file_cloudstack_management_router_v1_router_gen_proto_rawDescOnce sync.Once
	file_cloudstack_management_router_v1_router_gen_proto_rawDescData []byte
)

func file_cloudstack_management_router_v1_router_gen_proto_rawDescGZIP() []byte {
	file_cloudstack_management_router_v1_router_gen_proto_rawDescOnce.Do(func() {
		file_cloudstack_management_router_v1_router_gen_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_cloudstack_management_router_v1_router_gen_proto_rawDesc), len(file_cloudstack_management_router_v1_router_gen_proto_rawDesc)))
	})
	return file_cloudstack_management_router_v1_router_gen_proto_rawDescData
}

var file_cloudstack_management_router_v1_router_gen_proto_msgTypes = make([]protoimpl.MessageInfo, 31)
var file_cloudstack_management_router_v1_router_gen_proto_goTypes = []any{
	(*ConfigureOvsElementRequest)(nil),            // 0: cloudstack.management.router.v1.ConfigureOvsElementRequest
	(*ConfigureOvsElementResponse)(nil),           // 1: cloudstack.management.router.v1.ConfigureOvsElementResponse
	(*ConfigureVirtualRouterElementRequest)(nil),  // 2: cloudstack.management.router.v1.ConfigureVirtualRouterElementRequest
	(*ConfigureVirtualRouterElementResponse)(nil), // 3: cloudstack.management.router.v1.ConfigureVirtualRouterElementResponse
	(*CreateVirtualRouterElementRequest)(nil),     // 4: cloudstack.management.router.v1.CreateVirtualRouterElementRequest
	(*CreateVirtualRouterElementResponse)(nil),    // 5: cloudstack.management.router.v1.CreateVirtualRouterElementResponse
	(*DestroyRouterRequest)(nil),                  // 6: cloudstack.management.router.v1.DestroyRouterRequest
	(*DestroyRouterResponse)(nil),                 // 7: cloudstack.management.router.v1.DestroyRouterResponse
	(*GetRouterHealthCheckResultsRequest)(nil),    // 8: cloudstack.management.router.v1.GetRouterHealthCheckResultsRequest
	(*GetRouterHealthCheckResultsResponse)(nil),   // 9: cloudstack.management.router.v1.GetRouterHealthCheckResultsResponse
	(*ListOvsElementsRequest)(nil),                // 10: cloudstack.management.router.v1.ListOvsElementsRequest
	(*ListOvsElementsResponse)(nil),               // 11: cloudstack.management.router.v1.ListOvsElementsResponse
	(*ListRoutersRequest)(nil),                    // 12: cloudstack.management.router.v1.ListRoutersRequest
	(*ListRoutersResponse)(nil),                   // 13: cloudstack.management.router.v1.ListRoutersResponse
	(*ListVirtualRouterElementsRequest)(nil),      // 14: cloudstack.management.router.v1.ListVirtualRouterElementsRequest
	(*ListVirtualRouterElementsResponse)(nil),     // 15: cloudstack.management.router.v1.ListVirtualRouterElementsResponse
	(*RebootRouterRequest)(nil),                   // 16: cloudstack.management.router.v1.RebootRouterRequest
	(*RebootRouterResponse)(nil),                  // 17: cloudstack.management.router.v1.RebootRouterResponse
	(*StartRouterRequest)(nil),                    // 18: cloudstack.management.router.v1.StartRouterRequest
	(*StartRouterResponse)(nil),                   // 19: cloudstack.management.router.v1.StartRouterResponse
	(*StopRouterRequest)(nil),                     // 20: cloudstack.management.router.v1.StopRouterRequest
	(*StopRouterResponse)(nil),                    // 21: cloudstack.management.router.v1.StopRouterResponse
	(*UpgradeRouterRequest)(nil),                  // 22: cloudstack.management.router.v1.UpgradeRouterRequest
	(*UpgradeRouterResponse)(nil),                 // 23: cloudstack.management.router.v1.UpgradeRouterResponse
	(*UpgradeRouterTemplateRequest)(nil),          // 24: cloudstack.management.router.v1.UpgradeRouterTemplateRequest
	(*UpgradeRouterTemplateResponse)(nil),         // 25: cloudstack.management.router.v1.UpgradeRouterTemplateResponse
	(*DomainRouter)(nil),                          // 26: cloudstack.management.router.v1.DomainRouter
	(*OvsProvider)(nil),                           // 27: cloudstack.management.router.v1.OvsProvider
	(*VirtualRouterProvider)(nil),                 // 28: cloudstack.management.router.v1.VirtualRouterProvider
	(*Success)(nil),                               // 29: cloudstack.management.router.v1.Success
	(*Result)(nil),                                // 30: cloudstack.management.router.v1.Result
}
var file_cloudstack_management_router_v1_router_gen_proto_depIdxs = []int32{
	30, // 0: cloudstack.management.router.v1.ConfigureOvsElementResponse.result:type_name -> cloudstack.management.router.v1.Result
	30, // 1: cloudstack.management.router.v1.ConfigureVirtualRouterElementResponse.result:type_name -> cloudstack.management.router.v1.Result
	30, // 2: cloudstack.management.router.v1.CreateVirtualRouterElementResponse.result:type_name -> cloudstack.management.router.v1.Result
	30, // 3: cloudstack.management.router.v1.DestroyRouterResponse.result:type_name -> cloudstack.management.router.v1.Result
	30, // 4: cloudstack.management.router.v1.GetRouterHealthCheckResultsResponse.result:type_name -> cloudstack.management.router.v1.Result
	27, // 5: cloudstack.management.router.v1.ListOvsElementsResponse.items:type_name -> cloudstack.management.router.v1.OvsProvider
	26, // 6: cloudstack.management.router.v1.ListRoutersResponse.items:type_name -> cloudstack.management.router.v1.DomainRouter
	28, // 7: cloudstack.management.router.v1.ListVirtualRouterElementsResponse.items:type_name -> cloudstack.management.router.v1.VirtualRouterProvider
	30, // 8: cloudstack.management.router.v1.RebootRouterResponse.result:type_name -> cloudstack.management.router.v1.Result
	30, // 9: cloudstack.management.router.v1.StartRouterResponse.result:type_name -> cloudstack.management.router.v1.Result
	30, // 10: cloudstack.management.router.v1.StopRouterResponse.result:type_name -> cloudstack.management.router.v1.Result
	30, // 11: cloudstack.management.router.v1.UpgradeRouterResponse.result:type_name -> cloudstack.management.router.v1.Result
	30, // 12: cloudstack.management.router.v1.UpgradeRouterTemplateResponse.result:type_name -> cloudstack.management.router.v1.Result
	0,  // 13: cloudstack.management.router.v1.RouterService.ConfigureOvsElement:input_type -> cloudstack.management.router.v1.ConfigureOvsElementRequest
	2,  // 14: cloudstack.management.router.v1.RouterService.ConfigureVirtualRouterElement:input_type -> cloudstack.management.router.v1.ConfigureVirtualRouterElementRequest
	4,  // 15: cloudstack.management.router.v1.RouterService.CreateVirtualRouterElement:input_type -> cloudstack.management.router.v1.CreateVirtualRouterElementRequest
	6,  // 16: cloudstack.management.router.v1.RouterService.DestroyRouter:input_type -> cloudstack.management.router.v1.DestroyRouterRequest
	8,  // 17: cloudstack.management.router.v1.RouterService.GetRouterHealthCheckResults:input_type -> cloudstack.management.router.v1.GetRouterHealthCheckResultsRequest
	10, // 18: cloudstack.management.router.v1.RouterService.ListOvsElements:input_type -> cloudstack.management.router.v1.ListOvsElementsRequest
	12, // 19: cloudstack.management.router.v1.RouterService.ListRouters:input_type -> cloudstack.management.router.v1.ListRoutersRequest
	14, // 20: cloudstack.management.router.v1.RouterService.ListVirtualRouterElements:input_type -> cloudstack.management.router.v1.ListVirtualRouterElementsRequest
	16, // 21: cloudstack.management.router.v1.RouterService.RebootRouter:input_type -> cloudstack.management.router.v1.RebootRouterRequest
	18, // 22: cloudstack.management.router.v1.RouterService.StartRouter:input_type -> cloudstack.management.router.v1.StartRouterRequest
	20, // 23: cloudstack.management.router.v1.RouterService.StopRouter:input_type -> cloudstack.management.router.v1.StopRouterRequest
	22, // 24: cloudstack.management.router.v1.RouterService.UpgradeRouter:input_type -> cloudstack.management.router.v1.UpgradeRouterRequest
	24, // 25: cloudstack.management.router.v1.RouterService.UpgradeRouterTemplate:input_type -> cloudstack.management.router.v1.UpgradeRouterTemplateRequest
	1,  // 26: cloudstack.management.router.v1.RouterService.ConfigureOvsElement:output_type -> cloudstack.management.router.v1.ConfigureOvsElementResponse
	3,  // 27: cloudstack.management.router.v1.RouterService.ConfigureVirtualRouterElement:output_type -> cloudstack.management.router.v1.ConfigureVirtualRouterElementResponse
	5,  // 28: cloudstack.management.router.v1.RouterService.CreateVirtualRouterElement:output_type -> cloudstack.management.router.v1.CreateVirtualRouterElementResponse
	7,  // 29: cloudstack.management.router.v1.RouterService.DestroyRouter:output_type -> cloudstack.management.router.v1.DestroyRouterResponse
	9,  // 30: cloudstack.management.router.v1.RouterService.GetRouterHealthCheckResults:output_type -> cloudstack.management.router.v1.GetRouterHealthCheckResultsResponse
	11, // 31: cloudstack.management.router.v1.RouterService.ListOvsElements:output_type -> cloudstack.management.router.v1.ListOvsElementsResponse
	13, // 32: cloudstack.management.router.v1.RouterService.ListRouters:output_type -> cloudstack.management.router.v1.ListRoutersResponse
	15, // 33: cloudstack.management.router.v1.RouterService.ListVirtualRouterElements:output_type -> cloudstack.management.router.v1.ListVirtualRouterElementsResponse
	17, // 34: cloudstack.management.router.v1.RouterService.RebootRouter:output_type -> cloudstack.management.router.v1.RebootRouterResponse
	19, // 35: cloudstack.management.router.v1.RouterService.StartRouter:output_type -> cloudstack.management.router.v1.StartRouterResponse
	21, // 36: cloudstack.management.router.v1.RouterService.StopRouter:output_type -> cloudstack.management.router.v1.StopRouterResponse
	23, // 37: cloudstack.management.router.v1.RouterService.UpgradeRouter:output_type -> cloudstack.management.router.v1.UpgradeRouterResponse
	25, // 38: cloudstack.management.router.v1.RouterService.UpgradeRouterTemplate:output_type -> cloudstack.management.router.v1.UpgradeRouterTemplateResponse
	26, // [26:39] is the sub-list for method output_type
	13, // [13:26] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_cloudstack_management_router_v1_router_gen_proto_init() }
func file_cloudstack_management_router_v1_router_gen_proto_init() {
	if File_cloudstack_management_router_v1_router_gen_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_cloudstack_management_router_v1_router_gen_proto_rawDesc), len(file_cloudstack_management_router_v1_router_gen_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cloudstack_management_router_v1_router_gen_proto_goTypes,
		DependencyIndexes: file_cloudstack_management_router_v1_router_gen_proto_depIdxs,
		MessageInfos:      file_cloudstack_management_router_v1_router_gen_proto_msgTypes,
	}.Build()
	File_cloudstack_management_router_v1_router_gen_proto = out.File
	file_cloudstack_management_router_v1_router_gen_proto_goTypes = nil
	file_cloudstack_management_router_v1_router_gen_proto_depIdxs = nil
}
