// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: cloudstack/management/swift/v1/swift.gen.proto

package swiftv1connect

import (
	connect "connectrpc.com/connect"
	context "context"
	errors "errors"
	v1 "github.com/walteh/cloudstack-proxy/gen/proto/golang/cloudstack/management/swift/v1"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect.IsAtLeastVersion1_13_0

const (
	// SwiftServiceName is the fully-qualified name of the SwiftService service.
	SwiftServiceName = "cloudstack.management.swift.v1.SwiftService"
)

// These constants are the fully-qualified names of the RPCs defined in this package. They're
// exposed at runtime as Spec.Procedure and as the final two segments of the HTTP route.
//
// Note that these are different from the fully-qualified method names used by
// google.golang.org/protobuf/reflect/protoreflect. To convert from these constants to
// reflection-formatted method names, remove the leading slash and convert the remaining slash to a
// period.
const (
	// SwiftServiceAddSwiftProcedure is the fully-qualified name of the SwiftService's AddSwift RPC.
	SwiftServiceAddSwiftProcedure = "/cloudstack.management.swift.v1.SwiftService/AddSwift"
	// SwiftServiceListSwiftsProcedure is the fully-qualified name of the SwiftService's ListSwifts RPC.
	SwiftServiceListSwiftsProcedure = "/cloudstack.management.swift.v1.SwiftService/ListSwifts"
)

// SwiftServiceClient is a client for the cloudstack.management.swift.v1.SwiftService service.
type SwiftServiceClient interface {
	// AddSwift Adds Swift.
	AddSwift(context.Context, *connect.Request[v1.AddSwiftRequest]) (*connect.Response[v1.AddSwiftResponse], error)
	// ListSwifts List Swift.
	ListSwifts(context.Context, *connect.Request[v1.ListSwiftsRequest]) (*connect.Response[v1.ListSwiftsResponse], error)
}

// NewSwiftServiceClient constructs a client for the cloudstack.management.swift.v1.SwiftService
// service. By default, it uses the Connect protocol with the binary Protobuf Codec, asks for
// gzipped responses, and sends uncompressed requests. To use the gRPC or gRPC-Web protocols, supply
// the connect.WithGRPC() or connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewSwiftServiceClient(httpClient connect.HTTPClient, baseURL string, opts ...connect.ClientOption) SwiftServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	swiftServiceMethods := v1.File_cloudstack_management_swift_v1_swift_gen_proto.Services().ByName("SwiftService").Methods()
	return &swiftServiceClient{
		addSwift: connect.NewClient[v1.AddSwiftRequest, v1.AddSwiftResponse](
			httpClient,
			baseURL+SwiftServiceAddSwiftProcedure,
			connect.WithSchema(swiftServiceMethods.ByName("AddSwift")),
			connect.WithClientOptions(opts...),
		),
		listSwifts: connect.NewClient[v1.ListSwiftsRequest, v1.ListSwiftsResponse](
			httpClient,
			baseURL+SwiftServiceListSwiftsProcedure,
			connect.WithSchema(swiftServiceMethods.ByName("ListSwifts")),
			connect.WithClientOptions(opts...),
		),
	}
}

// swiftServiceClient implements SwiftServiceClient.
type swiftServiceClient struct {
	addSwift   *connect.Client[v1.AddSwiftRequest, v1.AddSwiftResponse]
	listSwifts *connect.Client[v1.ListSwiftsRequest, v1.ListSwiftsResponse]
}

// AddSwift calls cloudstack.management.swift.v1.SwiftService.AddSwift.
func (c *swiftServiceClient) AddSwift(ctx context.Context, req *connect.Request[v1.AddSwiftRequest]) (*connect.Response[v1.AddSwiftResponse], error) {
	return c.addSwift.CallUnary(ctx, req)
}

// ListSwifts calls cloudstack.management.swift.v1.SwiftService.ListSwifts.
func (c *swiftServiceClient) ListSwifts(ctx context.Context, req *connect.Request[v1.ListSwiftsRequest]) (*connect.Response[v1.ListSwiftsResponse], error) {
	return c.listSwifts.CallUnary(ctx, req)
}

// SwiftServiceHandler is an implementation of the cloudstack.management.swift.v1.SwiftService
// service.
type SwiftServiceHandler interface {
	// AddSwift Adds Swift.
	AddSwift(context.Context, *connect.Request[v1.AddSwiftRequest]) (*connect.Response[v1.AddSwiftResponse], error)
	// ListSwifts List Swift.
	ListSwifts(context.Context, *connect.Request[v1.ListSwiftsRequest]) (*connect.Response[v1.ListSwiftsResponse], error)
}

// NewSwiftServiceHandler builds an HTTP handler from the service implementation. It returns the
// path on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewSwiftServiceHandler(svc SwiftServiceHandler, opts ...connect.HandlerOption) (string, http.Handler) {
	swiftServiceMethods := v1.File_cloudstack_management_swift_v1_swift_gen_proto.Services().ByName("SwiftService").Methods()
	swiftServiceAddSwiftHandler := connect.NewUnaryHandler(
		SwiftServiceAddSwiftProcedure,
		svc.AddSwift,
		connect.WithSchema(swiftServiceMethods.ByName("AddSwift")),
		connect.WithHandlerOptions(opts...),
	)
	swiftServiceListSwiftsHandler := connect.NewUnaryHandler(
		SwiftServiceListSwiftsProcedure,
		svc.ListSwifts,
		connect.WithSchema(swiftServiceMethods.ByName("ListSwifts")),
		connect.WithHandlerOptions(opts...),
	)
	return "/cloudstack.management.swift.v1.SwiftService/", http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		switch r.URL.Path {
		case SwiftServiceAddSwiftProcedure:
			swiftServiceAddSwiftHandler.ServeHTTP(w, r)
		case SwiftServiceListSwiftsProcedure:
			swiftServiceListSwiftsHandler.ServeHTTP(w, r)
		default:
			http.NotFound(w, r)
		}
	})
}

// UnimplementedSwiftServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedSwiftServiceHandler struct{}

func (UnimplementedSwiftServiceHandler) AddSwift(context.Context, *connect.Request[v1.AddSwiftRequest]) (*connect.Response[v1.AddSwiftResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("cloudstack.management.swift.v1.SwiftService.AddSwift is not implemented"))
}

func (UnimplementedSwiftServiceHandler) ListSwifts(context.Context, *connect.Request[v1.ListSwiftsRequest]) (*connect.Response[v1.ListSwiftsResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("cloudstack.management.swift.v1.SwiftService.ListSwifts is not implemented"))
}
