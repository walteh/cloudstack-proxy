// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: cloudstack/management/annotation/v1/annotation.gen.proto

package annotationv1

import (
	_ "github.com/walteh/cloudstack-proxy/gen/proto/golang/cloudstack/annotations"
	_ "github.com/walteh/cloudstack-proxy/gen/proto/golang/cloudstack/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ListAnnotationsRequest represents the parameters for lists annotations.
type ListAnnotationsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the id of the annotation
	Uuid *string `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	// the entity type
	EntityType *string `protobuf:"bytes,2,opt,name=entity_type,json=entityType" json:"entity_type,omitempty"`
	// the id of the entity for which to show annotations
	EntityUuid *string `protobuf:"bytes,3,opt,name=entity_uuid,json=entityUuid" json:"entity_uuid,omitempty"`
	// optional: the id of the user of the annotation
	UserUuid *string `protobuf:"bytes,4,opt,name=user_uuid,json=userUuid" json:"user_uuid,omitempty"`
	// possible values are "self" and "all". * self : annotations that have been created by the calling user. * all : all the annotations the calling user can access
	AnnotationFilter *string `protobuf:"bytes,5,opt,name=annotation_filter,json=annotationFilter" json:"annotation_filter,omitempty"`
	// List by keyword
	Keyword *string `protobuf:"bytes,6,opt,name=keyword" json:"keyword,omitempty"`
	Page *int32 `protobuf:"varint,7,opt,name=page" json:"page,omitempty"`
	PageSize *int32 `protobuf:"varint,8,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	ResponseType  *string `protobuf:"bytes,9,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAnnotationsRequest) Reset() {
	*x = ListAnnotationsRequest{}
	mi := &file_cloudstack_management_annotation_v1_annotation_gen_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAnnotationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAnnotationsRequest) ProtoMessage() {}

func (x *ListAnnotationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_annotation_v1_annotation_gen_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAnnotationsRequest.ProtoReflect.Descriptor instead.
func (*ListAnnotationsRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_annotation_v1_annotation_gen_proto_rawDescGZIP(), []int{0}
}

func (x *ListAnnotationsRequest) GetUuid() string {
	if x != nil && x.Uuid != nil {
		return *x.Uuid
	}
	return ""
}

func (x *ListAnnotationsRequest) GetEntityType() string {
	if x != nil && x.EntityType != nil {
		return *x.EntityType
	}
	return ""
}

func (x *ListAnnotationsRequest) GetEntityUuid() string {
	if x != nil && x.EntityUuid != nil {
		return *x.EntityUuid
	}
	return ""
}

func (x *ListAnnotationsRequest) GetUserUuid() string {
	if x != nil && x.UserUuid != nil {
		return *x.UserUuid
	}
	return ""
}

func (x *ListAnnotationsRequest) GetAnnotationFilter() string {
	if x != nil && x.AnnotationFilter != nil {
		return *x.AnnotationFilter
	}
	return ""
}

func (x *ListAnnotationsRequest) GetKeyword() string {
	if x != nil && x.Keyword != nil {
		return *x.Keyword
	}
	return ""
}

func (x *ListAnnotationsRequest) GetPage() int32 {
	if x != nil && x.Page != nil {
		return *x.Page
	}
	return 0
}

func (x *ListAnnotationsRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListAnnotationsRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// ListAnnotationsResponse represents the response from lists annotations.
type ListAnnotationsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The list of Annotations
	Items []*Annotation `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	// The total count of Annotations
	TotalCount    *int32 `protobuf:"varint,2,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAnnotationsResponse) Reset() {
	*x = ListAnnotationsResponse{}
	mi := &file_cloudstack_management_annotation_v1_annotation_gen_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAnnotationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAnnotationsResponse) ProtoMessage() {}

func (x *ListAnnotationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_annotation_v1_annotation_gen_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAnnotationsResponse.ProtoReflect.Descriptor instead.
func (*ListAnnotationsResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_annotation_v1_annotation_gen_proto_rawDescGZIP(), []int{1}
}

func (x *ListAnnotationsResponse) GetItems() []*Annotation {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListAnnotationsResponse) GetTotalCount() int32 {
	if x != nil && x.TotalCount != nil {
		return *x.TotalCount
	}
	return 0
}

// UpdateAnnotationVisibilityRequest represents the parameters for update an annotation visibility.
type UpdateAnnotationVisibilityRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the id of the annotation
	Uuid *string `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	// the annotation is visible for admins only
	AdminsOnly *bool `protobuf:"varint,2,opt,name=admins_only,json=adminsOnly" json:"admins_only,omitempty"`
	ResponseType  *string `protobuf:"bytes,3,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateAnnotationVisibilityRequest) Reset() {
	*x = UpdateAnnotationVisibilityRequest{}
	mi := &file_cloudstack_management_annotation_v1_annotation_gen_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAnnotationVisibilityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAnnotationVisibilityRequest) ProtoMessage() {}

func (x *UpdateAnnotationVisibilityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_annotation_v1_annotation_gen_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAnnotationVisibilityRequest.ProtoReflect.Descriptor instead.
func (*UpdateAnnotationVisibilityRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_annotation_v1_annotation_gen_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateAnnotationVisibilityRequest) GetUuid() string {
	if x != nil && x.Uuid != nil {
		return *x.Uuid
	}
	return ""
}

func (x *UpdateAnnotationVisibilityRequest) GetAdminsOnly() bool {
	if x != nil && x.AdminsOnly != nil {
		return *x.AdminsOnly
	}
	return false
}

func (x *UpdateAnnotationVisibilityRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// UpdateAnnotationVisibilityResponse represents the response from update an annotation visibility.
type UpdateAnnotationVisibilityResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Result
	Result        *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateAnnotationVisibilityResponse) Reset() {
	*x = UpdateAnnotationVisibilityResponse{}
	mi := &file_cloudstack_management_annotation_v1_annotation_gen_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAnnotationVisibilityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAnnotationVisibilityResponse) ProtoMessage() {}

func (x *UpdateAnnotationVisibilityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_annotation_v1_annotation_gen_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAnnotationVisibilityResponse.ProtoReflect.Descriptor instead.
func (*UpdateAnnotationVisibilityResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_annotation_v1_annotation_gen_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateAnnotationVisibilityResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// AddAnnotationRequest represents the parameters for add an annotation.
type AddAnnotationRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the annotation text
	Annotation *string `protobuf:"bytes,1,opt,name=annotation" json:"annotation,omitempty"`
	// The following entity types are allowed VM, VOLUME, SNAPSHOT, VM_SNAPSHOT, INSTANCE_GROUP, SSH_KEYPAIR, USER_DATA, NETWORK, VPC, PUBLIC_IP_ADDRESS, VPN_CUSTOMER_GATEWAY, TEMPLATE, ISO, KUBERNETES_CLUSTER, SERVICE_OFFERING, DISK_OFFERING, NETWORK_OFFERING, ZONE, POD, CLUSTER, HOST, DOMAIN, PRIMARY_STORAGE, SECONDARY_STORAGE, VR, SYSTEM_VM, AUTOSCALE_VM_GROUP, MANAGEMENT_SERVER
	EntityType *string `protobuf:"bytes,2,opt,name=entity_type,json=entityType" json:"entity_type,omitempty"`
	// the id of the entity to annotate
	EntityUuid *string `protobuf:"bytes,3,opt,name=entity_uuid,json=entityUuid" json:"entity_uuid,omitempty"`
	// the annotation is visible for admins only
	AdminsOnly *bool `protobuf:"varint,4,opt,name=admins_only,json=adminsOnly" json:"admins_only,omitempty"`
	ResponseType  *string `protobuf:"bytes,5,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddAnnotationRequest) Reset() {
	*x = AddAnnotationRequest{}
	mi := &file_cloudstack_management_annotation_v1_annotation_gen_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddAnnotationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAnnotationRequest) ProtoMessage() {}

func (x *AddAnnotationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_annotation_v1_annotation_gen_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAnnotationRequest.ProtoReflect.Descriptor instead.
func (*AddAnnotationRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_annotation_v1_annotation_gen_proto_rawDescGZIP(), []int{4}
}

func (x *AddAnnotationRequest) GetAnnotation() string {
	if x != nil && x.Annotation != nil {
		return *x.Annotation
	}
	return ""
}

func (x *AddAnnotationRequest) GetEntityType() string {
	if x != nil && x.EntityType != nil {
		return *x.EntityType
	}
	return ""
}

func (x *AddAnnotationRequest) GetEntityUuid() string {
	if x != nil && x.EntityUuid != nil {
		return *x.EntityUuid
	}
	return ""
}

func (x *AddAnnotationRequest) GetAdminsOnly() bool {
	if x != nil && x.AdminsOnly != nil {
		return *x.AdminsOnly
	}
	return false
}

func (x *AddAnnotationRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// AddAnnotationResponse represents the response from add an annotation.
type AddAnnotationResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Result
	Result        *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddAnnotationResponse) Reset() {
	*x = AddAnnotationResponse{}
	mi := &file_cloudstack_management_annotation_v1_annotation_gen_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddAnnotationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAnnotationResponse) ProtoMessage() {}

func (x *AddAnnotationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_annotation_v1_annotation_gen_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAnnotationResponse.ProtoReflect.Descriptor instead.
func (*AddAnnotationResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_annotation_v1_annotation_gen_proto_rawDescGZIP(), []int{5}
}

func (x *AddAnnotationResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// RemoveAnnotationRequest represents the parameters for remove an annotation.
type RemoveAnnotationRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the id of the annotation
	Uuid *string `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	ResponseType  *string `protobuf:"bytes,2,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveAnnotationRequest) Reset() {
	*x = RemoveAnnotationRequest{}
	mi := &file_cloudstack_management_annotation_v1_annotation_gen_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveAnnotationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveAnnotationRequest) ProtoMessage() {}

func (x *RemoveAnnotationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_annotation_v1_annotation_gen_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveAnnotationRequest.ProtoReflect.Descriptor instead.
func (*RemoveAnnotationRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_annotation_v1_annotation_gen_proto_rawDescGZIP(), []int{6}
}

func (x *RemoveAnnotationRequest) GetUuid() string {
	if x != nil && x.Uuid != nil {
		return *x.Uuid
	}
	return ""
}

func (x *RemoveAnnotationRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// RemoveAnnotationResponse represents the response from remove an annotation.
type RemoveAnnotationResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Result
	Result        *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveAnnotationResponse) Reset() {
	*x = RemoveAnnotationResponse{}
	mi := &file_cloudstack_management_annotation_v1_annotation_gen_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveAnnotationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveAnnotationResponse) ProtoMessage() {}

func (x *RemoveAnnotationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_annotation_v1_annotation_gen_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveAnnotationResponse.ProtoReflect.Descriptor instead.
func (*RemoveAnnotationResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_annotation_v1_annotation_gen_proto_rawDescGZIP(), []int{7}
}

func (x *RemoveAnnotationResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// Annotation represents a Annotation Item
type Annotation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the Annotation
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// The name of the Annotation
	Name *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// The display name of the Annotation
	DisplayName *string `protobuf:"bytes,3,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	// The description of the Annotation
	Description *string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	// The date this entity was created
	Created       *string `protobuf:"bytes,5,opt,name=created" json:"created,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Annotation) Reset() {
	*x = Annotation{}
	mi := &file_cloudstack_management_annotation_v1_annotation_gen_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Annotation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Annotation) ProtoMessage() {}

func (x *Annotation) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_annotation_v1_annotation_gen_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Annotation.ProtoReflect.Descriptor instead.
func (*Annotation) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_annotation_v1_annotation_gen_proto_rawDescGZIP(), []int{8}
}

func (x *Annotation) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Annotation) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Annotation) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *Annotation) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *Annotation) GetCreated() string {
	if x != nil && x.Created != nil {
		return *x.Created
	}
	return ""
}

// Success represents a Success Operation Response
type Success struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// true if operation is executed successfully
	Success *bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	// any text associated with the success or failure
	DisplayText   *string `protobuf:"bytes,2,opt,name=display_text,json=displayText" json:"display_text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Success) Reset() {
	*x = Success{}
	mi := &file_cloudstack_management_annotation_v1_annotation_gen_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Success) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Success) ProtoMessage() {}

func (x *Success) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_annotation_v1_annotation_gen_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Success.ProtoReflect.Descriptor instead.
func (*Success) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_annotation_v1_annotation_gen_proto_rawDescGZIP(), []int{9}
}

func (x *Success) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *Success) GetDisplayText() string {
	if x != nil && x.DisplayText != nil {
		return *x.DisplayText
	}
	return ""
}

// Item represents a generic item in a list response
type Item struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the item
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// The name of the item
	Name *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// The display name of the item
	DisplayName *string `protobuf:"bytes,3,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	// The description of the item
	Description *string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	// The account ID the item belongs to
	AccountId *string `protobuf:"bytes,5,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	// The domain ID the item belongs to
	DomainId *string `protobuf:"bytes,6,opt,name=domain_id,json=domainId" json:"domain_id,omitempty"`
	// The domain name the item belongs to
	Domain *string `protobuf:"bytes,7,opt,name=domain" json:"domain,omitempty"`
	// The project ID the item belongs to
	ProjectId *string `protobuf:"bytes,8,opt,name=project_id,json=projectId" json:"project_id,omitempty"`
	// The project name the item belongs to
	Project *string `protobuf:"bytes,9,opt,name=project" json:"project,omitempty"`
	// The date the item was created
	Created *string `protobuf:"bytes,10,opt,name=created" json:"created,omitempty"`
	// The state of the item
	State *string `protobuf:"bytes,11,opt,name=state" json:"state,omitempty"`
	// Additional fields returned by the API
	Details       map[string]string `protobuf:"bytes,12,rep,name=details" json:"details,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Item) Reset() {
	*x = Item{}
	mi := &file_cloudstack_management_annotation_v1_annotation_gen_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_annotation_v1_annotation_gen_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_annotation_v1_annotation_gen_proto_rawDescGZIP(), []int{10}
}

func (x *Item) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Item) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Item) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *Item) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *Item) GetAccountId() string {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return ""
}

func (x *Item) GetDomainId() string {
	if x != nil && x.DomainId != nil {
		return *x.DomainId
	}
	return ""
}

func (x *Item) GetDomain() string {
	if x != nil && x.Domain != nil {
		return *x.Domain
	}
	return ""
}

func (x *Item) GetProjectId() string {
	if x != nil && x.ProjectId != nil {
		return *x.ProjectId
	}
	return ""
}

func (x *Item) GetProject() string {
	if x != nil && x.Project != nil {
		return *x.Project
	}
	return ""
}

func (x *Item) GetCreated() string {
	if x != nil && x.Created != nil {
		return *x.Created
	}
	return ""
}

func (x *Item) GetState() string {
	if x != nil && x.State != nil {
		return *x.State
	}
	return ""
}

func (x *Item) GetDetails() map[string]string {
	if x != nil {
		return x.Details
	}
	return nil
}

// Result represents a generic operation result
type Result struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether the operation was successful
	Success *bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	// Any text associated with the success or failure
	DisplayText *string `protobuf:"bytes,2,opt,name=display_text,json=displayText" json:"display_text,omitempty"`
	// The ID of the resource affected by the operation
	Id *string `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	// The job ID for an async operation
	JobId *string `protobuf:"bytes,4,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
	// The status of the job
	JobStatus     *string `protobuf:"bytes,5,opt,name=job_status,json=jobStatus" json:"job_status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Result) Reset() {
	*x = Result{}
	mi := &file_cloudstack_management_annotation_v1_annotation_gen_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_annotation_v1_annotation_gen_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_annotation_v1_annotation_gen_proto_rawDescGZIP(), []int{11}
}

func (x *Result) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *Result) GetDisplayText() string {
	if x != nil && x.DisplayText != nil {
		return *x.DisplayText
	}
	return ""
}

func (x *Result) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Result) GetJobId() string {
	if x != nil && x.JobId != nil {
		return *x.JobId
	}
	return ""
}

func (x *Result) GetJobStatus() string {
	if x != nil && x.JobStatus != nil {
		return *x.JobStatus
	}
	return ""
}

var File_cloudstack_management_annotation_v1_annotation_gen_proto protoreflect.FileDescriptor

const file_cloudstack_management_annotation_v1_annotation_gen_proto_rawDesc = "" +
	"\n" +
	"8cloudstack/management/annotation/v1/annotation.gen.proto\x12#cloudstack.management.annotation.v1\x1a(cloudstack/annotations/annotations.proto\x1a\"cloudstack/validate/validate.proto\x1a google/protobuf/descriptor.proto\"\xc6\x02\n" +
	"\x16ListAnnotationsRequest\x12\x1c\n" +
	"\x04uuid\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x04uuid\x12\x1f\n" +
	"\ventity_type\x18\x02 \x01(\tR\n" +
	"entityType\x12)\n" +
	"\ventity_uuid\x18\x03 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\n" +
	"entityUuid\x12%\n" +
	"\tuser_uuid\x18\x04 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\buserUuid\x12+\n" +
	"\x11annotation_filter\x18\x05 \x01(\tR\x10annotationFilter\x12\x18\n" +
	"\akeyword\x18\x06 \x01(\tR\akeyword\x12\x12\n" +
	"\x04page\x18\a \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\b \x01(\x05R\bpageSize\x12#\n" +
	"\rresponse_type\x18\t \x01(\tR\fresponseType\"\x88\x01\n" +
	"\x17ListAnnotationsResponse\x12E\n" +
	"\x05items\x18\x01 \x03(\v2/.cloudstack.management.annotation.v1.AnnotationR\x05items\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount:\x05\xbaH\x02\b\x00\"\x97\x01\n" +
	"!UpdateAnnotationVisibilityRequest\x12\x1f\n" +
	"\x04uuid\x18\x01 \x01(\tB\v\xbaH\b\xc8\x01\x01r\x03\xb0\x01\x01R\x04uuid\x12,\n" +
	"\vadmins_only\x18\x02 \x01(\bB\v\xbaH\x03\xc8\x01\x01\xaa\x01\x02\b\x01R\n" +
	"adminsOnly\x12#\n" +
	"\rresponse_type\x18\x03 \x01(\tR\fresponseType\"i\n" +
	"\"UpdateAnnotationVisibilityResponse\x12C\n" +
	"\x06result\x18\x01 \x01(\v2+.cloudstack.management.annotation.v1.ResultR\x06result\"\xcf\x01\n" +
	"\x14AddAnnotationRequest\x12\x1e\n" +
	"\n" +
	"annotation\x18\x01 \x01(\tR\n" +
	"annotation\x12\x1f\n" +
	"\ventity_type\x18\x02 \x01(\tR\n" +
	"entityType\x12)\n" +
	"\ventity_uuid\x18\x03 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\n" +
	"entityUuid\x12&\n" +
	"\vadmins_only\x18\x04 \x01(\bB\x05\xaa\x01\x02\b\x01R\n" +
	"adminsOnly\x12#\n" +
	"\rresponse_type\x18\x05 \x01(\tR\fresponseType\"\\\n" +
	"\x15AddAnnotationResponse\x12C\n" +
	"\x06result\x18\x01 \x01(\v2+.cloudstack.management.annotation.v1.ResultR\x06result\"_\n" +
	"\x17RemoveAnnotationRequest\x12\x1f\n" +
	"\x04uuid\x18\x01 \x01(\tB\v\xbaH\b\xc8\x01\x01r\x03\xb0\x01\x01R\x04uuid\x12#\n" +
	"\rresponse_type\x18\x02 \x01(\tR\fresponseType\"_\n" +
	"\x18RemoveAnnotationResponse\x12C\n" +
	"\x06result\x18\x01 \x01(\v2+.cloudstack.management.annotation.v1.ResultR\x06result\"\x99\x01\n" +
	"\n" +
	"Annotation\x12\x18\n" +
	"\x02id\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12!\n" +
	"\fdisplay_name\x18\x03 \x01(\tR\vdisplayName\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x18\n" +
	"\acreated\x18\x05 \x01(\tR\acreated\"F\n" +
	"\aSuccess\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12!\n" +
	"\fdisplay_text\x18\x02 \x01(\tR\vdisplayText\"\xe2\x03\n" +
	"\x04Item\x12\x18\n" +
	"\x02id\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12!\n" +
	"\fdisplay_name\x18\x03 \x01(\tR\vdisplayName\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12'\n" +
	"\n" +
	"account_id\x18\x05 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\taccountId\x12%\n" +
	"\tdomain_id\x18\x06 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\bdomainId\x12\x16\n" +
	"\x06domain\x18\a \x01(\tR\x06domain\x12'\n" +
	"\n" +
	"project_id\x18\b \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\tprojectId\x12\x18\n" +
	"\aproject\x18\t \x01(\tR\aproject\x12\x18\n" +
	"\acreated\x18\n" +
	" \x01(\tR\acreated\x12\x14\n" +
	"\x05state\x18\v \x01(\tR\x05state\x12P\n" +
	"\adetails\x18\f \x03(\v26.cloudstack.management.annotation.v1.Item.DetailsEntryR\adetails\x1a:\n" +
	"\fDetailsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x9f\x01\n" +
	"\x06Result\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12!\n" +
	"\fdisplay_text\x18\x02 \x01(\tR\vdisplayText\x12\x18\n" +
	"\x02id\x18\x03 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x02id\x12\x1f\n" +
	"\x06job_id\x18\x04 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x05jobId\x12\x1d\n" +
	"\n" +
	"job_status\x18\x05 \x01(\tR\tjobStatus2\xfd\x04\n" +
	"\x11AnnotationService\x12\x8e\x01\n" +
	"\x0fListAnnotations\x12;.cloudstack.management.annotation.v1.ListAnnotationsRequest\x1a<.cloudstack.management.annotation.v1.ListAnnotationsResponse\"\x00\x12\xaf\x01\n" +
	"\x1aUpdateAnnotationVisibility\x12F.cloudstack.management.annotation.v1.UpdateAnnotationVisibilityRequest\x1aG.cloudstack.management.annotation.v1.UpdateAnnotationVisibilityResponse\"\x00\x12\x88\x01\n" +
	"\rAddAnnotation\x129.cloudstack.management.annotation.v1.AddAnnotationRequest\x1a:.cloudstack.management.annotation.v1.AddAnnotationResponse\"\x00\x12\x91\x01\n" +
	"\x10RemoveAnnotation\x12<.cloudstack.management.annotation.v1.RemoveAnnotationRequest\x1a=.cloudstack.management.annotation.v1.RemoveAnnotationResponse\"\x00\x1a\x06\xc2>\x03\xc0>\x02B\xd2\x02\n" +
	"'com.cloudstack.management.annotation.v1B\x12AnnotationGenProtoP\x01Zdgithub.com/walteh/cloudstack-proxy/gen/proto/golang/cloudstack/management/annotation/v1;annotationv1\xa2\x02\x03CMA\xaa\x02#Cloudstack.Management.Annotation.V1\xca\x02#Cloudstack\\Management\\Annotation\\V1\xe2\x02/Cloudstack\\Management\\Annotation\\V1\\GPBMetadata\xea\x02&Cloudstack::Management::Annotation::V1b\beditionsp\xe8\a"

var (
	file_cloudstack_management_annotation_v1_annotation_gen_proto_rawDescOnce sync.Once
	file_cloudstack_management_annotation_v1_annotation_gen_proto_rawDescData []byte
)

func file_cloudstack_management_annotation_v1_annotation_gen_proto_rawDescGZIP() []byte {
	file_cloudstack_management_annotation_v1_annotation_gen_proto_rawDescOnce.Do(func() {
		file_cloudstack_management_annotation_v1_annotation_gen_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_cloudstack_management_annotation_v1_annotation_gen_proto_rawDesc), len(file_cloudstack_management_annotation_v1_annotation_gen_proto_rawDesc)))
	})
	return file_cloudstack_management_annotation_v1_annotation_gen_proto_rawDescData
}

var file_cloudstack_management_annotation_v1_annotation_gen_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_cloudstack_management_annotation_v1_annotation_gen_proto_goTypes = []any{
	(*ListAnnotationsRequest)(nil),             // 0: cloudstack.management.annotation.v1.ListAnnotationsRequest
	(*ListAnnotationsResponse)(nil),            // 1: cloudstack.management.annotation.v1.ListAnnotationsResponse
	(*UpdateAnnotationVisibilityRequest)(nil),  // 2: cloudstack.management.annotation.v1.UpdateAnnotationVisibilityRequest
	(*UpdateAnnotationVisibilityResponse)(nil), // 3: cloudstack.management.annotation.v1.UpdateAnnotationVisibilityResponse
	(*AddAnnotationRequest)(nil),               // 4: cloudstack.management.annotation.v1.AddAnnotationRequest
	(*AddAnnotationResponse)(nil),              // 5: cloudstack.management.annotation.v1.AddAnnotationResponse
	(*RemoveAnnotationRequest)(nil),            // 6: cloudstack.management.annotation.v1.RemoveAnnotationRequest
	(*RemoveAnnotationResponse)(nil),           // 7: cloudstack.management.annotation.v1.RemoveAnnotationResponse
	(*Annotation)(nil),                         // 8: cloudstack.management.annotation.v1.Annotation
	(*Success)(nil),                            // 9: cloudstack.management.annotation.v1.Success
	(*Item)(nil),                               // 10: cloudstack.management.annotation.v1.Item
	(*Result)(nil),                             // 11: cloudstack.management.annotation.v1.Result
	nil,                                        // 12: cloudstack.management.annotation.v1.Item.DetailsEntry
}
var file_cloudstack_management_annotation_v1_annotation_gen_proto_depIdxs = []int32{
	8,  // 0: cloudstack.management.annotation.v1.ListAnnotationsResponse.items:type_name -> cloudstack.management.annotation.v1.Annotation
	11, // 1: cloudstack.management.annotation.v1.UpdateAnnotationVisibilityResponse.result:type_name -> cloudstack.management.annotation.v1.Result
	11, // 2: cloudstack.management.annotation.v1.AddAnnotationResponse.result:type_name -> cloudstack.management.annotation.v1.Result
	11, // 3: cloudstack.management.annotation.v1.RemoveAnnotationResponse.result:type_name -> cloudstack.management.annotation.v1.Result
	12, // 4: cloudstack.management.annotation.v1.Item.details:type_name -> cloudstack.management.annotation.v1.Item.DetailsEntry
	0,  // 5: cloudstack.management.annotation.v1.AnnotationService.ListAnnotations:input_type -> cloudstack.management.annotation.v1.ListAnnotationsRequest
	2,  // 6: cloudstack.management.annotation.v1.AnnotationService.UpdateAnnotationVisibility:input_type -> cloudstack.management.annotation.v1.UpdateAnnotationVisibilityRequest
	4,  // 7: cloudstack.management.annotation.v1.AnnotationService.AddAnnotation:input_type -> cloudstack.management.annotation.v1.AddAnnotationRequest
	6,  // 8: cloudstack.management.annotation.v1.AnnotationService.RemoveAnnotation:input_type -> cloudstack.management.annotation.v1.RemoveAnnotationRequest
	1,  // 9: cloudstack.management.annotation.v1.AnnotationService.ListAnnotations:output_type -> cloudstack.management.annotation.v1.ListAnnotationsResponse
	3,  // 10: cloudstack.management.annotation.v1.AnnotationService.UpdateAnnotationVisibility:output_type -> cloudstack.management.annotation.v1.UpdateAnnotationVisibilityResponse
	5,  // 11: cloudstack.management.annotation.v1.AnnotationService.AddAnnotation:output_type -> cloudstack.management.annotation.v1.AddAnnotationResponse
	7,  // 12: cloudstack.management.annotation.v1.AnnotationService.RemoveAnnotation:output_type -> cloudstack.management.annotation.v1.RemoveAnnotationResponse
	9,  // [9:13] is the sub-list for method output_type
	5,  // [5:9] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_cloudstack_management_annotation_v1_annotation_gen_proto_init() }
func file_cloudstack_management_annotation_v1_annotation_gen_proto_init() {
	if File_cloudstack_management_annotation_v1_annotation_gen_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_cloudstack_management_annotation_v1_annotation_gen_proto_rawDesc), len(file_cloudstack_management_annotation_v1_annotation_gen_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cloudstack_management_annotation_v1_annotation_gen_proto_goTypes,
		DependencyIndexes: file_cloudstack_management_annotation_v1_annotation_gen_proto_depIdxs,
		MessageInfos:      file_cloudstack_management_annotation_v1_annotation_gen_proto_msgTypes,
	}.Build()
	File_cloudstack_management_annotation_v1_annotation_gen_proto = out.File
	file_cloudstack_management_annotation_v1_annotation_gen_proto_goTypes = nil
	file_cloudstack_management_annotation_v1_annotation_gen_proto_depIdxs = nil
}
