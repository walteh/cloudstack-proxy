// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: cloudstack/management/storage/heuristics/v1/heuristics.gen.proto

package heuristicsv1

import (
	_ "github.com/walteh/cloudstack-proxy/gen/proto/golang/cloudstack/annotations"
	_ "github.com/walteh/cloudstack-proxy/gen/proto/golang/cloudstack/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CreateSecondaryStorageSelectorRequest represents the parameters for creates a secondary storage selector, described by the heuristic rule.
type CreateSecondaryStorageSelectorRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name identifying the heuristic rule.
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// The description of the heuristic rule.
	Description *string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	// The zone in which the heuristic rule will be applied.
	ZoneId *int64 `protobuf:"varint,3,opt,name=zone_id,json=zoneId" json:"zone_id,omitempty"`
	// The resource type directed to a specific secondary storage by the selector. Valid options are: ISO, SNAPSHOT, TEMPLATE and VOLUME.
	Type *string `protobuf:"bytes,4,opt,name=type" json:"type,omitempty"`
	// The heuristic rule, in JavaScript language. It is required that it returns the UUID of a secondary storage pool. An example of a rule is `if (snapshot.hypervisorType === 'KVM') { '7832f261-c602-4e8e-8580-2496ffbbc45d'; }` would allocate all snapshots with the KVM hypervisor to the specified secondary storage UUID.
	HeuristicRule *string `protobuf:"bytes,5,opt,name=heuristic_rule,json=heuristicRule" json:"heuristic_rule,omitempty"`
	ResponseType  *string `protobuf:"bytes,6,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSecondaryStorageSelectorRequest) Reset() {
	*x = CreateSecondaryStorageSelectorRequest{}
	mi := &file_cloudstack_management_storage_heuristics_v1_heuristics_gen_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSecondaryStorageSelectorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSecondaryStorageSelectorRequest) ProtoMessage() {}

func (x *CreateSecondaryStorageSelectorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_storage_heuristics_v1_heuristics_gen_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSecondaryStorageSelectorRequest.ProtoReflect.Descriptor instead.
func (*CreateSecondaryStorageSelectorRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_storage_heuristics_v1_heuristics_gen_proto_rawDescGZIP(), []int{0}
}

func (x *CreateSecondaryStorageSelectorRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CreateSecondaryStorageSelectorRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *CreateSecondaryStorageSelectorRequest) GetZoneId() int64 {
	if x != nil && x.ZoneId != nil {
		return *x.ZoneId
	}
	return 0
}

func (x *CreateSecondaryStorageSelectorRequest) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *CreateSecondaryStorageSelectorRequest) GetHeuristicRule() string {
	if x != nil && x.HeuristicRule != nil {
		return *x.HeuristicRule
	}
	return ""
}

func (x *CreateSecondaryStorageSelectorRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// CreateSecondaryStorageSelectorResponse represents the response from creates a secondary storage selector, described by the heuristic rule.
type CreateSecondaryStorageSelectorResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Result
	Result        *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSecondaryStorageSelectorResponse) Reset() {
	*x = CreateSecondaryStorageSelectorResponse{}
	mi := &file_cloudstack_management_storage_heuristics_v1_heuristics_gen_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSecondaryStorageSelectorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSecondaryStorageSelectorResponse) ProtoMessage() {}

func (x *CreateSecondaryStorageSelectorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_storage_heuristics_v1_heuristics_gen_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSecondaryStorageSelectorResponse.ProtoReflect.Descriptor instead.
func (*CreateSecondaryStorageSelectorResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_storage_heuristics_v1_heuristics_gen_proto_rawDescGZIP(), []int{1}
}

func (x *CreateSecondaryStorageSelectorResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// ListSecondaryStorageSelectorsRequest represents the parameters for lists the secondary storage selectors and their rules.
type ListSecondaryStorageSelectorsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The zone ID to be used in the search filter.
	ZoneId *int64 `protobuf:"varint,1,opt,name=zone_id,json=zoneId" json:"zone_id,omitempty"`
	// Whether to filter the selectors by type and, if so, which one. Valid options are: ISO, SNAPSHOT, TEMPLATE and VOLUME.
	Type *string `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	// Show removed heuristics.
	ShowRemoved *bool `protobuf:"varint,3,opt,name=show_removed,json=showRemoved" json:"show_removed,omitempty"`
	// List by keyword
	Keyword *string `protobuf:"bytes,4,opt,name=keyword" json:"keyword,omitempty"`
	Page *int32 `protobuf:"varint,5,opt,name=page" json:"page,omitempty"`
	PageSize *int32 `protobuf:"varint,6,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	ResponseType  *string `protobuf:"bytes,7,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSecondaryStorageSelectorsRequest) Reset() {
	*x = ListSecondaryStorageSelectorsRequest{}
	mi := &file_cloudstack_management_storage_heuristics_v1_heuristics_gen_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSecondaryStorageSelectorsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSecondaryStorageSelectorsRequest) ProtoMessage() {}

func (x *ListSecondaryStorageSelectorsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_storage_heuristics_v1_heuristics_gen_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSecondaryStorageSelectorsRequest.ProtoReflect.Descriptor instead.
func (*ListSecondaryStorageSelectorsRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_storage_heuristics_v1_heuristics_gen_proto_rawDescGZIP(), []int{2}
}

func (x *ListSecondaryStorageSelectorsRequest) GetZoneId() int64 {
	if x != nil && x.ZoneId != nil {
		return *x.ZoneId
	}
	return 0
}

func (x *ListSecondaryStorageSelectorsRequest) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *ListSecondaryStorageSelectorsRequest) GetShowRemoved() bool {
	if x != nil && x.ShowRemoved != nil {
		return *x.ShowRemoved
	}
	return false
}

func (x *ListSecondaryStorageSelectorsRequest) GetKeyword() string {
	if x != nil && x.Keyword != nil {
		return *x.Keyword
	}
	return ""
}

func (x *ListSecondaryStorageSelectorsRequest) GetPage() int32 {
	if x != nil && x.Page != nil {
		return *x.Page
	}
	return 0
}

func (x *ListSecondaryStorageSelectorsRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListSecondaryStorageSelectorsRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// ListSecondaryStorageSelectorsResponse represents the response from lists the secondary storage selectors and their rules.
type ListSecondaryStorageSelectorsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The list of SecondaryStorageHeuristicss
	Items []*SecondaryStorageHeuristics `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	// The total count of SecondaryStorageHeuristicss
	TotalCount    *int32 `protobuf:"varint,2,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSecondaryStorageSelectorsResponse) Reset() {
	*x = ListSecondaryStorageSelectorsResponse{}
	mi := &file_cloudstack_management_storage_heuristics_v1_heuristics_gen_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSecondaryStorageSelectorsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSecondaryStorageSelectorsResponse) ProtoMessage() {}

func (x *ListSecondaryStorageSelectorsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_storage_heuristics_v1_heuristics_gen_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSecondaryStorageSelectorsResponse.ProtoReflect.Descriptor instead.
func (*ListSecondaryStorageSelectorsResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_storage_heuristics_v1_heuristics_gen_proto_rawDescGZIP(), []int{3}
}

func (x *ListSecondaryStorageSelectorsResponse) GetItems() []*SecondaryStorageHeuristics {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListSecondaryStorageSelectorsResponse) GetTotalCount() int32 {
	if x != nil && x.TotalCount != nil {
		return *x.TotalCount
	}
	return 0
}

// RemoveSecondaryStorageSelectorRequest represents the parameters for removes an existing secondary storage selector.
type RemoveSecondaryStorageSelectorRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique identifier of the secondary storage selector to be removed.
	Id *int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	ResponseType  *string `protobuf:"bytes,2,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveSecondaryStorageSelectorRequest) Reset() {
	*x = RemoveSecondaryStorageSelectorRequest{}
	mi := &file_cloudstack_management_storage_heuristics_v1_heuristics_gen_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveSecondaryStorageSelectorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveSecondaryStorageSelectorRequest) ProtoMessage() {}

func (x *RemoveSecondaryStorageSelectorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_storage_heuristics_v1_heuristics_gen_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveSecondaryStorageSelectorRequest.ProtoReflect.Descriptor instead.
func (*RemoveSecondaryStorageSelectorRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_storage_heuristics_v1_heuristics_gen_proto_rawDescGZIP(), []int{4}
}

func (x *RemoveSecondaryStorageSelectorRequest) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *RemoveSecondaryStorageSelectorRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// RemoveSecondaryStorageSelectorResponse represents the response from removes an existing secondary storage selector.
type RemoveSecondaryStorageSelectorResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Result
	Result        *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveSecondaryStorageSelectorResponse) Reset() {
	*x = RemoveSecondaryStorageSelectorResponse{}
	mi := &file_cloudstack_management_storage_heuristics_v1_heuristics_gen_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveSecondaryStorageSelectorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveSecondaryStorageSelectorResponse) ProtoMessage() {}

func (x *RemoveSecondaryStorageSelectorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_storage_heuristics_v1_heuristics_gen_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveSecondaryStorageSelectorResponse.ProtoReflect.Descriptor instead.
func (*RemoveSecondaryStorageSelectorResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_storage_heuristics_v1_heuristics_gen_proto_rawDescGZIP(), []int{5}
}

func (x *RemoveSecondaryStorageSelectorResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// UpdateSecondaryStorageSelectorRequest represents the parameters for updates an existing secondary storage selector.
type UpdateSecondaryStorageSelectorRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique identifier of the secondary storage selector.
	Id *int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// The heuristic rule, in JavaScript language. It is required that it returns the UUID of a secondary storage pool. An example of a rule is `if (snapshot.hypervisorType === 'KVM') { '7832f261-c602-4e8e-8580-2496ffbbc45d'; }` would allocate all snapshots with the KVM hypervisor to the specified secondary storage UUID.
	HeuristicRule *string `protobuf:"bytes,2,opt,name=heuristic_rule,json=heuristicRule" json:"heuristic_rule,omitempty"`
	ResponseType  *string `protobuf:"bytes,3,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSecondaryStorageSelectorRequest) Reset() {
	*x = UpdateSecondaryStorageSelectorRequest{}
	mi := &file_cloudstack_management_storage_heuristics_v1_heuristics_gen_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSecondaryStorageSelectorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSecondaryStorageSelectorRequest) ProtoMessage() {}

func (x *UpdateSecondaryStorageSelectorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_storage_heuristics_v1_heuristics_gen_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSecondaryStorageSelectorRequest.ProtoReflect.Descriptor instead.
func (*UpdateSecondaryStorageSelectorRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_storage_heuristics_v1_heuristics_gen_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateSecondaryStorageSelectorRequest) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *UpdateSecondaryStorageSelectorRequest) GetHeuristicRule() string {
	if x != nil && x.HeuristicRule != nil {
		return *x.HeuristicRule
	}
	return ""
}

func (x *UpdateSecondaryStorageSelectorRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// UpdateSecondaryStorageSelectorResponse represents the response from updates an existing secondary storage selector.
type UpdateSecondaryStorageSelectorResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Result
	Result        *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSecondaryStorageSelectorResponse) Reset() {
	*x = UpdateSecondaryStorageSelectorResponse{}
	mi := &file_cloudstack_management_storage_heuristics_v1_heuristics_gen_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSecondaryStorageSelectorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSecondaryStorageSelectorResponse) ProtoMessage() {}

func (x *UpdateSecondaryStorageSelectorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_storage_heuristics_v1_heuristics_gen_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSecondaryStorageSelectorResponse.ProtoReflect.Descriptor instead.
func (*UpdateSecondaryStorageSelectorResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_storage_heuristics_v1_heuristics_gen_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateSecondaryStorageSelectorResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// SecondaryStorageHeuristics represents a SecondaryStorageHeuristics Item
type SecondaryStorageHeuristics struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the SecondaryStorageHeuristics
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// The name of the SecondaryStorageHeuristics
	Name *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// The display name of the SecondaryStorageHeuristics
	DisplayName *string `protobuf:"bytes,3,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	// The description of the SecondaryStorageHeuristics
	Description *string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	// The date this entity was created
	Created       *string `protobuf:"bytes,5,opt,name=created" json:"created,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SecondaryStorageHeuristics) Reset() {
	*x = SecondaryStorageHeuristics{}
	mi := &file_cloudstack_management_storage_heuristics_v1_heuristics_gen_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SecondaryStorageHeuristics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecondaryStorageHeuristics) ProtoMessage() {}

func (x *SecondaryStorageHeuristics) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_storage_heuristics_v1_heuristics_gen_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecondaryStorageHeuristics.ProtoReflect.Descriptor instead.
func (*SecondaryStorageHeuristics) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_storage_heuristics_v1_heuristics_gen_proto_rawDescGZIP(), []int{8}
}

func (x *SecondaryStorageHeuristics) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *SecondaryStorageHeuristics) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *SecondaryStorageHeuristics) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *SecondaryStorageHeuristics) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *SecondaryStorageHeuristics) GetCreated() string {
	if x != nil && x.Created != nil {
		return *x.Created
	}
	return ""
}

// Success represents a Success Operation Response
type Success struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// true if operation is executed successfully
	Success *bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	// any text associated with the success or failure
	DisplayText   *string `protobuf:"bytes,2,opt,name=display_text,json=displayText" json:"display_text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Success) Reset() {
	*x = Success{}
	mi := &file_cloudstack_management_storage_heuristics_v1_heuristics_gen_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Success) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Success) ProtoMessage() {}

func (x *Success) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_storage_heuristics_v1_heuristics_gen_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Success.ProtoReflect.Descriptor instead.
func (*Success) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_storage_heuristics_v1_heuristics_gen_proto_rawDescGZIP(), []int{9}
}

func (x *Success) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *Success) GetDisplayText() string {
	if x != nil && x.DisplayText != nil {
		return *x.DisplayText
	}
	return ""
}

// Result represents a generic operation result
type Result struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether the operation was successful
	Success *bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	// Any text associated with the success or failure
	DisplayText *string `protobuf:"bytes,2,opt,name=display_text,json=displayText" json:"display_text,omitempty"`
	// The ID of the resource affected by the operation
	Id *string `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	// The job ID for an async operation
	JobId *string `protobuf:"bytes,4,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
	// The status of the job
	JobStatus     *string `protobuf:"bytes,5,opt,name=job_status,json=jobStatus" json:"job_status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Result) Reset() {
	*x = Result{}
	mi := &file_cloudstack_management_storage_heuristics_v1_heuristics_gen_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_storage_heuristics_v1_heuristics_gen_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_storage_heuristics_v1_heuristics_gen_proto_rawDescGZIP(), []int{10}
}

func (x *Result) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *Result) GetDisplayText() string {
	if x != nil && x.DisplayText != nil {
		return *x.DisplayText
	}
	return ""
}

func (x *Result) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Result) GetJobId() string {
	if x != nil && x.JobId != nil {
		return *x.JobId
	}
	return ""
}

func (x *Result) GetJobStatus() string {
	if x != nil && x.JobStatus != nil {
		return *x.JobStatus
	}
	return ""
}

var File_cloudstack_management_storage_heuristics_v1_heuristics_gen_proto protoreflect.FileDescriptor

const file_cloudstack_management_storage_heuristics_v1_heuristics_gen_proto_rawDesc = "" +
	"\n" +
	"@cloudstack/management/storage/heuristics/v1/heuristics.gen.proto\x12+cloudstack.management.storage.heuristics.v1\x1a(cloudstack/annotations/annotations.proto\x1a\"cloudstack/validate/validate.proto\x1a google/protobuf/descriptor.proto\"\x8c\x02\n" +
	"%CreateSecondaryStorageSelectorRequest\x12!\n" +
	"\x04name\x18\x01 \x01(\tB\r\xbaH\n" +
	"\xc8\x01\x01r\x05\x10\x01\x18\xff\x01R\x04name\x12/\n" +
	"\vdescription\x18\x02 \x01(\tB\r\xbaH\n" +
	"\xc8\x01\x01r\x05\x10\x01\x18\x80\bR\vdescription\x12\x1f\n" +
	"\azone_id\x18\x03 \x01(\x03B\x06\xbaH\x03\xc8\x01\x01R\x06zoneId\x12\x1a\n" +
	"\x04type\x18\x04 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\x04type\x12-\n" +
	"\x0eheuristic_rule\x18\x05 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\rheuristicRule\x12#\n" +
	"\rresponse_type\x18\x06 \x01(\tR\fresponseType\"u\n" +
	"&CreateSecondaryStorageSelectorResponse\x12K\n" +
	"\x06result\x18\x01 \x01(\v23.cloudstack.management.storage.heuristics.v1.ResultR\x06result\"\xf5\x01\n" +
	"$ListSecondaryStorageSelectorsRequest\x12\x1f\n" +
	"\azone_id\x18\x01 \x01(\x03B\x06\xbaH\x03\xc8\x01\x01R\x06zoneId\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12(\n" +
	"\fshow_removed\x18\x03 \x01(\bB\x05\xaa\x01\x02\b\x01R\vshowRemoved\x12\x18\n" +
	"\akeyword\x18\x04 \x01(\tR\akeyword\x12\x12\n" +
	"\x04page\x18\x05 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x06 \x01(\x05R\bpageSize\x12#\n" +
	"\rresponse_type\x18\a \x01(\tR\fresponseType\"\xae\x01\n" +
	"%ListSecondaryStorageSelectorsResponse\x12]\n" +
	"\x05items\x18\x01 \x03(\v2G.cloudstack.management.storage.heuristics.v1.SecondaryStorageHeuristicsR\x05items\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount:\x05\xbaH\x02\b\x00\"d\n" +
	"%RemoveSecondaryStorageSelectorRequest\x12\x16\n" +
	"\x02id\x18\x01 \x01(\x03B\x06\xbaH\x03\xc8\x01\x01R\x02id\x12#\n" +
	"\rresponse_type\x18\x02 \x01(\tR\fresponseType\"u\n" +
	"&RemoveSecondaryStorageSelectorResponse\x12K\n" +
	"\x06result\x18\x01 \x01(\v23.cloudstack.management.storage.heuristics.v1.ResultR\x06result\"\x93\x01\n" +
	"%UpdateSecondaryStorageSelectorRequest\x12\x16\n" +
	"\x02id\x18\x01 \x01(\x03B\x06\xbaH\x03\xc8\x01\x01R\x02id\x12-\n" +
	"\x0eheuristic_rule\x18\x02 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\rheuristicRule\x12#\n" +
	"\rresponse_type\x18\x03 \x01(\tR\fresponseType\"u\n" +
	"&UpdateSecondaryStorageSelectorResponse\x12K\n" +
	"\x06result\x18\x01 \x01(\v23.cloudstack.management.storage.heuristics.v1.ResultR\x06result\"\xa9\x01\n" +
	"\x1aSecondaryStorageHeuristics\x12\x18\n" +
	"\x02id\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12!\n" +
	"\fdisplay_name\x18\x03 \x01(\tR\vdisplayName\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x18\n" +
	"\acreated\x18\x05 \x01(\tR\acreated\"F\n" +
	"\aSuccess\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12!\n" +
	"\fdisplay_text\x18\x02 \x01(\tR\vdisplayText\"\x9f\x01\n" +
	"\x06Result\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12!\n" +
	"\fdisplay_text\x18\x02 \x01(\tR\vdisplayText\x12\x18\n" +
	"\x02id\x18\x03 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x02id\x12\x1f\n" +
	"\x06job_id\x18\x04 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x05jobId\x12\x1d\n" +
	"\n" +
	"job_status\x18\x05 \x01(\tR\tjobStatus2\xed\x06\n" +
	"\x11HeuristicsService\x12\xd2\x01\n" +
	"\x1eCreateSecondaryStorageSelector\x12R.cloudstack.management.storage.heuristics.v1.CreateSecondaryStorageSelectorRequest\x1aS.cloudstack.management.storage.heuristics.v1.CreateSecondaryStorageSelectorResponse\"\a\xc2>\x04\xc2>\x01\x02\x12\xcf\x01\n" +
	"\x1dListSecondaryStorageSelectors\x12Q.cloudstack.management.storage.heuristics.v1.ListSecondaryStorageSelectorsRequest\x1aR.cloudstack.management.storage.heuristics.v1.ListSecondaryStorageSelectorsResponse\"\a\xc2>\x04\xc2>\x01\x02\x12\xd2\x01\n" +
	"\x1eRemoveSecondaryStorageSelector\x12R.cloudstack.management.storage.heuristics.v1.RemoveSecondaryStorageSelectorRequest\x1aS.cloudstack.management.storage.heuristics.v1.RemoveSecondaryStorageSelectorResponse\"\a\xc2>\x04\xc2>\x01\x02\x12\xd2\x01\n" +
	"\x1eUpdateSecondaryStorageSelector\x12R.cloudstack.management.storage.heuristics.v1.UpdateSecondaryStorageSelectorRequest\x1aS.cloudstack.management.storage.heuristics.v1.UpdateSecondaryStorageSelectorResponse\"\a\xc2>\x04\xc2>\x01\x02\x1a\a\xc2>\x04\xc2>\x01\x02B\x84\x03\n" +
	"/com.cloudstack.management.storage.heuristics.v1B\x12HeuristicsGenProtoP\x01Zlgithub.com/walteh/cloudstack-proxy/gen/proto/golang/cloudstack/management/storage/heuristics/v1;heuristicsv1\xa2\x02\x04CMSH\xaa\x02+Cloudstack.Management.Storage.Heuristics.V1\xca\x02+Cloudstack\\Management\\Storage\\Heuristics\\V1\xe2\x027Cloudstack\\Management\\Storage\\Heuristics\\V1\\GPBMetadata\xea\x02/Cloudstack::Management::Storage::Heuristics::V1b\beditionsp\xe8\a"

var (
	file_cloudstack_management_storage_heuristics_v1_heuristics_gen_proto_rawDescOnce sync.Once
	file_cloudstack_management_storage_heuristics_v1_heuristics_gen_proto_rawDescData []byte
)

func file_cloudstack_management_storage_heuristics_v1_heuristics_gen_proto_rawDescGZIP() []byte {
	file_cloudstack_management_storage_heuristics_v1_heuristics_gen_proto_rawDescOnce.Do(func() {
		file_cloudstack_management_storage_heuristics_v1_heuristics_gen_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_cloudstack_management_storage_heuristics_v1_heuristics_gen_proto_rawDesc), len(file_cloudstack_management_storage_heuristics_v1_heuristics_gen_proto_rawDesc)))
	})
	return file_cloudstack_management_storage_heuristics_v1_heuristics_gen_proto_rawDescData
}

var file_cloudstack_management_storage_heuristics_v1_heuristics_gen_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_cloudstack_management_storage_heuristics_v1_heuristics_gen_proto_goTypes = []any{
	(*CreateSecondaryStorageSelectorRequest)(nil),  // 0: cloudstack.management.storage.heuristics.v1.CreateSecondaryStorageSelectorRequest
	(*CreateSecondaryStorageSelectorResponse)(nil), // 1: cloudstack.management.storage.heuristics.v1.CreateSecondaryStorageSelectorResponse
	(*ListSecondaryStorageSelectorsRequest)(nil),   // 2: cloudstack.management.storage.heuristics.v1.ListSecondaryStorageSelectorsRequest
	(*ListSecondaryStorageSelectorsResponse)(nil),  // 3: cloudstack.management.storage.heuristics.v1.ListSecondaryStorageSelectorsResponse
	(*RemoveSecondaryStorageSelectorRequest)(nil),  // 4: cloudstack.management.storage.heuristics.v1.RemoveSecondaryStorageSelectorRequest
	(*RemoveSecondaryStorageSelectorResponse)(nil), // 5: cloudstack.management.storage.heuristics.v1.RemoveSecondaryStorageSelectorResponse
	(*UpdateSecondaryStorageSelectorRequest)(nil),  // 6: cloudstack.management.storage.heuristics.v1.UpdateSecondaryStorageSelectorRequest
	(*UpdateSecondaryStorageSelectorResponse)(nil), // 7: cloudstack.management.storage.heuristics.v1.UpdateSecondaryStorageSelectorResponse
	(*SecondaryStorageHeuristics)(nil),             // 8: cloudstack.management.storage.heuristics.v1.SecondaryStorageHeuristics
	(*Success)(nil),                                // 9: cloudstack.management.storage.heuristics.v1.Success
	(*Result)(nil),                                 // 10: cloudstack.management.storage.heuristics.v1.Result
}
var file_cloudstack_management_storage_heuristics_v1_heuristics_gen_proto_depIdxs = []int32{
	10, // 0: cloudstack.management.storage.heuristics.v1.CreateSecondaryStorageSelectorResponse.result:type_name -> cloudstack.management.storage.heuristics.v1.Result
	8,  // 1: cloudstack.management.storage.heuristics.v1.ListSecondaryStorageSelectorsResponse.items:type_name -> cloudstack.management.storage.heuristics.v1.SecondaryStorageHeuristics
	10, // 2: cloudstack.management.storage.heuristics.v1.RemoveSecondaryStorageSelectorResponse.result:type_name -> cloudstack.management.storage.heuristics.v1.Result
	10, // 3: cloudstack.management.storage.heuristics.v1.UpdateSecondaryStorageSelectorResponse.result:type_name -> cloudstack.management.storage.heuristics.v1.Result
	0,  // 4: cloudstack.management.storage.heuristics.v1.HeuristicsService.CreateSecondaryStorageSelector:input_type -> cloudstack.management.storage.heuristics.v1.CreateSecondaryStorageSelectorRequest
	2,  // 5: cloudstack.management.storage.heuristics.v1.HeuristicsService.ListSecondaryStorageSelectors:input_type -> cloudstack.management.storage.heuristics.v1.ListSecondaryStorageSelectorsRequest
	4,  // 6: cloudstack.management.storage.heuristics.v1.HeuristicsService.RemoveSecondaryStorageSelector:input_type -> cloudstack.management.storage.heuristics.v1.RemoveSecondaryStorageSelectorRequest
	6,  // 7: cloudstack.management.storage.heuristics.v1.HeuristicsService.UpdateSecondaryStorageSelector:input_type -> cloudstack.management.storage.heuristics.v1.UpdateSecondaryStorageSelectorRequest
	1,  // 8: cloudstack.management.storage.heuristics.v1.HeuristicsService.CreateSecondaryStorageSelector:output_type -> cloudstack.management.storage.heuristics.v1.CreateSecondaryStorageSelectorResponse
	3,  // 9: cloudstack.management.storage.heuristics.v1.HeuristicsService.ListSecondaryStorageSelectors:output_type -> cloudstack.management.storage.heuristics.v1.ListSecondaryStorageSelectorsResponse
	5,  // 10: cloudstack.management.storage.heuristics.v1.HeuristicsService.RemoveSecondaryStorageSelector:output_type -> cloudstack.management.storage.heuristics.v1.RemoveSecondaryStorageSelectorResponse
	7,  // 11: cloudstack.management.storage.heuristics.v1.HeuristicsService.UpdateSecondaryStorageSelector:output_type -> cloudstack.management.storage.heuristics.v1.UpdateSecondaryStorageSelectorResponse
	8,  // [8:12] is the sub-list for method output_type
	4,  // [4:8] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_cloudstack_management_storage_heuristics_v1_heuristics_gen_proto_init() }
func file_cloudstack_management_storage_heuristics_v1_heuristics_gen_proto_init() {
	if File_cloudstack_management_storage_heuristics_v1_heuristics_gen_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_cloudstack_management_storage_heuristics_v1_heuristics_gen_proto_rawDesc), len(file_cloudstack_management_storage_heuristics_v1_heuristics_gen_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cloudstack_management_storage_heuristics_v1_heuristics_gen_proto_goTypes,
		DependencyIndexes: file_cloudstack_management_storage_heuristics_v1_heuristics_gen_proto_depIdxs,
		MessageInfos:      file_cloudstack_management_storage_heuristics_v1_heuristics_gen_proto_msgTypes,
	}.Build()
	File_cloudstack_management_storage_heuristics_v1_heuristics_gen_proto = out.File
	file_cloudstack_management_storage_heuristics_v1_heuristics_gen_proto_goTypes = nil
	file_cloudstack_management_storage_heuristics_v1_heuristics_gen_proto_depIdxs = nil
}
