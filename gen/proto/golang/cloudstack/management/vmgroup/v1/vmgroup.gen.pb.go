// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: cloudstack/management/vmgroup/v1/vmgroup.gen.proto

package vmgroupv1

import (
	_ "github.com/walteh/cloudstack-proxy/gen/proto/golang/cloudstack/annotations"
	_ "github.com/walteh/cloudstack-proxy/gen/proto/golang/cloudstack/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CreateVMGroupRequest represents the parameters for creates a vm group
type CreateVMGroupRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the name of the instance group
	GroupName *string `protobuf:"bytes,1,opt,name=group_name,json=groupName" json:"group_name,omitempty"`
	// the account of the instance group. The account parameter must be used with the domainId parameter.
	AccountName *string `protobuf:"bytes,2,opt,name=account_name,json=accountName" json:"account_name,omitempty"`
	// the domain ID of account owning the instance group
	DomainId *int64 `protobuf:"varint,3,opt,name=domain_id,json=domainId" json:"domain_id,omitempty"`
	// The project of the instance group
	ProjectId *int64 `protobuf:"varint,4,opt,name=project_id,json=projectId" json:"project_id,omitempty"`
	ResponseType  *string `protobuf:"bytes,5,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateVMGroupRequest) Reset() {
	*x = CreateVMGroupRequest{}
	mi := &file_cloudstack_management_vmgroup_v1_vmgroup_gen_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVMGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVMGroupRequest) ProtoMessage() {}

func (x *CreateVMGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_vmgroup_v1_vmgroup_gen_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVMGroupRequest.ProtoReflect.Descriptor instead.
func (*CreateVMGroupRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_vmgroup_v1_vmgroup_gen_proto_rawDescGZIP(), []int{0}
}

func (x *CreateVMGroupRequest) GetGroupName() string {
	if x != nil && x.GroupName != nil {
		return *x.GroupName
	}
	return ""
}

func (x *CreateVMGroupRequest) GetAccountName() string {
	if x != nil && x.AccountName != nil {
		return *x.AccountName
	}
	return ""
}

func (x *CreateVMGroupRequest) GetDomainId() int64 {
	if x != nil && x.DomainId != nil {
		return *x.DomainId
	}
	return 0
}

func (x *CreateVMGroupRequest) GetProjectId() int64 {
	if x != nil && x.ProjectId != nil {
		return *x.ProjectId
	}
	return 0
}

func (x *CreateVMGroupRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// CreateVMGroupResponse represents the response from creates a vm group
type CreateVMGroupResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Result
	Result        *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateVMGroupResponse) Reset() {
	*x = CreateVMGroupResponse{}
	mi := &file_cloudstack_management_vmgroup_v1_vmgroup_gen_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVMGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVMGroupResponse) ProtoMessage() {}

func (x *CreateVMGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_vmgroup_v1_vmgroup_gen_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVMGroupResponse.ProtoReflect.Descriptor instead.
func (*CreateVMGroupResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_vmgroup_v1_vmgroup_gen_proto_rawDescGZIP(), []int{1}
}

func (x *CreateVMGroupResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// DeleteVMGroupRequest represents the parameters for deletes a vm group
type DeleteVMGroupRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the ID of the instance group
	Id *int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	ResponseType  *string `protobuf:"bytes,2,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteVMGroupRequest) Reset() {
	*x = DeleteVMGroupRequest{}
	mi := &file_cloudstack_management_vmgroup_v1_vmgroup_gen_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteVMGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVMGroupRequest) ProtoMessage() {}

func (x *DeleteVMGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_vmgroup_v1_vmgroup_gen_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVMGroupRequest.ProtoReflect.Descriptor instead.
func (*DeleteVMGroupRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_vmgroup_v1_vmgroup_gen_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteVMGroupRequest) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *DeleteVMGroupRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// DeleteVMGroupResponse represents the response from deletes a vm group
type DeleteVMGroupResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Result
	Result        *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteVMGroupResponse) Reset() {
	*x = DeleteVMGroupResponse{}
	mi := &file_cloudstack_management_vmgroup_v1_vmgroup_gen_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteVMGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVMGroupResponse) ProtoMessage() {}

func (x *DeleteVMGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_vmgroup_v1_vmgroup_gen_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVMGroupResponse.ProtoReflect.Descriptor instead.
func (*DeleteVMGroupResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_vmgroup_v1_vmgroup_gen_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteVMGroupResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// ListVMGroupsRequest represents the parameters for lists vm groups
type ListVMGroupsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// list instance groups by ID
	Id *int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// list instance groups by name
	GroupName *string `protobuf:"bytes,2,opt,name=group_name,json=groupName" json:"group_name,omitempty"`
	// list objects by project; if projectid=-1 lists All VMs
	ProjectId *int64 `protobuf:"varint,3,opt,name=project_id,json=projectId" json:"project_id,omitempty"`
	// list resources by account. Must be used with the domainId parameter.
	AccountName *string `protobuf:"bytes,4,opt,name=account_name,json=accountName" json:"account_name,omitempty"`
	// If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false. Resources dedicated to a project are listed only if using the projectid parameter.
	ListAll *bool `protobuf:"varint,5,opt,name=list_all,json=listAll" json:"list_all,omitempty"`
	// list only resources belonging to the domain specified
	DomainId *int64 `protobuf:"varint,6,opt,name=domain_id,json=domainId" json:"domain_id,omitempty"`
	// defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.
	Recursive *bool `protobuf:"varint,7,opt,name=recursive" json:"recursive,omitempty"`
	// List by keyword
	Keyword *string `protobuf:"bytes,8,opt,name=keyword" json:"keyword,omitempty"`
	Page *int32 `protobuf:"varint,9,opt,name=page" json:"page,omitempty"`
	PageSize *int32 `protobuf:"varint,10,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	ResponseType  *string `protobuf:"bytes,11,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListVMGroupsRequest) Reset() {
	*x = ListVMGroupsRequest{}
	mi := &file_cloudstack_management_vmgroup_v1_vmgroup_gen_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVMGroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVMGroupsRequest) ProtoMessage() {}

func (x *ListVMGroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_vmgroup_v1_vmgroup_gen_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVMGroupsRequest.ProtoReflect.Descriptor instead.
func (*ListVMGroupsRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_vmgroup_v1_vmgroup_gen_proto_rawDescGZIP(), []int{4}
}

func (x *ListVMGroupsRequest) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *ListVMGroupsRequest) GetGroupName() string {
	if x != nil && x.GroupName != nil {
		return *x.GroupName
	}
	return ""
}

func (x *ListVMGroupsRequest) GetProjectId() int64 {
	if x != nil && x.ProjectId != nil {
		return *x.ProjectId
	}
	return 0
}

func (x *ListVMGroupsRequest) GetAccountName() string {
	if x != nil && x.AccountName != nil {
		return *x.AccountName
	}
	return ""
}

func (x *ListVMGroupsRequest) GetListAll() bool {
	if x != nil && x.ListAll != nil {
		return *x.ListAll
	}
	return false
}

func (x *ListVMGroupsRequest) GetDomainId() int64 {
	if x != nil && x.DomainId != nil {
		return *x.DomainId
	}
	return 0
}

func (x *ListVMGroupsRequest) GetRecursive() bool {
	if x != nil && x.Recursive != nil {
		return *x.Recursive
	}
	return false
}

func (x *ListVMGroupsRequest) GetKeyword() string {
	if x != nil && x.Keyword != nil {
		return *x.Keyword
	}
	return ""
}

func (x *ListVMGroupsRequest) GetPage() int32 {
	if x != nil && x.Page != nil {
		return *x.Page
	}
	return 0
}

func (x *ListVMGroupsRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListVMGroupsRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// ListVMGroupsResponse represents the response from lists vm groups
type ListVMGroupsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The list of InstanceGroups
	Items []*InstanceGroup `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	// The total count of InstanceGroups
	TotalCount    *int32 `protobuf:"varint,2,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListVMGroupsResponse) Reset() {
	*x = ListVMGroupsResponse{}
	mi := &file_cloudstack_management_vmgroup_v1_vmgroup_gen_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVMGroupsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVMGroupsResponse) ProtoMessage() {}

func (x *ListVMGroupsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_vmgroup_v1_vmgroup_gen_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVMGroupsResponse.ProtoReflect.Descriptor instead.
func (*ListVMGroupsResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_vmgroup_v1_vmgroup_gen_proto_rawDescGZIP(), []int{5}
}

func (x *ListVMGroupsResponse) GetItems() []*InstanceGroup {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListVMGroupsResponse) GetTotalCount() int32 {
	if x != nil && x.TotalCount != nil {
		return *x.TotalCount
	}
	return 0
}

// UpdateVMGroupRequest represents the parameters for updates a vm group
type UpdateVMGroupRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Instance group ID
	Id *int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// new instance group name
	GroupName *string `protobuf:"bytes,2,opt,name=group_name,json=groupName" json:"group_name,omitempty"`
	ResponseType  *string `protobuf:"bytes,3,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateVMGroupRequest) Reset() {
	*x = UpdateVMGroupRequest{}
	mi := &file_cloudstack_management_vmgroup_v1_vmgroup_gen_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateVMGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVMGroupRequest) ProtoMessage() {}

func (x *UpdateVMGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_vmgroup_v1_vmgroup_gen_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVMGroupRequest.ProtoReflect.Descriptor instead.
func (*UpdateVMGroupRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_vmgroup_v1_vmgroup_gen_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateVMGroupRequest) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *UpdateVMGroupRequest) GetGroupName() string {
	if x != nil && x.GroupName != nil {
		return *x.GroupName
	}
	return ""
}

func (x *UpdateVMGroupRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// UpdateVMGroupResponse represents the response from updates a vm group
type UpdateVMGroupResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Result
	Result        *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateVMGroupResponse) Reset() {
	*x = UpdateVMGroupResponse{}
	mi := &file_cloudstack_management_vmgroup_v1_vmgroup_gen_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateVMGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVMGroupResponse) ProtoMessage() {}

func (x *UpdateVMGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_vmgroup_v1_vmgroup_gen_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVMGroupResponse.ProtoReflect.Descriptor instead.
func (*UpdateVMGroupResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_vmgroup_v1_vmgroup_gen_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateVMGroupResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// InstanceGroup represents a InstanceGroup Item
type InstanceGroup struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the InstanceGroup
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// The name of the InstanceGroup
	Name *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// The display name of the InstanceGroup
	DisplayName *string `protobuf:"bytes,3,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	// The description of the InstanceGroup
	Description *string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	// The date this entity was created
	Created       *string `protobuf:"bytes,5,opt,name=created" json:"created,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InstanceGroup) Reset() {
	*x = InstanceGroup{}
	mi := &file_cloudstack_management_vmgroup_v1_vmgroup_gen_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstanceGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceGroup) ProtoMessage() {}

func (x *InstanceGroup) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_vmgroup_v1_vmgroup_gen_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceGroup.ProtoReflect.Descriptor instead.
func (*InstanceGroup) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_vmgroup_v1_vmgroup_gen_proto_rawDescGZIP(), []int{8}
}

func (x *InstanceGroup) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *InstanceGroup) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *InstanceGroup) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *InstanceGroup) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *InstanceGroup) GetCreated() string {
	if x != nil && x.Created != nil {
		return *x.Created
	}
	return ""
}

// Success represents a Success Operation Response
type Success struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// true if operation is executed successfully
	Success *bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	// any text associated with the success or failure
	DisplayText   *string `protobuf:"bytes,2,opt,name=display_text,json=displayText" json:"display_text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Success) Reset() {
	*x = Success{}
	mi := &file_cloudstack_management_vmgroup_v1_vmgroup_gen_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Success) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Success) ProtoMessage() {}

func (x *Success) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_vmgroup_v1_vmgroup_gen_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Success.ProtoReflect.Descriptor instead.
func (*Success) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_vmgroup_v1_vmgroup_gen_proto_rawDescGZIP(), []int{9}
}

func (x *Success) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *Success) GetDisplayText() string {
	if x != nil && x.DisplayText != nil {
		return *x.DisplayText
	}
	return ""
}

// Result represents a generic operation result
type Result struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether the operation was successful
	Success *bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	// Any text associated with the success or failure
	DisplayText *string `protobuf:"bytes,2,opt,name=display_text,json=displayText" json:"display_text,omitempty"`
	// The ID of the resource affected by the operation
	Id *string `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	// The job ID for an async operation
	JobId *string `protobuf:"bytes,4,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
	// The status of the job
	JobStatus     *string `protobuf:"bytes,5,opt,name=job_status,json=jobStatus" json:"job_status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Result) Reset() {
	*x = Result{}
	mi := &file_cloudstack_management_vmgroup_v1_vmgroup_gen_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_vmgroup_v1_vmgroup_gen_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_vmgroup_v1_vmgroup_gen_proto_rawDescGZIP(), []int{10}
}

func (x *Result) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *Result) GetDisplayText() string {
	if x != nil && x.DisplayText != nil {
		return *x.DisplayText
	}
	return ""
}

func (x *Result) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Result) GetJobId() string {
	if x != nil && x.JobId != nil {
		return *x.JobId
	}
	return ""
}

func (x *Result) GetJobStatus() string {
	if x != nil && x.JobStatus != nil {
		return *x.JobStatus
	}
	return ""
}

var File_cloudstack_management_vmgroup_v1_vmgroup_gen_proto protoreflect.FileDescriptor

const file_cloudstack_management_vmgroup_v1_vmgroup_gen_proto_rawDesc = "" +
	"\n" +
	"2cloudstack/management/vmgroup/v1/vmgroup.gen.proto\x12 cloudstack.management.vmgroup.v1\x1a(cloudstack/annotations/annotations.proto\x1a\"cloudstack/validate/validate.proto\x1a google/protobuf/descriptor.proto\"\xc8\x01\n" +
	"\x14CreateVMGroupRequest\x12,\n" +
	"\n" +
	"group_name\x18\x01 \x01(\tB\r\xbaH\n" +
	"\xc8\x01\x01r\x05\x10\x01\x18\xff\x01R\tgroupName\x12!\n" +
	"\faccount_name\x18\x02 \x01(\tR\vaccountName\x12\x1b\n" +
	"\tdomain_id\x18\x03 \x01(\x03R\bdomainId\x12\x1d\n" +
	"\n" +
	"project_id\x18\x04 \x01(\x03R\tprojectId\x12#\n" +
	"\rresponse_type\x18\x05 \x01(\tR\fresponseType\"Y\n" +
	"\x15CreateVMGroupResponse\x12@\n" +
	"\x06result\x18\x01 \x01(\v2(.cloudstack.management.vmgroup.v1.ResultR\x06result\"S\n" +
	"\x14DeleteVMGroupRequest\x12\x16\n" +
	"\x02id\x18\x01 \x01(\x03B\x06\xbaH\x03\xc8\x01\x01R\x02id\x12#\n" +
	"\rresponse_type\x18\x02 \x01(\tR\fresponseType\"Y\n" +
	"\x15DeleteVMGroupResponse\x12@\n" +
	"\x06result\x18\x01 \x01(\v2(.cloudstack.management.vmgroup.v1.ResultR\x06result\"\xe6\x03\n" +
	"\x13ListVMGroupsRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12)\n" +
	"\n" +
	"group_name\x18\x02 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x01\x18\xff\x01R\tgroupName\x12\x1d\n" +
	"\n" +
	"project_id\x18\x03 \x01(\x03R\tprojectId\x12\xa0\x01\n" +
	"\faccount_name\x18\x04 \x01(\tB}\xbaHz\xba\x01w\n" +
	"\x1baccount_name_with_domain_id\x122account_name must be used with domain_id parameter\x1a$!has(account_name) || has(domain_id)R\vaccountName\x12 \n" +
	"\blist_all\x18\x05 \x01(\bB\x05\xaa\x01\x02\b\x01R\alistAll\x12\x1b\n" +
	"\tdomain_id\x18\x06 \x01(\x03R\bdomainId\x12#\n" +
	"\trecursive\x18\a \x01(\bB\x05\xaa\x01\x02\b\x01R\trecursive\x12\x18\n" +
	"\akeyword\x18\b \x01(\tR\akeyword\x12\x12\n" +
	"\x04page\x18\t \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\n" +
	" \x01(\x05R\bpageSize\x12#\n" +
	"\rresponse_type\x18\v \x01(\tR\fresponseType\"\x85\x01\n" +
	"\x14ListVMGroupsResponse\x12E\n" +
	"\x05items\x18\x01 \x03(\v2/.cloudstack.management.vmgroup.v1.InstanceGroupR\x05items\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount:\x05\xbaH\x02\b\x00\"~\n" +
	"\x14UpdateVMGroupRequest\x12\x16\n" +
	"\x02id\x18\x01 \x01(\x03B\x06\xbaH\x03\xc8\x01\x01R\x02id\x12)\n" +
	"\n" +
	"group_name\x18\x02 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x01\x18\xff\x01R\tgroupName\x12#\n" +
	"\rresponse_type\x18\x03 \x01(\tR\fresponseType\"Y\n" +
	"\x15UpdateVMGroupResponse\x12@\n" +
	"\x06result\x18\x01 \x01(\v2(.cloudstack.management.vmgroup.v1.ResultR\x06result\"\x9c\x01\n" +
	"\rInstanceGroup\x12\x18\n" +
	"\x02id\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12!\n" +
	"\fdisplay_name\x18\x03 \x01(\tR\vdisplayName\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x18\n" +
	"\acreated\x18\x05 \x01(\tR\acreated\"F\n" +
	"\aSuccess\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12!\n" +
	"\fdisplay_text\x18\x02 \x01(\tR\vdisplayText\"\x9f\x01\n" +
	"\x06Result\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12!\n" +
	"\fdisplay_text\x18\x02 \x01(\tR\vdisplayText\x12\x18\n" +
	"\x02id\x18\x03 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x02id\x12\x1f\n" +
	"\x06job_id\x18\x04 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x05jobId\x12\x1d\n" +
	"\n" +
	"job_status\x18\x05 \x01(\tR\tjobStatus2\xc6\x04\n" +
	"\x0eVmgroupService\x12\x89\x01\n" +
	"\rCreateVMGroup\x126.cloudstack.management.vmgroup.v1.CreateVMGroupRequest\x1a7.cloudstack.management.vmgroup.v1.CreateVMGroupResponse\"\a\xc2>\x04\xc2>\x01\x02\x12\x89\x01\n" +
	"\rDeleteVMGroup\x126.cloudstack.management.vmgroup.v1.DeleteVMGroupRequest\x1a7.cloudstack.management.vmgroup.v1.DeleteVMGroupResponse\"\a\xc2>\x04\xc2>\x01\x02\x12\x86\x01\n" +
	"\fListVMGroups\x125.cloudstack.management.vmgroup.v1.ListVMGroupsRequest\x1a6.cloudstack.management.vmgroup.v1.ListVMGroupsResponse\"\a\xc2>\x04\xc2>\x01\x02\x12\x89\x01\n" +
	"\rUpdateVMGroup\x126.cloudstack.management.vmgroup.v1.UpdateVMGroupRequest\x1a7.cloudstack.management.vmgroup.v1.UpdateVMGroupResponse\"\a\xc2>\x04\xc2>\x01\x02\x1a\a\xc2>\x04\xc2>\x01\x02B\xba\x02\n" +
	"$com.cloudstack.management.vmgroup.v1B\x0fVmgroupGenProtoP\x01Z^github.com/walteh/cloudstack-proxy/gen/proto/golang/cloudstack/management/vmgroup/v1;vmgroupv1\xa2\x02\x03CMV\xaa\x02 Cloudstack.Management.Vmgroup.V1\xca\x02 Cloudstack\\Management\\Vmgroup\\V1\xe2\x02,Cloudstack\\Management\\Vmgroup\\V1\\GPBMetadata\xea\x02#Cloudstack::Management::Vmgroup::V1b\beditionsp\xe8\a"

var (
	file_cloudstack_management_vmgroup_v1_vmgroup_gen_proto_rawDescOnce sync.Once
	file_cloudstack_management_vmgroup_v1_vmgroup_gen_proto_rawDescData []byte
)

func file_cloudstack_management_vmgroup_v1_vmgroup_gen_proto_rawDescGZIP() []byte {
	file_cloudstack_management_vmgroup_v1_vmgroup_gen_proto_rawDescOnce.Do(func() {
		file_cloudstack_management_vmgroup_v1_vmgroup_gen_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_cloudstack_management_vmgroup_v1_vmgroup_gen_proto_rawDesc), len(file_cloudstack_management_vmgroup_v1_vmgroup_gen_proto_rawDesc)))
	})
	return file_cloudstack_management_vmgroup_v1_vmgroup_gen_proto_rawDescData
}

var file_cloudstack_management_vmgroup_v1_vmgroup_gen_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_cloudstack_management_vmgroup_v1_vmgroup_gen_proto_goTypes = []any{
	(*CreateVMGroupRequest)(nil),  // 0: cloudstack.management.vmgroup.v1.CreateVMGroupRequest
	(*CreateVMGroupResponse)(nil), // 1: cloudstack.management.vmgroup.v1.CreateVMGroupResponse
	(*DeleteVMGroupRequest)(nil),  // 2: cloudstack.management.vmgroup.v1.DeleteVMGroupRequest
	(*DeleteVMGroupResponse)(nil), // 3: cloudstack.management.vmgroup.v1.DeleteVMGroupResponse
	(*ListVMGroupsRequest)(nil),   // 4: cloudstack.management.vmgroup.v1.ListVMGroupsRequest
	(*ListVMGroupsResponse)(nil),  // 5: cloudstack.management.vmgroup.v1.ListVMGroupsResponse
	(*UpdateVMGroupRequest)(nil),  // 6: cloudstack.management.vmgroup.v1.UpdateVMGroupRequest
	(*UpdateVMGroupResponse)(nil), // 7: cloudstack.management.vmgroup.v1.UpdateVMGroupResponse
	(*InstanceGroup)(nil),         // 8: cloudstack.management.vmgroup.v1.InstanceGroup
	(*Success)(nil),               // 9: cloudstack.management.vmgroup.v1.Success
	(*Result)(nil),                // 10: cloudstack.management.vmgroup.v1.Result
}
var file_cloudstack_management_vmgroup_v1_vmgroup_gen_proto_depIdxs = []int32{
	10, // 0: cloudstack.management.vmgroup.v1.CreateVMGroupResponse.result:type_name -> cloudstack.management.vmgroup.v1.Result
	10, // 1: cloudstack.management.vmgroup.v1.DeleteVMGroupResponse.result:type_name -> cloudstack.management.vmgroup.v1.Result
	8,  // 2: cloudstack.management.vmgroup.v1.ListVMGroupsResponse.items:type_name -> cloudstack.management.vmgroup.v1.InstanceGroup
	10, // 3: cloudstack.management.vmgroup.v1.UpdateVMGroupResponse.result:type_name -> cloudstack.management.vmgroup.v1.Result
	0,  // 4: cloudstack.management.vmgroup.v1.VmgroupService.CreateVMGroup:input_type -> cloudstack.management.vmgroup.v1.CreateVMGroupRequest
	2,  // 5: cloudstack.management.vmgroup.v1.VmgroupService.DeleteVMGroup:input_type -> cloudstack.management.vmgroup.v1.DeleteVMGroupRequest
	4,  // 6: cloudstack.management.vmgroup.v1.VmgroupService.ListVMGroups:input_type -> cloudstack.management.vmgroup.v1.ListVMGroupsRequest
	6,  // 7: cloudstack.management.vmgroup.v1.VmgroupService.UpdateVMGroup:input_type -> cloudstack.management.vmgroup.v1.UpdateVMGroupRequest
	1,  // 8: cloudstack.management.vmgroup.v1.VmgroupService.CreateVMGroup:output_type -> cloudstack.management.vmgroup.v1.CreateVMGroupResponse
	3,  // 9: cloudstack.management.vmgroup.v1.VmgroupService.DeleteVMGroup:output_type -> cloudstack.management.vmgroup.v1.DeleteVMGroupResponse
	5,  // 10: cloudstack.management.vmgroup.v1.VmgroupService.ListVMGroups:output_type -> cloudstack.management.vmgroup.v1.ListVMGroupsResponse
	7,  // 11: cloudstack.management.vmgroup.v1.VmgroupService.UpdateVMGroup:output_type -> cloudstack.management.vmgroup.v1.UpdateVMGroupResponse
	8,  // [8:12] is the sub-list for method output_type
	4,  // [4:8] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_cloudstack_management_vmgroup_v1_vmgroup_gen_proto_init() }
func file_cloudstack_management_vmgroup_v1_vmgroup_gen_proto_init() {
	if File_cloudstack_management_vmgroup_v1_vmgroup_gen_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_cloudstack_management_vmgroup_v1_vmgroup_gen_proto_rawDesc), len(file_cloudstack_management_vmgroup_v1_vmgroup_gen_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cloudstack_management_vmgroup_v1_vmgroup_gen_proto_goTypes,
		DependencyIndexes: file_cloudstack_management_vmgroup_v1_vmgroup_gen_proto_depIdxs,
		MessageInfos:      file_cloudstack_management_vmgroup_v1_vmgroup_gen_proto_msgTypes,
	}.Build()
	File_cloudstack_management_vmgroup_v1_vmgroup_gen_proto = out.File
	file_cloudstack_management_vmgroup_v1_vmgroup_gen_proto_goTypes = nil
	file_cloudstack_management_vmgroup_v1_vmgroup_gen_proto_depIdxs = nil
}
