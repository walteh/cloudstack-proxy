// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: cloudstack/management/offering/v1/offering.gen.proto

package offeringv1

import (
	_ "github.com/walteh/cloudstack-proxy/gen/proto/golang/cloudstack/annotations"
	_ "github.com/walteh/cloudstack-proxy/gen/proto/golang/cloudstack/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// DeleteServiceOfferingRequest represents the parameters for deletes a service offering.
type DeleteServiceOfferingRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the ID of the service offering
	Id *int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	ResponseType  *string `protobuf:"bytes,2,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteServiceOfferingRequest) Reset() {
	*x = DeleteServiceOfferingRequest{}
	mi := &file_cloudstack_management_offering_v1_offering_gen_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteServiceOfferingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteServiceOfferingRequest) ProtoMessage() {}

func (x *DeleteServiceOfferingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_offering_v1_offering_gen_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteServiceOfferingRequest.ProtoReflect.Descriptor instead.
func (*DeleteServiceOfferingRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_offering_v1_offering_gen_proto_rawDescGZIP(), []int{0}
}

func (x *DeleteServiceOfferingRequest) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *DeleteServiceOfferingRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// DeleteServiceOfferingResponse represents the response from deletes a service offering.
type DeleteServiceOfferingResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Result
	Result        *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteServiceOfferingResponse) Reset() {
	*x = DeleteServiceOfferingResponse{}
	mi := &file_cloudstack_management_offering_v1_offering_gen_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteServiceOfferingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteServiceOfferingResponse) ProtoMessage() {}

func (x *DeleteServiceOfferingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_offering_v1_offering_gen_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteServiceOfferingResponse.ProtoReflect.Descriptor instead.
func (*DeleteServiceOfferingResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_offering_v1_offering_gen_proto_rawDescGZIP(), []int{1}
}

func (x *DeleteServiceOfferingResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// IsAccountAllowedToCreateOfferingsWithTagsRequest represents the parameters for return true if the specified account is allowed to create offerings with tags.
type IsAccountAllowedToCreateOfferingsWithTagsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Account UUID
	Id *int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	ResponseType  *string `protobuf:"bytes,2,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IsAccountAllowedToCreateOfferingsWithTagsRequest) Reset() {
	*x = IsAccountAllowedToCreateOfferingsWithTagsRequest{}
	mi := &file_cloudstack_management_offering_v1_offering_gen_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IsAccountAllowedToCreateOfferingsWithTagsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsAccountAllowedToCreateOfferingsWithTagsRequest) ProtoMessage() {}

func (x *IsAccountAllowedToCreateOfferingsWithTagsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_offering_v1_offering_gen_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsAccountAllowedToCreateOfferingsWithTagsRequest.ProtoReflect.Descriptor instead.
func (*IsAccountAllowedToCreateOfferingsWithTagsRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_offering_v1_offering_gen_proto_rawDescGZIP(), []int{2}
}

func (x *IsAccountAllowedToCreateOfferingsWithTagsRequest) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *IsAccountAllowedToCreateOfferingsWithTagsRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// IsAccountAllowedToCreateOfferingsWithTagsResponse represents the response from return true if the specified account is allowed to create offerings with tags.
type IsAccountAllowedToCreateOfferingsWithTagsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Result
	Result        *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IsAccountAllowedToCreateOfferingsWithTagsResponse) Reset() {
	*x = IsAccountAllowedToCreateOfferingsWithTagsResponse{}
	mi := &file_cloudstack_management_offering_v1_offering_gen_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IsAccountAllowedToCreateOfferingsWithTagsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsAccountAllowedToCreateOfferingsWithTagsResponse) ProtoMessage() {}

func (x *IsAccountAllowedToCreateOfferingsWithTagsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_offering_v1_offering_gen_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsAccountAllowedToCreateOfferingsWithTagsResponse.ProtoReflect.Descriptor instead.
func (*IsAccountAllowedToCreateOfferingsWithTagsResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_offering_v1_offering_gen_proto_rawDescGZIP(), []int{3}
}

func (x *IsAccountAllowedToCreateOfferingsWithTagsResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// UpdateDiskOfferingRequest represents the parameters for updates a disk offering.
type UpdateDiskOfferingRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// updates alternate display text of the disk offering with this value
	DisplayText *string `protobuf:"bytes,1,opt,name=display_text,json=displayText" json:"display_text,omitempty"`
	// ID of the disk offering
	Id *int64 `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	// updates name of the disk offering with this value
	DiskOfferingName *string `protobuf:"bytes,3,opt,name=disk_offering_name,json=diskOfferingName" json:"disk_offering_name,omitempty"`
	// sort key of the disk offering, integer
	SortKey *int32 `protobuf:"varint,4,opt,name=sort_key,json=sortKey" json:"sort_key,omitempty"`
	// an optional field, whether to display the offering to the end user or not.
	DisplayOffering *bool `protobuf:"varint,5,opt,name=display_offering,json=displayOffering" json:"display_offering,omitempty"`
	// the ID of the containing domain(s) as comma separated string, public for public offerings
	DomainIds *string `protobuf:"bytes,6,opt,name=domain_ids,json=domainIds" json:"domain_ids,omitempty"`
	// the ID of the containing zone(s) as comma separated string, all for all zones offerings
	ZoneIds *string `protobuf:"bytes,7,opt,name=zone_ids,json=zoneIds" json:"zone_ids,omitempty"`
	// comma-separated list of tags for the disk offering, tags should match with existing storage pool tags
	Tags *string `protobuf:"bytes,8,opt,name=tags" json:"tags,omitempty"`
	// bytes read rate of the disk offering
	BytesReadRate *int64 `protobuf:"varint,9,opt,name=bytes_read_rate,json=bytesReadRate" json:"bytes_read_rate,omitempty"`
	// burst bytes read rate of the disk offering
	BytesReadRateMax *int64 `protobuf:"varint,10,opt,name=bytes_read_rate_max,json=bytesReadRateMax" json:"bytes_read_rate_max,omitempty"`
	// length (in seconds) of the burst
	BytesReadRateMaxLength *int64 `protobuf:"varint,11,opt,name=bytes_read_rate_max_length,json=bytesReadRateMaxLength" json:"bytes_read_rate_max_length,omitempty"`
	// bytes write rate of the disk offering
	BytesWriteRate *int64 `protobuf:"varint,12,opt,name=bytes_write_rate,json=bytesWriteRate" json:"bytes_write_rate,omitempty"`
	// burst bytes write rate of the disk offering
	BytesWriteRateMax *int64 `protobuf:"varint,13,opt,name=bytes_write_rate_max,json=bytesWriteRateMax" json:"bytes_write_rate_max,omitempty"`
	// length (in seconds) of the burst
	BytesWriteRateMaxLength *int64 `protobuf:"varint,14,opt,name=bytes_write_rate_max_length,json=bytesWriteRateMaxLength" json:"bytes_write_rate_max_length,omitempty"`
	// io requests read rate of the disk offering
	IopsReadRate *int64 `protobuf:"varint,15,opt,name=iops_read_rate,json=iopsReadRate" json:"iops_read_rate,omitempty"`
	// burst requests read rate of the disk offering
	IopsReadRateMax *int64 `protobuf:"varint,16,opt,name=iops_read_rate_max,json=iopsReadRateMax" json:"iops_read_rate_max,omitempty"`
	// length (in seconds) of the burst
	IopsReadRateMaxLength *int64 `protobuf:"varint,17,opt,name=iops_read_rate_max_length,json=iopsReadRateMaxLength" json:"iops_read_rate_max_length,omitempty"`
	// io requests write rate of the disk offering
	IopsWriteRate *int64 `protobuf:"varint,18,opt,name=iops_write_rate,json=iopsWriteRate" json:"iops_write_rate,omitempty"`
	// burst io requests write rate of the disk offering
	IopsWriteRateMax *int64 `protobuf:"varint,19,opt,name=iops_write_rate_max,json=iopsWriteRateMax" json:"iops_write_rate_max,omitempty"`
	// length (in seconds) of the burst
	IopsWriteRateMaxLength *int64 `protobuf:"varint,20,opt,name=iops_write_rate_max_length,json=iopsWriteRateMaxLength" json:"iops_write_rate_max_length,omitempty"`
	// the cache mode to use for this disk offering
	CacheMode *string `protobuf:"bytes,21,opt,name=cache_mode,json=cacheMode" json:"cache_mode,omitempty"`
	// state of the disk offering
	DiskOfferingState *string `protobuf:"bytes,22,opt,name=disk_offering_state,json=diskOfferingState" json:"disk_offering_state,omitempty"`
	ResponseType  *string `protobuf:"bytes,23,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDiskOfferingRequest) Reset() {
	*x = UpdateDiskOfferingRequest{}
	mi := &file_cloudstack_management_offering_v1_offering_gen_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDiskOfferingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDiskOfferingRequest) ProtoMessage() {}

func (x *UpdateDiskOfferingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_offering_v1_offering_gen_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDiskOfferingRequest.ProtoReflect.Descriptor instead.
func (*UpdateDiskOfferingRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_offering_v1_offering_gen_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateDiskOfferingRequest) GetDisplayText() string {
	if x != nil && x.DisplayText != nil {
		return *x.DisplayText
	}
	return ""
}

func (x *UpdateDiskOfferingRequest) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *UpdateDiskOfferingRequest) GetDiskOfferingName() string {
	if x != nil && x.DiskOfferingName != nil {
		return *x.DiskOfferingName
	}
	return ""
}

func (x *UpdateDiskOfferingRequest) GetSortKey() int32 {
	if x != nil && x.SortKey != nil {
		return *x.SortKey
	}
	return 0
}

func (x *UpdateDiskOfferingRequest) GetDisplayOffering() bool {
	if x != nil && x.DisplayOffering != nil {
		return *x.DisplayOffering
	}
	return false
}

func (x *UpdateDiskOfferingRequest) GetDomainIds() string {
	if x != nil && x.DomainIds != nil {
		return *x.DomainIds
	}
	return ""
}

func (x *UpdateDiskOfferingRequest) GetZoneIds() string {
	if x != nil && x.ZoneIds != nil {
		return *x.ZoneIds
	}
	return ""
}

func (x *UpdateDiskOfferingRequest) GetTags() string {
	if x != nil && x.Tags != nil {
		return *x.Tags
	}
	return ""
}

func (x *UpdateDiskOfferingRequest) GetBytesReadRate() int64 {
	if x != nil && x.BytesReadRate != nil {
		return *x.BytesReadRate
	}
	return 0
}

func (x *UpdateDiskOfferingRequest) GetBytesReadRateMax() int64 {
	if x != nil && x.BytesReadRateMax != nil {
		return *x.BytesReadRateMax
	}
	return 0
}

func (x *UpdateDiskOfferingRequest) GetBytesReadRateMaxLength() int64 {
	if x != nil && x.BytesReadRateMaxLength != nil {
		return *x.BytesReadRateMaxLength
	}
	return 0
}

func (x *UpdateDiskOfferingRequest) GetBytesWriteRate() int64 {
	if x != nil && x.BytesWriteRate != nil {
		return *x.BytesWriteRate
	}
	return 0
}

func (x *UpdateDiskOfferingRequest) GetBytesWriteRateMax() int64 {
	if x != nil && x.BytesWriteRateMax != nil {
		return *x.BytesWriteRateMax
	}
	return 0
}

func (x *UpdateDiskOfferingRequest) GetBytesWriteRateMaxLength() int64 {
	if x != nil && x.BytesWriteRateMaxLength != nil {
		return *x.BytesWriteRateMaxLength
	}
	return 0
}

func (x *UpdateDiskOfferingRequest) GetIopsReadRate() int64 {
	if x != nil && x.IopsReadRate != nil {
		return *x.IopsReadRate
	}
	return 0
}

func (x *UpdateDiskOfferingRequest) GetIopsReadRateMax() int64 {
	if x != nil && x.IopsReadRateMax != nil {
		return *x.IopsReadRateMax
	}
	return 0
}

func (x *UpdateDiskOfferingRequest) GetIopsReadRateMaxLength() int64 {
	if x != nil && x.IopsReadRateMaxLength != nil {
		return *x.IopsReadRateMaxLength
	}
	return 0
}

func (x *UpdateDiskOfferingRequest) GetIopsWriteRate() int64 {
	if x != nil && x.IopsWriteRate != nil {
		return *x.IopsWriteRate
	}
	return 0
}

func (x *UpdateDiskOfferingRequest) GetIopsWriteRateMax() int64 {
	if x != nil && x.IopsWriteRateMax != nil {
		return *x.IopsWriteRateMax
	}
	return 0
}

func (x *UpdateDiskOfferingRequest) GetIopsWriteRateMaxLength() int64 {
	if x != nil && x.IopsWriteRateMaxLength != nil {
		return *x.IopsWriteRateMaxLength
	}
	return 0
}

func (x *UpdateDiskOfferingRequest) GetCacheMode() string {
	if x != nil && x.CacheMode != nil {
		return *x.CacheMode
	}
	return ""
}

func (x *UpdateDiskOfferingRequest) GetDiskOfferingState() string {
	if x != nil && x.DiskOfferingState != nil {
		return *x.DiskOfferingState
	}
	return ""
}

func (x *UpdateDiskOfferingRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// UpdateDiskOfferingResponse represents the response from updates a disk offering.
type UpdateDiskOfferingResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Result
	Result        *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDiskOfferingResponse) Reset() {
	*x = UpdateDiskOfferingResponse{}
	mi := &file_cloudstack_management_offering_v1_offering_gen_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDiskOfferingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDiskOfferingResponse) ProtoMessage() {}

func (x *UpdateDiskOfferingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_offering_v1_offering_gen_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDiskOfferingResponse.ProtoReflect.Descriptor instead.
func (*UpdateDiskOfferingResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_offering_v1_offering_gen_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateDiskOfferingResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// CreateDiskOfferingRequest represents the parameters for creates a disk offering.
type CreateDiskOfferingRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// size of the disk offering in GB (1GB = 1,073,741,824 bytes)
	DiskSize *int64 `protobuf:"varint,1,opt,name=disk_size,json=diskSize" json:"disk_size,omitempty"`
	// An alternate display text of the disk offering, defaults to 'name'.
	DisplayText *string `protobuf:"bytes,2,opt,name=display_text,json=displayText" json:"display_text,omitempty"`
	// name of the disk offering
	OfferingName *string `protobuf:"bytes,3,opt,name=offering_name,json=offeringName" json:"offering_name,omitempty"`
	// tags for the disk offering
	Tags *string `protobuf:"bytes,4,opt,name=tags" json:"tags,omitempty"`
	// whether disk offering size is custom or not
	Customized *bool `protobuf:"varint,5,opt,name=customized" json:"customized,omitempty"`
	// the ID of the containing domain(s), null for public offerings
	DomainIds []string `protobuf:"bytes,6,rep,name=domain_ids,json=domainIds" json:"domain_ids,omitempty"`
	// the ID of the containing zone(s), null for public offerings
	ZoneIds []string `protobuf:"bytes,7,rep,name=zone_ids,json=zoneIds" json:"zone_ids,omitempty"`
	// the storage type of the disk offering. Values are local and shared.
	StorageType *string `protobuf:"bytes,8,opt,name=storage_type,json=storageType" json:"storage_type,omitempty"`
	// provisioning type used to create volumes. Valid values are thin, sparse, fat.
	ProvisioningType *string `protobuf:"bytes,9,opt,name=provisioning_type,json=provisioningType" json:"provisioning_type,omitempty"`
	// an optional field, whether to display the offering to the end user or not.
	DisplayOffering *bool `protobuf:"varint,10,opt,name=display_offering,json=displayOffering" json:"display_offering,omitempty"`
	// bytes read rate of the disk offering
	BytesReadRate *int64 `protobuf:"varint,11,opt,name=bytes_read_rate,json=bytesReadRate" json:"bytes_read_rate,omitempty"`
	// burst bytes read rate of the disk offering
	BytesReadRateMax *int64 `protobuf:"varint,12,opt,name=bytes_read_rate_max,json=bytesReadRateMax" json:"bytes_read_rate_max,omitempty"`
	// length (in seconds) of the burst
	BytesReadRateMaxLength *int64 `protobuf:"varint,13,opt,name=bytes_read_rate_max_length,json=bytesReadRateMaxLength" json:"bytes_read_rate_max_length,omitempty"`
	// bytes write rate of the disk offering
	BytesWriteRate *int64 `protobuf:"varint,14,opt,name=bytes_write_rate,json=bytesWriteRate" json:"bytes_write_rate,omitempty"`
	// burst bytes write rate of the disk offering
	BytesWriteRateMax *int64 `protobuf:"varint,15,opt,name=bytes_write_rate_max,json=bytesWriteRateMax" json:"bytes_write_rate_max,omitempty"`
	// length (in seconds) of the burst
	BytesWriteRateMaxLength *int64 `protobuf:"varint,16,opt,name=bytes_write_rate_max_length,json=bytesWriteRateMaxLength" json:"bytes_write_rate_max_length,omitempty"`
	// io requests read rate of the disk offering
	IopsReadRate *int64 `protobuf:"varint,17,opt,name=iops_read_rate,json=iopsReadRate" json:"iops_read_rate,omitempty"`
	// burst requests read rate of the disk offering
	IopsReadRateMax *int64 `protobuf:"varint,18,opt,name=iops_read_rate_max,json=iopsReadRateMax" json:"iops_read_rate_max,omitempty"`
	// length (in seconds) of the burst
	IopsReadRateMaxLength *int64 `protobuf:"varint,19,opt,name=iops_read_rate_max_length,json=iopsReadRateMaxLength" json:"iops_read_rate_max_length,omitempty"`
	// io requests write rate of the disk offering
	IopsWriteRate *int64 `protobuf:"varint,20,opt,name=iops_write_rate,json=iopsWriteRate" json:"iops_write_rate,omitempty"`
	// burst io requests write rate of the disk offering
	IopsWriteRateMax *int64 `protobuf:"varint,21,opt,name=iops_write_rate_max,json=iopsWriteRateMax" json:"iops_write_rate_max,omitempty"`
	// length (in seconds) of the burst
	IopsWriteRateMaxLength *int64 `protobuf:"varint,22,opt,name=iops_write_rate_max_length,json=iopsWriteRateMaxLength" json:"iops_write_rate_max_length,omitempty"`
	// whether disk offering iops is custom or not
	CustomizedIops *bool `protobuf:"varint,23,opt,name=customized_iops,json=customizedIops" json:"customized_iops,omitempty"`
	// min iops of the disk offering
	MinIops *int64 `protobuf:"varint,24,opt,name=min_iops,json=minIops" json:"min_iops,omitempty"`
	// max iops of the disk offering
	MaxIops *int64 `protobuf:"varint,25,opt,name=max_iops,json=maxIops" json:"max_iops,omitempty"`
	// Hypervisor snapshot reserve space as a percent of a volume (for managed storage using Xen or VMware)
	HypervisorSnapshotReserve *int32 `protobuf:"varint,26,opt,name=hypervisor_snapshot_reserve,json=hypervisorSnapshotReserve" json:"hypervisor_snapshot_reserve,omitempty"`
	// the cache mode to use for this disk offering. none, writeback or writethrough
	CacheMode *string `protobuf:"bytes,27,opt,name=cache_mode,json=cacheMode" json:"cache_mode,omitempty"`
	// Name of the storage policy defined at vCenter, this is applicable only for VMware
	StoragePolicy *int64 `protobuf:"varint,28,opt,name=storage_policy,json=storagePolicy" json:"storage_policy,omitempty"`
	// To allow or disallow the resize operation on the disks created from this disk offering, if the flag is true then resize is not allowed
	DiskSizeStrictness *bool `protobuf:"varint,29,opt,name=disk_size_strictness,json=diskSizeStrictness" json:"disk_size_strictness,omitempty"`
	// Volumes using this offering should be encrypted
	Encrypt *bool `protobuf:"varint,30,opt,name=encrypt" json:"encrypt,omitempty"`
	// details to specify disk offering parameters
	Details map[string]string `protobuf:"bytes,31,rep,name=details" json:"details,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	ResponseType  *string `protobuf:"bytes,32,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateDiskOfferingRequest) Reset() {
	*x = CreateDiskOfferingRequest{}
	mi := &file_cloudstack_management_offering_v1_offering_gen_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDiskOfferingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDiskOfferingRequest) ProtoMessage() {}

func (x *CreateDiskOfferingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_offering_v1_offering_gen_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDiskOfferingRequest.ProtoReflect.Descriptor instead.
func (*CreateDiskOfferingRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_offering_v1_offering_gen_proto_rawDescGZIP(), []int{6}
}

func (x *CreateDiskOfferingRequest) GetDiskSize() int64 {
	if x != nil && x.DiskSize != nil {
		return *x.DiskSize
	}
	return 0
}

func (x *CreateDiskOfferingRequest) GetDisplayText() string {
	if x != nil && x.DisplayText != nil {
		return *x.DisplayText
	}
	return ""
}

func (x *CreateDiskOfferingRequest) GetOfferingName() string {
	if x != nil && x.OfferingName != nil {
		return *x.OfferingName
	}
	return ""
}

func (x *CreateDiskOfferingRequest) GetTags() string {
	if x != nil && x.Tags != nil {
		return *x.Tags
	}
	return ""
}

func (x *CreateDiskOfferingRequest) GetCustomized() bool {
	if x != nil && x.Customized != nil {
		return *x.Customized
	}
	return false
}

func (x *CreateDiskOfferingRequest) GetDomainIds() []string {
	if x != nil {
		return x.DomainIds
	}
	return nil
}

func (x *CreateDiskOfferingRequest) GetZoneIds() []string {
	if x != nil {
		return x.ZoneIds
	}
	return nil
}

func (x *CreateDiskOfferingRequest) GetStorageType() string {
	if x != nil && x.StorageType != nil {
		return *x.StorageType
	}
	return ""
}

func (x *CreateDiskOfferingRequest) GetProvisioningType() string {
	if x != nil && x.ProvisioningType != nil {
		return *x.ProvisioningType
	}
	return ""
}

func (x *CreateDiskOfferingRequest) GetDisplayOffering() bool {
	if x != nil && x.DisplayOffering != nil {
		return *x.DisplayOffering
	}
	return false
}

func (x *CreateDiskOfferingRequest) GetBytesReadRate() int64 {
	if x != nil && x.BytesReadRate != nil {
		return *x.BytesReadRate
	}
	return 0
}

func (x *CreateDiskOfferingRequest) GetBytesReadRateMax() int64 {
	if x != nil && x.BytesReadRateMax != nil {
		return *x.BytesReadRateMax
	}
	return 0
}

func (x *CreateDiskOfferingRequest) GetBytesReadRateMaxLength() int64 {
	if x != nil && x.BytesReadRateMaxLength != nil {
		return *x.BytesReadRateMaxLength
	}
	return 0
}

func (x *CreateDiskOfferingRequest) GetBytesWriteRate() int64 {
	if x != nil && x.BytesWriteRate != nil {
		return *x.BytesWriteRate
	}
	return 0
}

func (x *CreateDiskOfferingRequest) GetBytesWriteRateMax() int64 {
	if x != nil && x.BytesWriteRateMax != nil {
		return *x.BytesWriteRateMax
	}
	return 0
}

func (x *CreateDiskOfferingRequest) GetBytesWriteRateMaxLength() int64 {
	if x != nil && x.BytesWriteRateMaxLength != nil {
		return *x.BytesWriteRateMaxLength
	}
	return 0
}

func (x *CreateDiskOfferingRequest) GetIopsReadRate() int64 {
	if x != nil && x.IopsReadRate != nil {
		return *x.IopsReadRate
	}
	return 0
}

func (x *CreateDiskOfferingRequest) GetIopsReadRateMax() int64 {
	if x != nil && x.IopsReadRateMax != nil {
		return *x.IopsReadRateMax
	}
	return 0
}

func (x *CreateDiskOfferingRequest) GetIopsReadRateMaxLength() int64 {
	if x != nil && x.IopsReadRateMaxLength != nil {
		return *x.IopsReadRateMaxLength
	}
	return 0
}

func (x *CreateDiskOfferingRequest) GetIopsWriteRate() int64 {
	if x != nil && x.IopsWriteRate != nil {
		return *x.IopsWriteRate
	}
	return 0
}

func (x *CreateDiskOfferingRequest) GetIopsWriteRateMax() int64 {
	if x != nil && x.IopsWriteRateMax != nil {
		return *x.IopsWriteRateMax
	}
	return 0
}

func (x *CreateDiskOfferingRequest) GetIopsWriteRateMaxLength() int64 {
	if x != nil && x.IopsWriteRateMaxLength != nil {
		return *x.IopsWriteRateMaxLength
	}
	return 0
}

func (x *CreateDiskOfferingRequest) GetCustomizedIops() bool {
	if x != nil && x.CustomizedIops != nil {
		return *x.CustomizedIops
	}
	return false
}

func (x *CreateDiskOfferingRequest) GetMinIops() int64 {
	if x != nil && x.MinIops != nil {
		return *x.MinIops
	}
	return 0
}

func (x *CreateDiskOfferingRequest) GetMaxIops() int64 {
	if x != nil && x.MaxIops != nil {
		return *x.MaxIops
	}
	return 0
}

func (x *CreateDiskOfferingRequest) GetHypervisorSnapshotReserve() int32 {
	if x != nil && x.HypervisorSnapshotReserve != nil {
		return *x.HypervisorSnapshotReserve
	}
	return 0
}

func (x *CreateDiskOfferingRequest) GetCacheMode() string {
	if x != nil && x.CacheMode != nil {
		return *x.CacheMode
	}
	return ""
}

func (x *CreateDiskOfferingRequest) GetStoragePolicy() int64 {
	if x != nil && x.StoragePolicy != nil {
		return *x.StoragePolicy
	}
	return 0
}

func (x *CreateDiskOfferingRequest) GetDiskSizeStrictness() bool {
	if x != nil && x.DiskSizeStrictness != nil {
		return *x.DiskSizeStrictness
	}
	return false
}

func (x *CreateDiskOfferingRequest) GetEncrypt() bool {
	if x != nil && x.Encrypt != nil {
		return *x.Encrypt
	}
	return false
}

func (x *CreateDiskOfferingRequest) GetDetails() map[string]string {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *CreateDiskOfferingRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// CreateDiskOfferingResponse represents the response from creates a disk offering.
type CreateDiskOfferingResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Result
	Result        *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateDiskOfferingResponse) Reset() {
	*x = CreateDiskOfferingResponse{}
	mi := &file_cloudstack_management_offering_v1_offering_gen_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDiskOfferingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDiskOfferingResponse) ProtoMessage() {}

func (x *CreateDiskOfferingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_offering_v1_offering_gen_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDiskOfferingResponse.ProtoReflect.Descriptor instead.
func (*CreateDiskOfferingResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_offering_v1_offering_gen_proto_rawDescGZIP(), []int{7}
}

func (x *CreateDiskOfferingResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// CreateServiceOfferingRequest represents the parameters for creates a service offering.
type CreateServiceOfferingRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the CPU number of the service offering
	CpuNumber *int32 `protobuf:"varint,1,opt,name=cpu_number,json=cpuNumber" json:"cpu_number,omitempty"`
	// For VMware and Xen based hypervisors this is the CPU speed of the service offering in MHz.
	// For the KVM hypervisor, the values of the parameters cpuSpeed and cpuNumber will be used to calculate the `shares` value. This value is used by the KVM hypervisor to calculate how much time the VM will have access to the host's CPU. The `shares` value does not have a unit, and its purpose is being a weight value for the host to compare between its guest VMs. For more information, see https://libvirt.org/formatdomain.html#cpu-tuning.
	CpuSpeed *int32 `protobuf:"varint,2,opt,name=cpu_speed,json=cpuSpeed" json:"cpu_speed,omitempty"`
	// The display text of the service offering, defaults to 'name'.
	DisplayText *string `protobuf:"bytes,3,opt,name=display_text,json=displayText" json:"display_text,omitempty"`
	// provisioning type used to create volumes. Valid values are thin, sparse, fat.
	ProvisioningType *string `protobuf:"bytes,4,opt,name=provisioning_type,json=provisioningType" json:"provisioning_type,omitempty"`
	// the total memory of the service offering in MB
	Memory *int32 `protobuf:"varint,5,opt,name=memory" json:"memory,omitempty"`
	// the name of the service offering
	ServiceOfferingName *string `protobuf:"bytes,6,opt,name=service_offering_name,json=serviceOfferingName" json:"service_offering_name,omitempty"`
	// the HA for the service offering
	OfferHa *bool `protobuf:"varint,7,opt,name=offer_ha,json=offerHa" json:"offer_ha,omitempty"`
	// restrict the CPU usage to committed service offering
	LimitCpuUse *bool `protobuf:"varint,8,opt,name=limit_cpu_use,json=limitCpuUse" json:"limit_cpu_use,omitempty"`
	// true if the virtual machine needs to be volatile so that on every reboot of VM, original root disk is dettached then destroyed and a fresh root disk is created and attached to VM
	IsVolatile *bool `protobuf:"varint,9,opt,name=is_volatile,json=isVolatile" json:"is_volatile,omitempty"`
	// the storage type of the service offering. Values are local and shared.
	StorageType *string `protobuf:"bytes,10,opt,name=storage_type,json=storageType" json:"storage_type,omitempty"`
	// the tags for this service offering.
	Tags *string `protobuf:"bytes,11,opt,name=tags" json:"tags,omitempty"`
	// the ID of the containing domain(s), null for public offerings
	DomainIds []string `protobuf:"bytes,12,rep,name=domain_ids,json=domainIds" json:"domain_ids,omitempty"`
	// the ID of the containing zone(s), null for public offerings
	ZoneIds []string `protobuf:"bytes,13,rep,name=zone_ids,json=zoneIds" json:"zone_ids,omitempty"`
	// the host tag for this service offering.
	HostTag *string `protobuf:"bytes,14,opt,name=host_tag,json=hostTag" json:"host_tag,omitempty"`
	// is this a system vm offering
	IsSystem *bool `protobuf:"varint,15,opt,name=is_system,json=isSystem" json:"is_system,omitempty"`
	// the system VM type. Possible types are "domainrouter", "consoleproxy" and "secondarystoragevm".
	SystemVmType *string `protobuf:"bytes,16,opt,name=system_vm_type,json=systemVmType" json:"system_vm_type,omitempty"`
	// data transfer rate in megabits per second allowed. Supported only for non-System offering and system offerings having "domainrouter" systemvmtype
	NetworkRate *int32 `protobuf:"varint,17,opt,name=network_rate,json=networkRate" json:"network_rate,omitempty"`
	// The deployment planner heuristics used to deploy a VM of this offering. If null, value of global config vm.deployment.planner is used
	DeploymentPlanner *string `protobuf:"bytes,18,opt,name=deployment_planner,json=deploymentPlanner" json:"deployment_planner,omitempty"`
	// details for planner, used to store specific parameters
	Details map[string]string `protobuf:"bytes,19,rep,name=details" json:"details,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// the Root disk size in GB.
	RootDiskSize *int64 `protobuf:"varint,20,opt,name=root_disk_size,json=rootDiskSize" json:"root_disk_size,omitempty"`
	// bytes read rate of the disk offering
	BytesReadRate *int64 `protobuf:"varint,21,opt,name=bytes_read_rate,json=bytesReadRate" json:"bytes_read_rate,omitempty"`
	// burst bytes read rate of the disk offering
	BytesReadRateMax *int64 `protobuf:"varint,22,opt,name=bytes_read_rate_max,json=bytesReadRateMax" json:"bytes_read_rate_max,omitempty"`
	// length (in seconds) of the burst
	BytesReadRateMaxLength *int64 `protobuf:"varint,23,opt,name=bytes_read_rate_max_length,json=bytesReadRateMaxLength" json:"bytes_read_rate_max_length,omitempty"`
	// bytes write rate of the disk offering
	BytesWriteRate *int64 `protobuf:"varint,24,opt,name=bytes_write_rate,json=bytesWriteRate" json:"bytes_write_rate,omitempty"`
	// burst bytes write rate of the disk offering
	BytesWriteRateMax *int64 `protobuf:"varint,25,opt,name=bytes_write_rate_max,json=bytesWriteRateMax" json:"bytes_write_rate_max,omitempty"`
	// length (in seconds) of the burst
	BytesWriteRateMaxLength *int64 `protobuf:"varint,26,opt,name=bytes_write_rate_max_length,json=bytesWriteRateMaxLength" json:"bytes_write_rate_max_length,omitempty"`
	// io requests read rate of the disk offering
	IopsReadRate *int64 `protobuf:"varint,27,opt,name=iops_read_rate,json=iopsReadRate" json:"iops_read_rate,omitempty"`
	// burst requests read rate of the disk offering
	IopsReadRateMax *int64 `protobuf:"varint,28,opt,name=iops_read_rate_max,json=iopsReadRateMax" json:"iops_read_rate_max,omitempty"`
	// length (in seconds) of the burst
	IopsReadRateMaxLength *int64 `protobuf:"varint,29,opt,name=iops_read_rate_max_length,json=iopsReadRateMaxLength" json:"iops_read_rate_max_length,omitempty"`
	// io requests write rate of the disk offering
	IopsWriteRate *int64 `protobuf:"varint,30,opt,name=iops_write_rate,json=iopsWriteRate" json:"iops_write_rate,omitempty"`
	// burst io requests write rate of the disk offering
	IopsWriteRateMax *int64 `protobuf:"varint,31,opt,name=iops_write_rate_max,json=iopsWriteRateMax" json:"iops_write_rate_max,omitempty"`
	// length (in seconds) of the burst
	IopsWriteRateMaxLength *int64 `protobuf:"varint,32,opt,name=iops_write_rate_max_length,json=iopsWriteRateMaxLength" json:"iops_write_rate_max_length,omitempty"`
	// whether compute offering iops is custom or not
	CustomizedIops *bool `protobuf:"varint,33,opt,name=customized_iops,json=customizedIops" json:"customized_iops,omitempty"`
	// min iops of the compute offering
	MinIops *int64 `protobuf:"varint,34,opt,name=min_iops,json=minIops" json:"min_iops,omitempty"`
	// max iops of the compute offering
	MaxIops *int64 `protobuf:"varint,35,opt,name=max_iops,json=maxIops" json:"max_iops,omitempty"`
	// Hypervisor snapshot reserve space as a percent of a volume (for managed storage using Xen or VMware)
	HypervisorSnapshotReserve *int32 `protobuf:"varint,36,opt,name=hypervisor_snapshot_reserve,json=hypervisorSnapshotReserve" json:"hypervisor_snapshot_reserve,omitempty"`
	// the cache mode to use for this disk offering. none, writeback or writethrough
	CacheMode *string `protobuf:"bytes,37,opt,name=cache_mode,json=cacheMode" json:"cache_mode,omitempty"`
	// Whether service offering size is custom or not
	Customized *bool `protobuf:"varint,38,opt,name=customized" json:"customized,omitempty"`
	// The maximum number of CPUs to be set with Custom Computer Offering
	MaxCPU *int32 `protobuf:"varint,39,opt,name=max_c_p_u,json=maxCPU" json:"max_c_p_u,omitempty"`
	// The minimum number of CPUs to be set with Custom Computer Offering
	MinCPU *int32 `protobuf:"varint,40,opt,name=min_c_p_u,json=minCPU" json:"min_c_p_u,omitempty"`
	// The maximum memory size of the custom service offering in MB
	MaxMemory *int32 `protobuf:"varint,41,opt,name=max_memory,json=maxMemory" json:"max_memory,omitempty"`
	// The minimum memory size of the custom service offering in MB
	MinMemory *int32 `protobuf:"varint,42,opt,name=min_memory,json=minMemory" json:"min_memory,omitempty"`
	// Name of the storage policy defined at vCenter, this is applicable only for VMware
	StoragePolicy *int64 `protobuf:"varint,43,opt,name=storage_policy,json=storagePolicy" json:"storage_policy,omitempty"`
	// true if virtual machine needs to be dynamically scalable of cpu or memory
	IsDynamicScalingEnabled *bool `protobuf:"varint,44,opt,name=is_dynamic_scaling_enabled,json=isDynamicScalingEnabled" json:"is_dynamic_scaling_enabled,omitempty"`
	// the ID of the disk offering to which service offering should be mapped
	DiskOfferingId *int64 `protobuf:"varint,45,opt,name=disk_offering_id,json=diskOfferingId" json:"disk_offering_id,omitempty"`
	// True/False to indicate the strictness of the disk offering association with the compute offering. When set to true, override of disk offering is not allowed when VM is deployed and change disk offering is not allowed for the ROOT disk after the VM is deployed
	DiskOfferingStrictness *bool `protobuf:"varint,46,opt,name=disk_offering_strictness,json=diskOfferingStrictness" json:"disk_offering_strictness,omitempty"`
	// VMs using this offering require root volume encryption
	EncryptRoot *bool `protobuf:"varint,47,opt,name=encrypt_root,json=encryptRoot" json:"encrypt_root,omitempty"`
	// Whether to cleanup instance and its associated resource from database upon expunge of the instance
	PurgeResources *bool `protobuf:"varint,48,opt,name=purge_resources,json=purgeResources" json:"purge_resources,omitempty"`
	ResponseType  *string `protobuf:"bytes,49,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateServiceOfferingRequest) Reset() {
	*x = CreateServiceOfferingRequest{}
	mi := &file_cloudstack_management_offering_v1_offering_gen_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateServiceOfferingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateServiceOfferingRequest) ProtoMessage() {}

func (x *CreateServiceOfferingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_offering_v1_offering_gen_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateServiceOfferingRequest.ProtoReflect.Descriptor instead.
func (*CreateServiceOfferingRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_offering_v1_offering_gen_proto_rawDescGZIP(), []int{8}
}

func (x *CreateServiceOfferingRequest) GetCpuNumber() int32 {
	if x != nil && x.CpuNumber != nil {
		return *x.CpuNumber
	}
	return 0
}

func (x *CreateServiceOfferingRequest) GetCpuSpeed() int32 {
	if x != nil && x.CpuSpeed != nil {
		return *x.CpuSpeed
	}
	return 0
}

func (x *CreateServiceOfferingRequest) GetDisplayText() string {
	if x != nil && x.DisplayText != nil {
		return *x.DisplayText
	}
	return ""
}

func (x *CreateServiceOfferingRequest) GetProvisioningType() string {
	if x != nil && x.ProvisioningType != nil {
		return *x.ProvisioningType
	}
	return ""
}

func (x *CreateServiceOfferingRequest) GetMemory() int32 {
	if x != nil && x.Memory != nil {
		return *x.Memory
	}
	return 0
}

func (x *CreateServiceOfferingRequest) GetServiceOfferingName() string {
	if x != nil && x.ServiceOfferingName != nil {
		return *x.ServiceOfferingName
	}
	return ""
}

func (x *CreateServiceOfferingRequest) GetOfferHa() bool {
	if x != nil && x.OfferHa != nil {
		return *x.OfferHa
	}
	return false
}

func (x *CreateServiceOfferingRequest) GetLimitCpuUse() bool {
	if x != nil && x.LimitCpuUse != nil {
		return *x.LimitCpuUse
	}
	return false
}

func (x *CreateServiceOfferingRequest) GetIsVolatile() bool {
	if x != nil && x.IsVolatile != nil {
		return *x.IsVolatile
	}
	return false
}

func (x *CreateServiceOfferingRequest) GetStorageType() string {
	if x != nil && x.StorageType != nil {
		return *x.StorageType
	}
	return ""
}

func (x *CreateServiceOfferingRequest) GetTags() string {
	if x != nil && x.Tags != nil {
		return *x.Tags
	}
	return ""
}

func (x *CreateServiceOfferingRequest) GetDomainIds() []string {
	if x != nil {
		return x.DomainIds
	}
	return nil
}

func (x *CreateServiceOfferingRequest) GetZoneIds() []string {
	if x != nil {
		return x.ZoneIds
	}
	return nil
}

func (x *CreateServiceOfferingRequest) GetHostTag() string {
	if x != nil && x.HostTag != nil {
		return *x.HostTag
	}
	return ""
}

func (x *CreateServiceOfferingRequest) GetIsSystem() bool {
	if x != nil && x.IsSystem != nil {
		return *x.IsSystem
	}
	return false
}

func (x *CreateServiceOfferingRequest) GetSystemVmType() string {
	if x != nil && x.SystemVmType != nil {
		return *x.SystemVmType
	}
	return ""
}

func (x *CreateServiceOfferingRequest) GetNetworkRate() int32 {
	if x != nil && x.NetworkRate != nil {
		return *x.NetworkRate
	}
	return 0
}

func (x *CreateServiceOfferingRequest) GetDeploymentPlanner() string {
	if x != nil && x.DeploymentPlanner != nil {
		return *x.DeploymentPlanner
	}
	return ""
}

func (x *CreateServiceOfferingRequest) GetDetails() map[string]string {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *CreateServiceOfferingRequest) GetRootDiskSize() int64 {
	if x != nil && x.RootDiskSize != nil {
		return *x.RootDiskSize
	}
	return 0
}

func (x *CreateServiceOfferingRequest) GetBytesReadRate() int64 {
	if x != nil && x.BytesReadRate != nil {
		return *x.BytesReadRate
	}
	return 0
}

func (x *CreateServiceOfferingRequest) GetBytesReadRateMax() int64 {
	if x != nil && x.BytesReadRateMax != nil {
		return *x.BytesReadRateMax
	}
	return 0
}

func (x *CreateServiceOfferingRequest) GetBytesReadRateMaxLength() int64 {
	if x != nil && x.BytesReadRateMaxLength != nil {
		return *x.BytesReadRateMaxLength
	}
	return 0
}

func (x *CreateServiceOfferingRequest) GetBytesWriteRate() int64 {
	if x != nil && x.BytesWriteRate != nil {
		return *x.BytesWriteRate
	}
	return 0
}

func (x *CreateServiceOfferingRequest) GetBytesWriteRateMax() int64 {
	if x != nil && x.BytesWriteRateMax != nil {
		return *x.BytesWriteRateMax
	}
	return 0
}

func (x *CreateServiceOfferingRequest) GetBytesWriteRateMaxLength() int64 {
	if x != nil && x.BytesWriteRateMaxLength != nil {
		return *x.BytesWriteRateMaxLength
	}
	return 0
}

func (x *CreateServiceOfferingRequest) GetIopsReadRate() int64 {
	if x != nil && x.IopsReadRate != nil {
		return *x.IopsReadRate
	}
	return 0
}

func (x *CreateServiceOfferingRequest) GetIopsReadRateMax() int64 {
	if x != nil && x.IopsReadRateMax != nil {
		return *x.IopsReadRateMax
	}
	return 0
}

func (x *CreateServiceOfferingRequest) GetIopsReadRateMaxLength() int64 {
	if x != nil && x.IopsReadRateMaxLength != nil {
		return *x.IopsReadRateMaxLength
	}
	return 0
}

func (x *CreateServiceOfferingRequest) GetIopsWriteRate() int64 {
	if x != nil && x.IopsWriteRate != nil {
		return *x.IopsWriteRate
	}
	return 0
}

func (x *CreateServiceOfferingRequest) GetIopsWriteRateMax() int64 {
	if x != nil && x.IopsWriteRateMax != nil {
		return *x.IopsWriteRateMax
	}
	return 0
}

func (x *CreateServiceOfferingRequest) GetIopsWriteRateMaxLength() int64 {
	if x != nil && x.IopsWriteRateMaxLength != nil {
		return *x.IopsWriteRateMaxLength
	}
	return 0
}

func (x *CreateServiceOfferingRequest) GetCustomizedIops() bool {
	if x != nil && x.CustomizedIops != nil {
		return *x.CustomizedIops
	}
	return false
}

func (x *CreateServiceOfferingRequest) GetMinIops() int64 {
	if x != nil && x.MinIops != nil {
		return *x.MinIops
	}
	return 0
}

func (x *CreateServiceOfferingRequest) GetMaxIops() int64 {
	if x != nil && x.MaxIops != nil {
		return *x.MaxIops
	}
	return 0
}

func (x *CreateServiceOfferingRequest) GetHypervisorSnapshotReserve() int32 {
	if x != nil && x.HypervisorSnapshotReserve != nil {
		return *x.HypervisorSnapshotReserve
	}
	return 0
}

func (x *CreateServiceOfferingRequest) GetCacheMode() string {
	if x != nil && x.CacheMode != nil {
		return *x.CacheMode
	}
	return ""
}

func (x *CreateServiceOfferingRequest) GetCustomized() bool {
	if x != nil && x.Customized != nil {
		return *x.Customized
	}
	return false
}

func (x *CreateServiceOfferingRequest) GetMaxCPU() int32 {
	if x != nil && x.MaxCPU != nil {
		return *x.MaxCPU
	}
	return 0
}

func (x *CreateServiceOfferingRequest) GetMinCPU() int32 {
	if x != nil && x.MinCPU != nil {
		return *x.MinCPU
	}
	return 0
}

func (x *CreateServiceOfferingRequest) GetMaxMemory() int32 {
	if x != nil && x.MaxMemory != nil {
		return *x.MaxMemory
	}
	return 0
}

func (x *CreateServiceOfferingRequest) GetMinMemory() int32 {
	if x != nil && x.MinMemory != nil {
		return *x.MinMemory
	}
	return 0
}

func (x *CreateServiceOfferingRequest) GetStoragePolicy() int64 {
	if x != nil && x.StoragePolicy != nil {
		return *x.StoragePolicy
	}
	return 0
}

func (x *CreateServiceOfferingRequest) GetIsDynamicScalingEnabled() bool {
	if x != nil && x.IsDynamicScalingEnabled != nil {
		return *x.IsDynamicScalingEnabled
	}
	return false
}

func (x *CreateServiceOfferingRequest) GetDiskOfferingId() int64 {
	if x != nil && x.DiskOfferingId != nil {
		return *x.DiskOfferingId
	}
	return 0
}

func (x *CreateServiceOfferingRequest) GetDiskOfferingStrictness() bool {
	if x != nil && x.DiskOfferingStrictness != nil {
		return *x.DiskOfferingStrictness
	}
	return false
}

func (x *CreateServiceOfferingRequest) GetEncryptRoot() bool {
	if x != nil && x.EncryptRoot != nil {
		return *x.EncryptRoot
	}
	return false
}

func (x *CreateServiceOfferingRequest) GetPurgeResources() bool {
	if x != nil && x.PurgeResources != nil {
		return *x.PurgeResources
	}
	return false
}

func (x *CreateServiceOfferingRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// CreateServiceOfferingResponse represents the response from creates a service offering.
type CreateServiceOfferingResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Result
	Result        *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateServiceOfferingResponse) Reset() {
	*x = CreateServiceOfferingResponse{}
	mi := &file_cloudstack_management_offering_v1_offering_gen_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateServiceOfferingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateServiceOfferingResponse) ProtoMessage() {}

func (x *CreateServiceOfferingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_offering_v1_offering_gen_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateServiceOfferingResponse.ProtoReflect.Descriptor instead.
func (*CreateServiceOfferingResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_offering_v1_offering_gen_proto_rawDescGZIP(), []int{9}
}

func (x *CreateServiceOfferingResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// ListDiskOfferingsRequest represents the parameters for lists all available disk offerings.
type ListDiskOfferingsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the disk offering
	Id *int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// name of the disk offering
	DiskOfferingName *string `protobuf:"bytes,2,opt,name=disk_offering_name,json=diskOfferingName" json:"disk_offering_name,omitempty"`
	// id of zone disk offering is associated with
	ZoneId *int64 `protobuf:"varint,3,opt,name=zone_id,json=zoneId" json:"zone_id,omitempty"`
	// The ID of the volume, tags of the volume are used to filter the offerings
	VolumeId *int64 `protobuf:"varint,4,opt,name=volume_id,json=volumeId" json:"volume_id,omitempty"`
	// The ID of the storage pool, tags of the storage pool are used to filter the offerings
	StoragePoolId *int64 `protobuf:"varint,5,opt,name=storage_pool_id,json=storagePoolId" json:"storage_pool_id,omitempty"`
	// listed offerings support disk encryption
	Encrypt *bool `protobuf:"varint,6,opt,name=encrypt" json:"encrypt,omitempty"`
	// the storage type of the service offering. Values are local and shared.
	StorageType *string `protobuf:"bytes,7,opt,name=storage_type,json=storageType" json:"storage_type,omitempty"`
	// Filter by state of the disk offering. Defaults to 'Active'. If set to 'all' shows both Active & Inactive offerings.
	DiskOfferingState *string `protobuf:"bytes,8,opt,name=disk_offering_state,json=diskOfferingState" json:"disk_offering_state,omitempty"`
	// The ID of a virtual machine. Pass this in if you want to see the suitable disk offering that can be used to create and add a disk to the virtual machine. Suitability is returned with suitableforvirtualmachine flag in the response
	VirtualMachineId *int64 `protobuf:"varint,9,opt,name=virtual_machine_id,json=virtualMachineId" json:"virtual_machine_id,omitempty"`
	// list objects by project; if projectid=-1 lists All VMs
	ProjectId *int64 `protobuf:"varint,10,opt,name=project_id,json=projectId" json:"project_id,omitempty"`
	// list resources by account. Must be used with the domainId parameter.
	AccountName *string `protobuf:"bytes,11,opt,name=account_name,json=accountName" json:"account_name,omitempty"`
	// If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false. Resources dedicated to a project are listed only if using the projectid parameter.
	ListAll *bool `protobuf:"varint,12,opt,name=list_all,json=listAll" json:"list_all,omitempty"`
	// list only resources belonging to the domain specified
	DomainId *int64 `protobuf:"varint,13,opt,name=domain_id,json=domainId" json:"domain_id,omitempty"`
	// defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.
	Recursive *bool `protobuf:"varint,14,opt,name=recursive" json:"recursive,omitempty"`
	// List by keyword
	Keyword *string `protobuf:"bytes,15,opt,name=keyword" json:"keyword,omitempty"`
	Page *int32 `protobuf:"varint,16,opt,name=page" json:"page,omitempty"`
	PageSize *int32 `protobuf:"varint,17,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	ResponseType  *string `protobuf:"bytes,18,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDiskOfferingsRequest) Reset() {
	*x = ListDiskOfferingsRequest{}
	mi := &file_cloudstack_management_offering_v1_offering_gen_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDiskOfferingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDiskOfferingsRequest) ProtoMessage() {}

func (x *ListDiskOfferingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_offering_v1_offering_gen_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDiskOfferingsRequest.ProtoReflect.Descriptor instead.
func (*ListDiskOfferingsRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_offering_v1_offering_gen_proto_rawDescGZIP(), []int{10}
}

func (x *ListDiskOfferingsRequest) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *ListDiskOfferingsRequest) GetDiskOfferingName() string {
	if x != nil && x.DiskOfferingName != nil {
		return *x.DiskOfferingName
	}
	return ""
}

func (x *ListDiskOfferingsRequest) GetZoneId() int64 {
	if x != nil && x.ZoneId != nil {
		return *x.ZoneId
	}
	return 0
}

func (x *ListDiskOfferingsRequest) GetVolumeId() int64 {
	if x != nil && x.VolumeId != nil {
		return *x.VolumeId
	}
	return 0
}

func (x *ListDiskOfferingsRequest) GetStoragePoolId() int64 {
	if x != nil && x.StoragePoolId != nil {
		return *x.StoragePoolId
	}
	return 0
}

func (x *ListDiskOfferingsRequest) GetEncrypt() bool {
	if x != nil && x.Encrypt != nil {
		return *x.Encrypt
	}
	return false
}

func (x *ListDiskOfferingsRequest) GetStorageType() string {
	if x != nil && x.StorageType != nil {
		return *x.StorageType
	}
	return ""
}

func (x *ListDiskOfferingsRequest) GetDiskOfferingState() string {
	if x != nil && x.DiskOfferingState != nil {
		return *x.DiskOfferingState
	}
	return ""
}

func (x *ListDiskOfferingsRequest) GetVirtualMachineId() int64 {
	if x != nil && x.VirtualMachineId != nil {
		return *x.VirtualMachineId
	}
	return 0
}

func (x *ListDiskOfferingsRequest) GetProjectId() int64 {
	if x != nil && x.ProjectId != nil {
		return *x.ProjectId
	}
	return 0
}

func (x *ListDiskOfferingsRequest) GetAccountName() string {
	if x != nil && x.AccountName != nil {
		return *x.AccountName
	}
	return ""
}

func (x *ListDiskOfferingsRequest) GetListAll() bool {
	if x != nil && x.ListAll != nil {
		return *x.ListAll
	}
	return false
}

func (x *ListDiskOfferingsRequest) GetDomainId() int64 {
	if x != nil && x.DomainId != nil {
		return *x.DomainId
	}
	return 0
}

func (x *ListDiskOfferingsRequest) GetRecursive() bool {
	if x != nil && x.Recursive != nil {
		return *x.Recursive
	}
	return false
}

func (x *ListDiskOfferingsRequest) GetKeyword() string {
	if x != nil && x.Keyword != nil {
		return *x.Keyword
	}
	return ""
}

func (x *ListDiskOfferingsRequest) GetPage() int32 {
	if x != nil && x.Page != nil {
		return *x.Page
	}
	return 0
}

func (x *ListDiskOfferingsRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListDiskOfferingsRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// ListDiskOfferingsResponse represents the response from lists all available disk offerings.
type ListDiskOfferingsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The list of DiskOfferings
	Items []*DiskOffering `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	// The total count of DiskOfferings
	TotalCount    *int32 `protobuf:"varint,2,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDiskOfferingsResponse) Reset() {
	*x = ListDiskOfferingsResponse{}
	mi := &file_cloudstack_management_offering_v1_offering_gen_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDiskOfferingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDiskOfferingsResponse) ProtoMessage() {}

func (x *ListDiskOfferingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_offering_v1_offering_gen_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDiskOfferingsResponse.ProtoReflect.Descriptor instead.
func (*ListDiskOfferingsResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_offering_v1_offering_gen_proto_rawDescGZIP(), []int{11}
}

func (x *ListDiskOfferingsResponse) GetItems() []*DiskOffering {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListDiskOfferingsResponse) GetTotalCount() int32 {
	if x != nil && x.TotalCount != nil {
		return *x.TotalCount
	}
	return 0
}

// DeleteDiskOfferingRequest represents the parameters for updates a disk offering.
type DeleteDiskOfferingRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the disk offering
	Id *int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	ResponseType  *string `protobuf:"bytes,2,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteDiskOfferingRequest) Reset() {
	*x = DeleteDiskOfferingRequest{}
	mi := &file_cloudstack_management_offering_v1_offering_gen_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDiskOfferingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDiskOfferingRequest) ProtoMessage() {}

func (x *DeleteDiskOfferingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_offering_v1_offering_gen_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDiskOfferingRequest.ProtoReflect.Descriptor instead.
func (*DeleteDiskOfferingRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_offering_v1_offering_gen_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteDiskOfferingRequest) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *DeleteDiskOfferingRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// DeleteDiskOfferingResponse represents the response from updates a disk offering.
type DeleteDiskOfferingResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Result
	Result        *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteDiskOfferingResponse) Reset() {
	*x = DeleteDiskOfferingResponse{}
	mi := &file_cloudstack_management_offering_v1_offering_gen_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDiskOfferingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDiskOfferingResponse) ProtoMessage() {}

func (x *DeleteDiskOfferingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_offering_v1_offering_gen_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDiskOfferingResponse.ProtoReflect.Descriptor instead.
func (*DeleteDiskOfferingResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_offering_v1_offering_gen_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteDiskOfferingResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// ListServiceOfferingsRequest represents the parameters for lists all available service offerings.
type ListServiceOfferingsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the service offering
	Id *int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// name of the service offering
	ServiceOfferingName *string `protobuf:"bytes,2,opt,name=service_offering_name,json=serviceOfferingName" json:"service_offering_name,omitempty"`
	// the ID of the virtual machine. Pass this in if you want to see the available service offering that a virtual machine can be changed to.
	VirtualMachineId *int64 `protobuf:"varint,3,opt,name=virtual_machine_id,json=virtualMachineId" json:"virtual_machine_id,omitempty"`
	// is this a system vm offering
	IsSystem *bool `protobuf:"varint,4,opt,name=is_system,json=isSystem" json:"is_system,omitempty"`
	// the system VM type. Possible types are "consoleproxy", "secondarystoragevm" or "domainrouter".
	SystemVmType *string `protobuf:"bytes,5,opt,name=system_vm_type,json=systemVmType" json:"system_vm_type,omitempty"`
	// id of zone disk offering is associated with
	ZoneId *int64 `protobuf:"varint,6,opt,name=zone_id,json=zoneId" json:"zone_id,omitempty"`
	// the CPU number that listed offerings must support
	CpuNumber *int32 `protobuf:"varint,7,opt,name=cpu_number,json=cpuNumber" json:"cpu_number,omitempty"`
	// the RAM memory that listed offering must support
	Memory *int32 `protobuf:"varint,8,opt,name=memory" json:"memory,omitempty"`
	// the CPU speed that listed offerings must support
	CpuSpeed *int32 `protobuf:"varint,9,opt,name=cpu_speed,json=cpuSpeed" json:"cpu_speed,omitempty"`
	// listed offerings support root disk encryption
	EncryptRoot *bool `protobuf:"varint,10,opt,name=encrypt_root,json=encryptRoot" json:"encrypt_root,omitempty"`
	// the storage type of the service offering. Values are local and shared.
	StorageType *string `protobuf:"bytes,11,opt,name=storage_type,json=storageType" json:"storage_type,omitempty"`
	// Filter by state of the service offering. Defaults to 'Active'. If set to 'all' shows both Active & Inactive offerings.
	ServiceOfferingState *string `protobuf:"bytes,12,opt,name=service_offering_state,json=serviceOfferingState" json:"service_offering_state,omitempty"`
	// The ID of the template that listed offerings must support
	TemplateId *int64 `protobuf:"varint,13,opt,name=template_id,json=templateId" json:"template_id,omitempty"`
	// list objects by project; if projectid=-1 lists All VMs
	ProjectId *int64 `protobuf:"varint,14,opt,name=project_id,json=projectId" json:"project_id,omitempty"`
	// list resources by account. Must be used with the domainId parameter.
	AccountName *string `protobuf:"bytes,15,opt,name=account_name,json=accountName" json:"account_name,omitempty"`
	// If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false. Resources dedicated to a project are listed only if using the projectid parameter.
	ListAll *bool `protobuf:"varint,16,opt,name=list_all,json=listAll" json:"list_all,omitempty"`
	// list only resources belonging to the domain specified
	DomainId *int64 `protobuf:"varint,17,opt,name=domain_id,json=domainId" json:"domain_id,omitempty"`
	// defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.
	Recursive *bool `protobuf:"varint,18,opt,name=recursive" json:"recursive,omitempty"`
	// List by keyword
	Keyword *string `protobuf:"bytes,19,opt,name=keyword" json:"keyword,omitempty"`
	Page *int32 `protobuf:"varint,20,opt,name=page" json:"page,omitempty"`
	PageSize *int32 `protobuf:"varint,21,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	ResponseType  *string `protobuf:"bytes,22,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListServiceOfferingsRequest) Reset() {
	*x = ListServiceOfferingsRequest{}
	mi := &file_cloudstack_management_offering_v1_offering_gen_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListServiceOfferingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServiceOfferingsRequest) ProtoMessage() {}

func (x *ListServiceOfferingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_offering_v1_offering_gen_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServiceOfferingsRequest.ProtoReflect.Descriptor instead.
func (*ListServiceOfferingsRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_offering_v1_offering_gen_proto_rawDescGZIP(), []int{14}
}

func (x *ListServiceOfferingsRequest) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *ListServiceOfferingsRequest) GetServiceOfferingName() string {
	if x != nil && x.ServiceOfferingName != nil {
		return *x.ServiceOfferingName
	}
	return ""
}

func (x *ListServiceOfferingsRequest) GetVirtualMachineId() int64 {
	if x != nil && x.VirtualMachineId != nil {
		return *x.VirtualMachineId
	}
	return 0
}

func (x *ListServiceOfferingsRequest) GetIsSystem() bool {
	if x != nil && x.IsSystem != nil {
		return *x.IsSystem
	}
	return false
}

func (x *ListServiceOfferingsRequest) GetSystemVmType() string {
	if x != nil && x.SystemVmType != nil {
		return *x.SystemVmType
	}
	return ""
}

func (x *ListServiceOfferingsRequest) GetZoneId() int64 {
	if x != nil && x.ZoneId != nil {
		return *x.ZoneId
	}
	return 0
}

func (x *ListServiceOfferingsRequest) GetCpuNumber() int32 {
	if x != nil && x.CpuNumber != nil {
		return *x.CpuNumber
	}
	return 0
}

func (x *ListServiceOfferingsRequest) GetMemory() int32 {
	if x != nil && x.Memory != nil {
		return *x.Memory
	}
	return 0
}

func (x *ListServiceOfferingsRequest) GetCpuSpeed() int32 {
	if x != nil && x.CpuSpeed != nil {
		return *x.CpuSpeed
	}
	return 0
}

func (x *ListServiceOfferingsRequest) GetEncryptRoot() bool {
	if x != nil && x.EncryptRoot != nil {
		return *x.EncryptRoot
	}
	return false
}

func (x *ListServiceOfferingsRequest) GetStorageType() string {
	if x != nil && x.StorageType != nil {
		return *x.StorageType
	}
	return ""
}

func (x *ListServiceOfferingsRequest) GetServiceOfferingState() string {
	if x != nil && x.ServiceOfferingState != nil {
		return *x.ServiceOfferingState
	}
	return ""
}

func (x *ListServiceOfferingsRequest) GetTemplateId() int64 {
	if x != nil && x.TemplateId != nil {
		return *x.TemplateId
	}
	return 0
}

func (x *ListServiceOfferingsRequest) GetProjectId() int64 {
	if x != nil && x.ProjectId != nil {
		return *x.ProjectId
	}
	return 0
}

func (x *ListServiceOfferingsRequest) GetAccountName() string {
	if x != nil && x.AccountName != nil {
		return *x.AccountName
	}
	return ""
}

func (x *ListServiceOfferingsRequest) GetListAll() bool {
	if x != nil && x.ListAll != nil {
		return *x.ListAll
	}
	return false
}

func (x *ListServiceOfferingsRequest) GetDomainId() int64 {
	if x != nil && x.DomainId != nil {
		return *x.DomainId
	}
	return 0
}

func (x *ListServiceOfferingsRequest) GetRecursive() bool {
	if x != nil && x.Recursive != nil {
		return *x.Recursive
	}
	return false
}

func (x *ListServiceOfferingsRequest) GetKeyword() string {
	if x != nil && x.Keyword != nil {
		return *x.Keyword
	}
	return ""
}

func (x *ListServiceOfferingsRequest) GetPage() int32 {
	if x != nil && x.Page != nil {
		return *x.Page
	}
	return 0
}

func (x *ListServiceOfferingsRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListServiceOfferingsRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// ListServiceOfferingsResponse represents the response from lists all available service offerings.
type ListServiceOfferingsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The list of ServiceOfferings
	Items []*ServiceOffering `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	// The total count of ServiceOfferings
	TotalCount    *int32 `protobuf:"varint,2,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListServiceOfferingsResponse) Reset() {
	*x = ListServiceOfferingsResponse{}
	mi := &file_cloudstack_management_offering_v1_offering_gen_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListServiceOfferingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServiceOfferingsResponse) ProtoMessage() {}

func (x *ListServiceOfferingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_offering_v1_offering_gen_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServiceOfferingsResponse.ProtoReflect.Descriptor instead.
func (*ListServiceOfferingsResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_offering_v1_offering_gen_proto_rawDescGZIP(), []int{15}
}

func (x *ListServiceOfferingsResponse) GetItems() []*ServiceOffering {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListServiceOfferingsResponse) GetTotalCount() int32 {
	if x != nil && x.TotalCount != nil {
		return *x.TotalCount
	}
	return 0
}

// UpdateServiceOfferingRequest represents the parameters for updates a service offering.
type UpdateServiceOfferingRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the ID of the service offering to be updated
	Id *int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// the display text of the service offering to be updated
	DisplayText *string `protobuf:"bytes,2,opt,name=display_text,json=displayText" json:"display_text,omitempty"`
	// the name of the service offering to be updated
	ServiceOfferingName *string `protobuf:"bytes,3,opt,name=service_offering_name,json=serviceOfferingName" json:"service_offering_name,omitempty"`
	// sort key of the service offering, integer
	SortKey *int32 `protobuf:"varint,4,opt,name=sort_key,json=sortKey" json:"sort_key,omitempty"`
	// the ID of the containing domain(s) as comma separated string, public for public offerings
	DomainIds *string `protobuf:"bytes,5,opt,name=domain_ids,json=domainIds" json:"domain_ids,omitempty"`
	// the ID of the containing zone(s) as comma separated string, all for all zones offerings
	ZoneIds *string `protobuf:"bytes,6,opt,name=zone_ids,json=zoneIds" json:"zone_ids,omitempty"`
	// comma-separated list of tags for the service offering, tags should match with existing storage pool tags
	StorageTags *string `protobuf:"bytes,7,opt,name=storage_tags,json=storageTags" json:"storage_tags,omitempty"`
	// the host tag for this service offering.
	HostTags *string `protobuf:"bytes,8,opt,name=host_tags,json=hostTags" json:"host_tags,omitempty"`
	// state of the service offering
	ServiceOfferingState *string `protobuf:"bytes,9,opt,name=service_offering_state,json=serviceOfferingState" json:"service_offering_state,omitempty"`
	// Whether to cleanup VM and its associated resource upon expunge
	PurgeResources *bool `protobuf:"varint,10,opt,name=purge_resources,json=purgeResources" json:"purge_resources,omitempty"`
	ResponseType  *string `protobuf:"bytes,11,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateServiceOfferingRequest) Reset() {
	*x = UpdateServiceOfferingRequest{}
	mi := &file_cloudstack_management_offering_v1_offering_gen_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateServiceOfferingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServiceOfferingRequest) ProtoMessage() {}

func (x *UpdateServiceOfferingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_offering_v1_offering_gen_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServiceOfferingRequest.ProtoReflect.Descriptor instead.
func (*UpdateServiceOfferingRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_offering_v1_offering_gen_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateServiceOfferingRequest) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *UpdateServiceOfferingRequest) GetDisplayText() string {
	if x != nil && x.DisplayText != nil {
		return *x.DisplayText
	}
	return ""
}

func (x *UpdateServiceOfferingRequest) GetServiceOfferingName() string {
	if x != nil && x.ServiceOfferingName != nil {
		return *x.ServiceOfferingName
	}
	return ""
}

func (x *UpdateServiceOfferingRequest) GetSortKey() int32 {
	if x != nil && x.SortKey != nil {
		return *x.SortKey
	}
	return 0
}

func (x *UpdateServiceOfferingRequest) GetDomainIds() string {
	if x != nil && x.DomainIds != nil {
		return *x.DomainIds
	}
	return ""
}

func (x *UpdateServiceOfferingRequest) GetZoneIds() string {
	if x != nil && x.ZoneIds != nil {
		return *x.ZoneIds
	}
	return ""
}

func (x *UpdateServiceOfferingRequest) GetStorageTags() string {
	if x != nil && x.StorageTags != nil {
		return *x.StorageTags
	}
	return ""
}

func (x *UpdateServiceOfferingRequest) GetHostTags() string {
	if x != nil && x.HostTags != nil {
		return *x.HostTags
	}
	return ""
}

func (x *UpdateServiceOfferingRequest) GetServiceOfferingState() string {
	if x != nil && x.ServiceOfferingState != nil {
		return *x.ServiceOfferingState
	}
	return ""
}

func (x *UpdateServiceOfferingRequest) GetPurgeResources() bool {
	if x != nil && x.PurgeResources != nil {
		return *x.PurgeResources
	}
	return false
}

func (x *UpdateServiceOfferingRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// UpdateServiceOfferingResponse represents the response from updates a service offering.
type UpdateServiceOfferingResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Result
	Result        *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateServiceOfferingResponse) Reset() {
	*x = UpdateServiceOfferingResponse{}
	mi := &file_cloudstack_management_offering_v1_offering_gen_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateServiceOfferingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServiceOfferingResponse) ProtoMessage() {}

func (x *UpdateServiceOfferingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_offering_v1_offering_gen_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServiceOfferingResponse.ProtoReflect.Descriptor instead.
func (*UpdateServiceOfferingResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_offering_v1_offering_gen_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateServiceOfferingResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// DiskOffering represents a DiskOffering Item
type DiskOffering struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the DiskOffering
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// The name of the DiskOffering
	Name *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// The display name of the DiskOffering
	DisplayName *string `protobuf:"bytes,3,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	// The description of the DiskOffering
	Description *string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	// The date this entity was created
	Created       *string `protobuf:"bytes,5,opt,name=created" json:"created,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DiskOffering) Reset() {
	*x = DiskOffering{}
	mi := &file_cloudstack_management_offering_v1_offering_gen_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiskOffering) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskOffering) ProtoMessage() {}

func (x *DiskOffering) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_offering_v1_offering_gen_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiskOffering.ProtoReflect.Descriptor instead.
func (*DiskOffering) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_offering_v1_offering_gen_proto_rawDescGZIP(), []int{18}
}

func (x *DiskOffering) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *DiskOffering) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *DiskOffering) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *DiskOffering) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *DiskOffering) GetCreated() string {
	if x != nil && x.Created != nil {
		return *x.Created
	}
	return ""
}

// ServiceOffering represents a ServiceOffering Item
type ServiceOffering struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the ServiceOffering
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// The name of the ServiceOffering
	Name *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// The display name of the ServiceOffering
	DisplayName *string `protobuf:"bytes,3,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	// The description of the ServiceOffering
	Description *string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	// The date this entity was created
	Created       *string `protobuf:"bytes,5,opt,name=created" json:"created,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServiceOffering) Reset() {
	*x = ServiceOffering{}
	mi := &file_cloudstack_management_offering_v1_offering_gen_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceOffering) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceOffering) ProtoMessage() {}

func (x *ServiceOffering) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_offering_v1_offering_gen_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceOffering.ProtoReflect.Descriptor instead.
func (*ServiceOffering) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_offering_v1_offering_gen_proto_rawDescGZIP(), []int{19}
}

func (x *ServiceOffering) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *ServiceOffering) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ServiceOffering) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *ServiceOffering) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *ServiceOffering) GetCreated() string {
	if x != nil && x.Created != nil {
		return *x.Created
	}
	return ""
}

// Success represents a Success Operation Response
type Success struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// true if operation is executed successfully
	Success *bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	// any text associated with the success or failure
	DisplayText   *string `protobuf:"bytes,2,opt,name=display_text,json=displayText" json:"display_text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Success) Reset() {
	*x = Success{}
	mi := &file_cloudstack_management_offering_v1_offering_gen_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Success) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Success) ProtoMessage() {}

func (x *Success) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_offering_v1_offering_gen_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Success.ProtoReflect.Descriptor instead.
func (*Success) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_offering_v1_offering_gen_proto_rawDescGZIP(), []int{20}
}

func (x *Success) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *Success) GetDisplayText() string {
	if x != nil && x.DisplayText != nil {
		return *x.DisplayText
	}
	return ""
}

// Item represents a generic item in a list response
type Item struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the item
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// The name of the item
	Name *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// The display name of the item
	DisplayName *string `protobuf:"bytes,3,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	// The description of the item
	Description *string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	// The account ID the item belongs to
	AccountId *string `protobuf:"bytes,5,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	// The domain ID the item belongs to
	DomainId *string `protobuf:"bytes,6,opt,name=domain_id,json=domainId" json:"domain_id,omitempty"`
	// The domain name the item belongs to
	Domain *string `protobuf:"bytes,7,opt,name=domain" json:"domain,omitempty"`
	// The project ID the item belongs to
	ProjectId *string `protobuf:"bytes,8,opt,name=project_id,json=projectId" json:"project_id,omitempty"`
	// The project name the item belongs to
	Project *string `protobuf:"bytes,9,opt,name=project" json:"project,omitempty"`
	// The date the item was created
	Created *string `protobuf:"bytes,10,opt,name=created" json:"created,omitempty"`
	// The state of the item
	State *string `protobuf:"bytes,11,opt,name=state" json:"state,omitempty"`
	// Additional fields returned by the API
	Details       map[string]string `protobuf:"bytes,12,rep,name=details" json:"details,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Item) Reset() {
	*x = Item{}
	mi := &file_cloudstack_management_offering_v1_offering_gen_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_offering_v1_offering_gen_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_offering_v1_offering_gen_proto_rawDescGZIP(), []int{21}
}

func (x *Item) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Item) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Item) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *Item) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *Item) GetAccountId() string {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return ""
}

func (x *Item) GetDomainId() string {
	if x != nil && x.DomainId != nil {
		return *x.DomainId
	}
	return ""
}

func (x *Item) GetDomain() string {
	if x != nil && x.Domain != nil {
		return *x.Domain
	}
	return ""
}

func (x *Item) GetProjectId() string {
	if x != nil && x.ProjectId != nil {
		return *x.ProjectId
	}
	return ""
}

func (x *Item) GetProject() string {
	if x != nil && x.Project != nil {
		return *x.Project
	}
	return ""
}

func (x *Item) GetCreated() string {
	if x != nil && x.Created != nil {
		return *x.Created
	}
	return ""
}

func (x *Item) GetState() string {
	if x != nil && x.State != nil {
		return *x.State
	}
	return ""
}

func (x *Item) GetDetails() map[string]string {
	if x != nil {
		return x.Details
	}
	return nil
}

// Result represents a generic operation result
type Result struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether the operation was successful
	Success *bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	// Any text associated with the success or failure
	DisplayText *string `protobuf:"bytes,2,opt,name=display_text,json=displayText" json:"display_text,omitempty"`
	// The ID of the resource affected by the operation
	Id *string `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	// The job ID for an async operation
	JobId *string `protobuf:"bytes,4,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
	// The status of the job
	JobStatus     *string `protobuf:"bytes,5,opt,name=job_status,json=jobStatus" json:"job_status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Result) Reset() {
	*x = Result{}
	mi := &file_cloudstack_management_offering_v1_offering_gen_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_offering_v1_offering_gen_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_offering_v1_offering_gen_proto_rawDescGZIP(), []int{22}
}

func (x *Result) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *Result) GetDisplayText() string {
	if x != nil && x.DisplayText != nil {
		return *x.DisplayText
	}
	return ""
}

func (x *Result) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Result) GetJobId() string {
	if x != nil && x.JobId != nil {
		return *x.JobId
	}
	return ""
}

func (x *Result) GetJobStatus() string {
	if x != nil && x.JobStatus != nil {
		return *x.JobStatus
	}
	return ""
}

var File_cloudstack_management_offering_v1_offering_gen_proto protoreflect.FileDescriptor

const file_cloudstack_management_offering_v1_offering_gen_proto_rawDesc = "" +
	"\n" +
	"4cloudstack/management/offering/v1/offering.gen.proto\x12!cloudstack.management.offering.v1\x1a(cloudstack/annotations/annotations.proto\x1a\"cloudstack/validate/validate.proto\x1a google/protobuf/descriptor.proto\"[\n" +
	"\x1cDeleteServiceOfferingRequest\x12\x16\n" +
	"\x02id\x18\x01 \x01(\x03B\x06\xbaH\x03\xc8\x01\x01R\x02id\x12#\n" +
	"\rresponse_type\x18\x02 \x01(\tR\fresponseType\"b\n" +
	"\x1dDeleteServiceOfferingResponse\x12A\n" +
	"\x06result\x18\x01 \x01(\v2).cloudstack.management.offering.v1.ResultR\x06result\"o\n" +
	"0IsAccountAllowedToCreateOfferingsWithTagsRequest\x12\x16\n" +
	"\x02id\x18\x01 \x01(\x03B\x06\xbaH\x03\xc8\x01\x01R\x02id\x12#\n" +
	"\rresponse_type\x18\x02 \x01(\tR\fresponseType\"v\n" +
	"1IsAccountAllowedToCreateOfferingsWithTagsResponse\x12A\n" +
	"\x06result\x18\x01 \x01(\v2).cloudstack.management.offering.v1.ResultR\x06result\"\xff\a\n" +
	"\x19UpdateDiskOfferingRequest\x12!\n" +
	"\fdisplay_text\x18\x01 \x01(\tR\vdisplayText\x12\x16\n" +
	"\x02id\x18\x02 \x01(\x03B\x06\xbaH\x03\xc8\x01\x01R\x02id\x128\n" +
	"\x12disk_offering_name\x18\x03 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x01\x18\xff\x01R\x10diskOfferingName\x12\x19\n" +
	"\bsort_key\x18\x04 \x01(\x05R\asortKey\x120\n" +
	"\x10display_offering\x18\x05 \x01(\bB\x05\xaa\x01\x02\b\x01R\x0fdisplayOffering\x12'\n" +
	"\n" +
	"domain_ids\x18\x06 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\tdomainIds\x12#\n" +
	"\bzone_ids\x18\a \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\azoneIds\x12\x12\n" +
	"\x04tags\x18\b \x01(\tR\x04tags\x12&\n" +
	"\x0fbytes_read_rate\x18\t \x01(\x03R\rbytesReadRate\x12-\n" +
	"\x13bytes_read_rate_max\x18\n" +
	" \x01(\x03R\x10bytesReadRateMax\x12:\n" +
	"\x1abytes_read_rate_max_length\x18\v \x01(\x03R\x16bytesReadRateMaxLength\x12(\n" +
	"\x10bytes_write_rate\x18\f \x01(\x03R\x0ebytesWriteRate\x12/\n" +
	"\x14bytes_write_rate_max\x18\r \x01(\x03R\x11bytesWriteRateMax\x12<\n" +
	"\x1bbytes_write_rate_max_length\x18\x0e \x01(\x03R\x17bytesWriteRateMaxLength\x12$\n" +
	"\x0eiops_read_rate\x18\x0f \x01(\x03R\fiopsReadRate\x12+\n" +
	"\x12iops_read_rate_max\x18\x10 \x01(\x03R\x0fiopsReadRateMax\x128\n" +
	"\x19iops_read_rate_max_length\x18\x11 \x01(\x03R\x15iopsReadRateMaxLength\x12&\n" +
	"\x0fiops_write_rate\x18\x12 \x01(\x03R\riopsWriteRate\x12-\n" +
	"\x13iops_write_rate_max\x18\x13 \x01(\x03R\x10iopsWriteRateMax\x12:\n" +
	"\x1aiops_write_rate_max_length\x18\x14 \x01(\x03R\x16iopsWriteRateMaxLength\x12\x1d\n" +
	"\n" +
	"cache_mode\x18\x15 \x01(\tR\tcacheMode\x12.\n" +
	"\x13disk_offering_state\x18\x16 \x01(\tR\x11diskOfferingState\x12#\n" +
	"\rresponse_type\x18\x17 \x01(\tR\fresponseType\"_\n" +
	"\x1aUpdateDiskOfferingResponse\x12A\n" +
	"\x06result\x18\x01 \x01(\v2).cloudstack.management.offering.v1.ResultR\x06result\"\xde\v\n" +
	"\x19CreateDiskOfferingRequest\x12\x1b\n" +
	"\tdisk_size\x18\x01 \x01(\x03R\bdiskSize\x12!\n" +
	"\fdisplay_text\x18\x02 \x01(\tR\vdisplayText\x122\n" +
	"\roffering_name\x18\x03 \x01(\tB\r\xbaH\n" +
	"\xc8\x01\x01r\x05\x10\x01\x18\xff\x01R\fofferingName\x12\x12\n" +
	"\x04tags\x18\x04 \x01(\tR\x04tags\x12%\n" +
	"\n" +
	"customized\x18\x05 \x01(\bB\x05\xaa\x01\x02\b\x01R\n" +
	"customized\x12\x1d\n" +
	"\n" +
	"domain_ids\x18\x06 \x03(\tR\tdomainIds\x12\x19\n" +
	"\bzone_ids\x18\a \x03(\tR\azoneIds\x12!\n" +
	"\fstorage_type\x18\b \x01(\tR\vstorageType\x12+\n" +
	"\x11provisioning_type\x18\t \x01(\tR\x10provisioningType\x120\n" +
	"\x10display_offering\x18\n" +
	" \x01(\bB\x05\xaa\x01\x02\b\x01R\x0fdisplayOffering\x12&\n" +
	"\x0fbytes_read_rate\x18\v \x01(\x03R\rbytesReadRate\x12-\n" +
	"\x13bytes_read_rate_max\x18\f \x01(\x03R\x10bytesReadRateMax\x12:\n" +
	"\x1abytes_read_rate_max_length\x18\r \x01(\x03R\x16bytesReadRateMaxLength\x12(\n" +
	"\x10bytes_write_rate\x18\x0e \x01(\x03R\x0ebytesWriteRate\x12/\n" +
	"\x14bytes_write_rate_max\x18\x0f \x01(\x03R\x11bytesWriteRateMax\x12<\n" +
	"\x1bbytes_write_rate_max_length\x18\x10 \x01(\x03R\x17bytesWriteRateMaxLength\x12$\n" +
	"\x0eiops_read_rate\x18\x11 \x01(\x03R\fiopsReadRate\x12+\n" +
	"\x12iops_read_rate_max\x18\x12 \x01(\x03R\x0fiopsReadRateMax\x128\n" +
	"\x19iops_read_rate_max_length\x18\x13 \x01(\x03R\x15iopsReadRateMaxLength\x12&\n" +
	"\x0fiops_write_rate\x18\x14 \x01(\x03R\riopsWriteRate\x12-\n" +
	"\x13iops_write_rate_max\x18\x15 \x01(\x03R\x10iopsWriteRateMax\x12:\n" +
	"\x1aiops_write_rate_max_length\x18\x16 \x01(\x03R\x16iopsWriteRateMaxLength\x12.\n" +
	"\x0fcustomized_iops\x18\x17 \x01(\bB\x05\xaa\x01\x02\b\x01R\x0ecustomizedIops\x12\x19\n" +
	"\bmin_iops\x18\x18 \x01(\x03R\aminIops\x12\x19\n" +
	"\bmax_iops\x18\x19 \x01(\x03R\amaxIops\x12>\n" +
	"\x1bhypervisor_snapshot_reserve\x18\x1a \x01(\x05R\x19hypervisorSnapshotReserve\x12\x1d\n" +
	"\n" +
	"cache_mode\x18\x1b \x01(\tR\tcacheMode\x12%\n" +
	"\x0estorage_policy\x18\x1c \x01(\x03R\rstoragePolicy\x127\n" +
	"\x14disk_size_strictness\x18\x1d \x01(\bB\x05\xaa\x01\x02\b\x01R\x12diskSizeStrictness\x12\x1f\n" +
	"\aencrypt\x18\x1e \x01(\bB\x05\xaa\x01\x02\b\x01R\aencrypt\x12c\n" +
	"\adetails\x18\x1f \x03(\v2I.cloudstack.management.offering.v1.CreateDiskOfferingRequest.DetailsEntryR\adetails\x12#\n" +
	"\rresponse_type\x18  \x01(\tR\fresponseType\x1a:\n" +
	"\fDetailsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"_\n" +
	"\x1aCreateDiskOfferingResponse\x12A\n" +
	"\x06result\x18\x01 \x01(\v2).cloudstack.management.offering.v1.ResultR\x06result\"\xed\x10\n" +
	"\x1cCreateServiceOfferingRequest\x12\x1d\n" +
	"\n" +
	"cpu_number\x18\x01 \x01(\x05R\tcpuNumber\x12\x1b\n" +
	"\tcpu_speed\x18\x02 \x01(\x05R\bcpuSpeed\x12!\n" +
	"\fdisplay_text\x18\x03 \x01(\tR\vdisplayText\x12+\n" +
	"\x11provisioning_type\x18\x04 \x01(\tR\x10provisioningType\x12\x16\n" +
	"\x06memory\x18\x05 \x01(\x05R\x06memory\x12A\n" +
	"\x15service_offering_name\x18\x06 \x01(\tB\r\xbaH\n" +
	"\xc8\x01\x01r\x05\x10\x01\x18\xff\x01R\x13serviceOfferingName\x12 \n" +
	"\boffer_ha\x18\a \x01(\bB\x05\xaa\x01\x02\b\x01R\aofferHa\x12)\n" +
	"\rlimit_cpu_use\x18\b \x01(\bB\x05\xaa\x01\x02\b\x01R\vlimitCpuUse\x12&\n" +
	"\vis_volatile\x18\t \x01(\bB\x05\xaa\x01\x02\b\x01R\n" +
	"isVolatile\x12!\n" +
	"\fstorage_type\x18\n" +
	" \x01(\tR\vstorageType\x12\x12\n" +
	"\x04tags\x18\v \x01(\tR\x04tags\x12\x1d\n" +
	"\n" +
	"domain_ids\x18\f \x03(\tR\tdomainIds\x12\x19\n" +
	"\bzone_ids\x18\r \x03(\tR\azoneIds\x12\x19\n" +
	"\bhost_tag\x18\x0e \x01(\tR\ahostTag\x12\"\n" +
	"\tis_system\x18\x0f \x01(\bB\x05\xaa\x01\x02\b\x01R\bisSystem\x12$\n" +
	"\x0esystem_vm_type\x18\x10 \x01(\tR\fsystemVmType\x12!\n" +
	"\fnetwork_rate\x18\x11 \x01(\x05R\vnetworkRate\x12-\n" +
	"\x12deployment_planner\x18\x12 \x01(\tR\x11deploymentPlanner\x12f\n" +
	"\adetails\x18\x13 \x03(\v2L.cloudstack.management.offering.v1.CreateServiceOfferingRequest.DetailsEntryR\adetails\x12$\n" +
	"\x0eroot_disk_size\x18\x14 \x01(\x03R\frootDiskSize\x12&\n" +
	"\x0fbytes_read_rate\x18\x15 \x01(\x03R\rbytesReadRate\x12-\n" +
	"\x13bytes_read_rate_max\x18\x16 \x01(\x03R\x10bytesReadRateMax\x12:\n" +
	"\x1abytes_read_rate_max_length\x18\x17 \x01(\x03R\x16bytesReadRateMaxLength\x12(\n" +
	"\x10bytes_write_rate\x18\x18 \x01(\x03R\x0ebytesWriteRate\x12/\n" +
	"\x14bytes_write_rate_max\x18\x19 \x01(\x03R\x11bytesWriteRateMax\x12<\n" +
	"\x1bbytes_write_rate_max_length\x18\x1a \x01(\x03R\x17bytesWriteRateMaxLength\x12$\n" +
	"\x0eiops_read_rate\x18\x1b \x01(\x03R\fiopsReadRate\x12+\n" +
	"\x12iops_read_rate_max\x18\x1c \x01(\x03R\x0fiopsReadRateMax\x128\n" +
	"\x19iops_read_rate_max_length\x18\x1d \x01(\x03R\x15iopsReadRateMaxLength\x12&\n" +
	"\x0fiops_write_rate\x18\x1e \x01(\x03R\riopsWriteRate\x12-\n" +
	"\x13iops_write_rate_max\x18\x1f \x01(\x03R\x10iopsWriteRateMax\x12:\n" +
	"\x1aiops_write_rate_max_length\x18  \x01(\x03R\x16iopsWriteRateMaxLength\x12.\n" +
	"\x0fcustomized_iops\x18! \x01(\bB\x05\xaa\x01\x02\b\x01R\x0ecustomizedIops\x12\x19\n" +
	"\bmin_iops\x18\" \x01(\x03R\aminIops\x12\x19\n" +
	"\bmax_iops\x18# \x01(\x03R\amaxIops\x12>\n" +
	"\x1bhypervisor_snapshot_reserve\x18$ \x01(\x05R\x19hypervisorSnapshotReserve\x12\x1d\n" +
	"\n" +
	"cache_mode\x18% \x01(\tR\tcacheMode\x12%\n" +
	"\n" +
	"customized\x18& \x01(\bB\x05\xaa\x01\x02\b\x01R\n" +
	"customized\x12\x19\n" +
	"\tmax_c_p_u\x18' \x01(\x05R\x06maxCPU\x12\x19\n" +
	"\tmin_c_p_u\x18( \x01(\x05R\x06minCPU\x12\x1d\n" +
	"\n" +
	"max_memory\x18) \x01(\x05R\tmaxMemory\x12\x1d\n" +
	"\n" +
	"min_memory\x18* \x01(\x05R\tminMemory\x12%\n" +
	"\x0estorage_policy\x18+ \x01(\x03R\rstoragePolicy\x12B\n" +
	"\x1ais_dynamic_scaling_enabled\x18, \x01(\bB\x05\xaa\x01\x02\b\x01R\x17isDynamicScalingEnabled\x12(\n" +
	"\x10disk_offering_id\x18- \x01(\x03R\x0ediskOfferingId\x12?\n" +
	"\x18disk_offering_strictness\x18. \x01(\bB\x05\xaa\x01\x02\b\x01R\x16diskOfferingStrictness\x12(\n" +
	"\fencrypt_root\x18/ \x01(\bB\x05\xaa\x01\x02\b\x01R\vencryptRoot\x12.\n" +
	"\x0fpurge_resources\x180 \x01(\bB\x05\xaa\x01\x02\b\x01R\x0epurgeResources\x12#\n" +
	"\rresponse_type\x181 \x01(\tR\fresponseType\x1a:\n" +
	"\fDetailsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"b\n" +
	"\x1dCreateServiceOfferingResponse\x12A\n" +
	"\x06result\x18\x01 \x01(\v2).cloudstack.management.offering.v1.ResultR\x06result\"\xfa\x05\n" +
	"\x18ListDiskOfferingsRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x128\n" +
	"\x12disk_offering_name\x18\x02 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x01\x18\xff\x01R\x10diskOfferingName\x12\x17\n" +
	"\azone_id\x18\x03 \x01(\x03R\x06zoneId\x12\x1b\n" +
	"\tvolume_id\x18\x04 \x01(\x03R\bvolumeId\x12&\n" +
	"\x0fstorage_pool_id\x18\x05 \x01(\x03R\rstoragePoolId\x12\x1f\n" +
	"\aencrypt\x18\x06 \x01(\bB\x05\xaa\x01\x02\b\x01R\aencrypt\x12!\n" +
	"\fstorage_type\x18\a \x01(\tR\vstorageType\x12.\n" +
	"\x13disk_offering_state\x18\b \x01(\tR\x11diskOfferingState\x12,\n" +
	"\x12virtual_machine_id\x18\t \x01(\x03R\x10virtualMachineId\x12\x1d\n" +
	"\n" +
	"project_id\x18\n" +
	" \x01(\x03R\tprojectId\x12\xa0\x01\n" +
	"\faccount_name\x18\v \x01(\tB}\xbaHz\xba\x01w\n" +
	"\x1baccount_name_with_domain_id\x122account_name must be used with domain_id parameter\x1a$!has(account_name) || has(domain_id)R\vaccountName\x12 \n" +
	"\blist_all\x18\f \x01(\bB\x05\xaa\x01\x02\b\x01R\alistAll\x12\x1b\n" +
	"\tdomain_id\x18\r \x01(\x03R\bdomainId\x12#\n" +
	"\trecursive\x18\x0e \x01(\bB\x05\xaa\x01\x02\b\x01R\trecursive\x12\x18\n" +
	"\akeyword\x18\x0f \x01(\tR\akeyword\x12\x12\n" +
	"\x04page\x18\x10 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x11 \x01(\x05R\bpageSize\x12#\n" +
	"\rresponse_type\x18\x12 \x01(\tR\fresponseType\"\x8a\x01\n" +
	"\x19ListDiskOfferingsResponse\x12E\n" +
	"\x05items\x18\x01 \x03(\v2/.cloudstack.management.offering.v1.DiskOfferingR\x05items\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount:\x05\xbaH\x02\b\x00\"X\n" +
	"\x19DeleteDiskOfferingRequest\x12\x16\n" +
	"\x02id\x18\x01 \x01(\x03B\x06\xbaH\x03\xc8\x01\x01R\x02id\x12#\n" +
	"\rresponse_type\x18\x02 \x01(\tR\fresponseType\"_\n" +
	"\x1aDeleteDiskOfferingResponse\x12A\n" +
	"\x06result\x18\x01 \x01(\v2).cloudstack.management.offering.v1.ResultR\x06result\"\x8c\a\n" +
	"\x1bListServiceOfferingsRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12>\n" +
	"\x15service_offering_name\x18\x02 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x01\x18\xff\x01R\x13serviceOfferingName\x12,\n" +
	"\x12virtual_machine_id\x18\x03 \x01(\x03R\x10virtualMachineId\x12\"\n" +
	"\tis_system\x18\x04 \x01(\bB\x05\xaa\x01\x02\b\x01R\bisSystem\x12$\n" +
	"\x0esystem_vm_type\x18\x05 \x01(\tR\fsystemVmType\x12\x17\n" +
	"\azone_id\x18\x06 \x01(\x03R\x06zoneId\x12\x1d\n" +
	"\n" +
	"cpu_number\x18\a \x01(\x05R\tcpuNumber\x12\x16\n" +
	"\x06memory\x18\b \x01(\x05R\x06memory\x12\x1b\n" +
	"\tcpu_speed\x18\t \x01(\x05R\bcpuSpeed\x12(\n" +
	"\fencrypt_root\x18\n" +
	" \x01(\bB\x05\xaa\x01\x02\b\x01R\vencryptRoot\x12!\n" +
	"\fstorage_type\x18\v \x01(\tR\vstorageType\x124\n" +
	"\x16service_offering_state\x18\f \x01(\tR\x14serviceOfferingState\x12\x1f\n" +
	"\vtemplate_id\x18\r \x01(\x03R\n" +
	"templateId\x12\x1d\n" +
	"\n" +
	"project_id\x18\x0e \x01(\x03R\tprojectId\x12\xa0\x01\n" +
	"\faccount_name\x18\x0f \x01(\tB}\xbaHz\xba\x01w\n" +
	"\x1baccount_name_with_domain_id\x122account_name must be used with domain_id parameter\x1a$!has(account_name) || has(domain_id)R\vaccountName\x12 \n" +
	"\blist_all\x18\x10 \x01(\bB\x05\xaa\x01\x02\b\x01R\alistAll\x12\x1b\n" +
	"\tdomain_id\x18\x11 \x01(\x03R\bdomainId\x12#\n" +
	"\trecursive\x18\x12 \x01(\bB\x05\xaa\x01\x02\b\x01R\trecursive\x12\x18\n" +
	"\akeyword\x18\x13 \x01(\tR\akeyword\x12\x12\n" +
	"\x04page\x18\x14 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x15 \x01(\x05R\bpageSize\x12#\n" +
	"\rresponse_type\x18\x16 \x01(\tR\fresponseType\"\x90\x01\n" +
	"\x1cListServiceOfferingsResponse\x12H\n" +
	"\x05items\x18\x01 \x03(\v22.cloudstack.management.offering.v1.ServiceOfferingR\x05items\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount:\x05\xbaH\x02\b\x00\"\xcd\x03\n" +
	"\x1cUpdateServiceOfferingRequest\x12\x16\n" +
	"\x02id\x18\x01 \x01(\x03B\x06\xbaH\x03\xc8\x01\x01R\x02id\x12!\n" +
	"\fdisplay_text\x18\x02 \x01(\tR\vdisplayText\x12>\n" +
	"\x15service_offering_name\x18\x03 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x01\x18\xff\x01R\x13serviceOfferingName\x12\x19\n" +
	"\bsort_key\x18\x04 \x01(\x05R\asortKey\x12'\n" +
	"\n" +
	"domain_ids\x18\x05 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\tdomainIds\x12#\n" +
	"\bzone_ids\x18\x06 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\azoneIds\x12!\n" +
	"\fstorage_tags\x18\a \x01(\tR\vstorageTags\x12\x1b\n" +
	"\thost_tags\x18\b \x01(\tR\bhostTags\x124\n" +
	"\x16service_offering_state\x18\t \x01(\tR\x14serviceOfferingState\x12.\n" +
	"\x0fpurge_resources\x18\n" +
	" \x01(\bB\x05\xaa\x01\x02\b\x01R\x0epurgeResources\x12#\n" +
	"\rresponse_type\x18\v \x01(\tR\fresponseType\"b\n" +
	"\x1dUpdateServiceOfferingResponse\x12A\n" +
	"\x06result\x18\x01 \x01(\v2).cloudstack.management.offering.v1.ResultR\x06result\"\x9b\x01\n" +
	"\fDiskOffering\x12\x18\n" +
	"\x02id\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12!\n" +
	"\fdisplay_name\x18\x03 \x01(\tR\vdisplayName\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x18\n" +
	"\acreated\x18\x05 \x01(\tR\acreated\"\x9e\x01\n" +
	"\x0fServiceOffering\x12\x18\n" +
	"\x02id\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12!\n" +
	"\fdisplay_name\x18\x03 \x01(\tR\vdisplayName\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x18\n" +
	"\acreated\x18\x05 \x01(\tR\acreated\"F\n" +
	"\aSuccess\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12!\n" +
	"\fdisplay_text\x18\x02 \x01(\tR\vdisplayText\"\xe0\x03\n" +
	"\x04Item\x12\x18\n" +
	"\x02id\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12!\n" +
	"\fdisplay_name\x18\x03 \x01(\tR\vdisplayName\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12'\n" +
	"\n" +
	"account_id\x18\x05 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\taccountId\x12%\n" +
	"\tdomain_id\x18\x06 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\bdomainId\x12\x16\n" +
	"\x06domain\x18\a \x01(\tR\x06domain\x12'\n" +
	"\n" +
	"project_id\x18\b \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\tprojectId\x12\x18\n" +
	"\aproject\x18\t \x01(\tR\aproject\x12\x18\n" +
	"\acreated\x18\n" +
	" \x01(\tR\acreated\x12\x14\n" +
	"\x05state\x18\v \x01(\tR\x05state\x12N\n" +
	"\adetails\x18\f \x03(\v24.cloudstack.management.offering.v1.Item.DetailsEntryR\adetails\x1a:\n" +
	"\fDetailsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x9f\x01\n" +
	"\x06Result\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12!\n" +
	"\fdisplay_text\x18\x02 \x01(\tR\vdisplayText\x12\x18\n" +
	"\x02id\x18\x03 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x02id\x12\x1f\n" +
	"\x06job_id\x18\x04 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x05jobId\x12\x1d\n" +
	"\n" +
	"job_status\x18\x05 \x01(\tR\tjobStatus2\xc2\v\n" +
	"\x0fOfferingService\x12\x9c\x01\n" +
	"\x15DeleteServiceOffering\x12?.cloudstack.management.offering.v1.DeleteServiceOfferingRequest\x1a@.cloudstack.management.offering.v1.DeleteServiceOfferingResponse\"\x00\x12\xd8\x01\n" +
	")IsAccountAllowedToCreateOfferingsWithTags\x12S.cloudstack.management.offering.v1.IsAccountAllowedToCreateOfferingsWithTagsRequest\x1aT.cloudstack.management.offering.v1.IsAccountAllowedToCreateOfferingsWithTagsResponse\"\x00\x12\x93\x01\n" +
	"\x12UpdateDiskOffering\x12<.cloudstack.management.offering.v1.UpdateDiskOfferingRequest\x1a=.cloudstack.management.offering.v1.UpdateDiskOfferingResponse\"\x00\x12\x93\x01\n" +
	"\x12CreateDiskOffering\x12<.cloudstack.management.offering.v1.CreateDiskOfferingRequest\x1a=.cloudstack.management.offering.v1.CreateDiskOfferingResponse\"\x00\x12\x9c\x01\n" +
	"\x15CreateServiceOffering\x12?.cloudstack.management.offering.v1.CreateServiceOfferingRequest\x1a@.cloudstack.management.offering.v1.CreateServiceOfferingResponse\"\x00\x12\x90\x01\n" +
	"\x11ListDiskOfferings\x12;.cloudstack.management.offering.v1.ListDiskOfferingsRequest\x1a<.cloudstack.management.offering.v1.ListDiskOfferingsResponse\"\x00\x12\x93\x01\n" +
	"\x12DeleteDiskOffering\x12<.cloudstack.management.offering.v1.DeleteDiskOfferingRequest\x1a=.cloudstack.management.offering.v1.DeleteDiskOfferingResponse\"\x00\x12\x99\x01\n" +
	"\x14ListServiceOfferings\x12>.cloudstack.management.offering.v1.ListServiceOfferingsRequest\x1a?.cloudstack.management.offering.v1.ListServiceOfferingsResponse\"\x00\x12\x9c\x01\n" +
	"\x15UpdateServiceOffering\x12?.cloudstack.management.offering.v1.UpdateServiceOfferingRequest\x1a@.cloudstack.management.offering.v1.UpdateServiceOfferingResponse\"\x00\x1a\x06\xc2>\x03\xc0>\x02B\xc2\x02\n" +
	"%com.cloudstack.management.offering.v1B\x10OfferingGenProtoP\x01Z`github.com/walteh/cloudstack-proxy/gen/proto/golang/cloudstack/management/offering/v1;offeringv1\xa2\x02\x03CMO\xaa\x02!Cloudstack.Management.Offering.V1\xca\x02!Cloudstack\\Management\\Offering\\V1\xe2\x02-Cloudstack\\Management\\Offering\\V1\\GPBMetadata\xea\x02$Cloudstack::Management::Offering::V1b\beditionsp\xe8\a"

var (
	file_cloudstack_management_offering_v1_offering_gen_proto_rawDescOnce sync.Once
	file_cloudstack_management_offering_v1_offering_gen_proto_rawDescData []byte
)

func file_cloudstack_management_offering_v1_offering_gen_proto_rawDescGZIP() []byte {
	file_cloudstack_management_offering_v1_offering_gen_proto_rawDescOnce.Do(func() {
		file_cloudstack_management_offering_v1_offering_gen_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_cloudstack_management_offering_v1_offering_gen_proto_rawDesc), len(file_cloudstack_management_offering_v1_offering_gen_proto_rawDesc)))
	})
	return file_cloudstack_management_offering_v1_offering_gen_proto_rawDescData
}

var file_cloudstack_management_offering_v1_offering_gen_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_cloudstack_management_offering_v1_offering_gen_proto_goTypes = []any{
	(*DeleteServiceOfferingRequest)(nil),                      // 0: cloudstack.management.offering.v1.DeleteServiceOfferingRequest
	(*DeleteServiceOfferingResponse)(nil),                     // 1: cloudstack.management.offering.v1.DeleteServiceOfferingResponse
	(*IsAccountAllowedToCreateOfferingsWithTagsRequest)(nil),  // 2: cloudstack.management.offering.v1.IsAccountAllowedToCreateOfferingsWithTagsRequest
	(*IsAccountAllowedToCreateOfferingsWithTagsResponse)(nil), // 3: cloudstack.management.offering.v1.IsAccountAllowedToCreateOfferingsWithTagsResponse
	(*UpdateDiskOfferingRequest)(nil),                         // 4: cloudstack.management.offering.v1.UpdateDiskOfferingRequest
	(*UpdateDiskOfferingResponse)(nil),                        // 5: cloudstack.management.offering.v1.UpdateDiskOfferingResponse
	(*CreateDiskOfferingRequest)(nil),                         // 6: cloudstack.management.offering.v1.CreateDiskOfferingRequest
	(*CreateDiskOfferingResponse)(nil),                        // 7: cloudstack.management.offering.v1.CreateDiskOfferingResponse
	(*CreateServiceOfferingRequest)(nil),                      // 8: cloudstack.management.offering.v1.CreateServiceOfferingRequest
	(*CreateServiceOfferingResponse)(nil),                     // 9: cloudstack.management.offering.v1.CreateServiceOfferingResponse
	(*ListDiskOfferingsRequest)(nil),                          // 10: cloudstack.management.offering.v1.ListDiskOfferingsRequest
	(*ListDiskOfferingsResponse)(nil),                         // 11: cloudstack.management.offering.v1.ListDiskOfferingsResponse
	(*DeleteDiskOfferingRequest)(nil),                         // 12: cloudstack.management.offering.v1.DeleteDiskOfferingRequest
	(*DeleteDiskOfferingResponse)(nil),                        // 13: cloudstack.management.offering.v1.DeleteDiskOfferingResponse
	(*ListServiceOfferingsRequest)(nil),                       // 14: cloudstack.management.offering.v1.ListServiceOfferingsRequest
	(*ListServiceOfferingsResponse)(nil),                      // 15: cloudstack.management.offering.v1.ListServiceOfferingsResponse
	(*UpdateServiceOfferingRequest)(nil),                      // 16: cloudstack.management.offering.v1.UpdateServiceOfferingRequest
	(*UpdateServiceOfferingResponse)(nil),                     // 17: cloudstack.management.offering.v1.UpdateServiceOfferingResponse
	(*DiskOffering)(nil),                                      // 18: cloudstack.management.offering.v1.DiskOffering
	(*ServiceOffering)(nil),                                   // 19: cloudstack.management.offering.v1.ServiceOffering
	(*Success)(nil),                                           // 20: cloudstack.management.offering.v1.Success
	(*Item)(nil),                                              // 21: cloudstack.management.offering.v1.Item
	(*Result)(nil),                                            // 22: cloudstack.management.offering.v1.Result
	nil,                                                       // 23: cloudstack.management.offering.v1.CreateDiskOfferingRequest.DetailsEntry
	nil,                                                       // 24: cloudstack.management.offering.v1.CreateServiceOfferingRequest.DetailsEntry
	nil,                                                       // 25: cloudstack.management.offering.v1.Item.DetailsEntry
}
var file_cloudstack_management_offering_v1_offering_gen_proto_depIdxs = []int32{
	22, // 0: cloudstack.management.offering.v1.DeleteServiceOfferingResponse.result:type_name -> cloudstack.management.offering.v1.Result
	22, // 1: cloudstack.management.offering.v1.IsAccountAllowedToCreateOfferingsWithTagsResponse.result:type_name -> cloudstack.management.offering.v1.Result
	22, // 2: cloudstack.management.offering.v1.UpdateDiskOfferingResponse.result:type_name -> cloudstack.management.offering.v1.Result
	23, // 3: cloudstack.management.offering.v1.CreateDiskOfferingRequest.details:type_name -> cloudstack.management.offering.v1.CreateDiskOfferingRequest.DetailsEntry
	22, // 4: cloudstack.management.offering.v1.CreateDiskOfferingResponse.result:type_name -> cloudstack.management.offering.v1.Result
	24, // 5: cloudstack.management.offering.v1.CreateServiceOfferingRequest.details:type_name -> cloudstack.management.offering.v1.CreateServiceOfferingRequest.DetailsEntry
	22, // 6: cloudstack.management.offering.v1.CreateServiceOfferingResponse.result:type_name -> cloudstack.management.offering.v1.Result
	18, // 7: cloudstack.management.offering.v1.ListDiskOfferingsResponse.items:type_name -> cloudstack.management.offering.v1.DiskOffering
	22, // 8: cloudstack.management.offering.v1.DeleteDiskOfferingResponse.result:type_name -> cloudstack.management.offering.v1.Result
	19, // 9: cloudstack.management.offering.v1.ListServiceOfferingsResponse.items:type_name -> cloudstack.management.offering.v1.ServiceOffering
	22, // 10: cloudstack.management.offering.v1.UpdateServiceOfferingResponse.result:type_name -> cloudstack.management.offering.v1.Result
	25, // 11: cloudstack.management.offering.v1.Item.details:type_name -> cloudstack.management.offering.v1.Item.DetailsEntry
	0,  // 12: cloudstack.management.offering.v1.OfferingService.DeleteServiceOffering:input_type -> cloudstack.management.offering.v1.DeleteServiceOfferingRequest
	2,  // 13: cloudstack.management.offering.v1.OfferingService.IsAccountAllowedToCreateOfferingsWithTags:input_type -> cloudstack.management.offering.v1.IsAccountAllowedToCreateOfferingsWithTagsRequest
	4,  // 14: cloudstack.management.offering.v1.OfferingService.UpdateDiskOffering:input_type -> cloudstack.management.offering.v1.UpdateDiskOfferingRequest
	6,  // 15: cloudstack.management.offering.v1.OfferingService.CreateDiskOffering:input_type -> cloudstack.management.offering.v1.CreateDiskOfferingRequest
	8,  // 16: cloudstack.management.offering.v1.OfferingService.CreateServiceOffering:input_type -> cloudstack.management.offering.v1.CreateServiceOfferingRequest
	10, // 17: cloudstack.management.offering.v1.OfferingService.ListDiskOfferings:input_type -> cloudstack.management.offering.v1.ListDiskOfferingsRequest
	12, // 18: cloudstack.management.offering.v1.OfferingService.DeleteDiskOffering:input_type -> cloudstack.management.offering.v1.DeleteDiskOfferingRequest
	14, // 19: cloudstack.management.offering.v1.OfferingService.ListServiceOfferings:input_type -> cloudstack.management.offering.v1.ListServiceOfferingsRequest
	16, // 20: cloudstack.management.offering.v1.OfferingService.UpdateServiceOffering:input_type -> cloudstack.management.offering.v1.UpdateServiceOfferingRequest
	1,  // 21: cloudstack.management.offering.v1.OfferingService.DeleteServiceOffering:output_type -> cloudstack.management.offering.v1.DeleteServiceOfferingResponse
	3,  // 22: cloudstack.management.offering.v1.OfferingService.IsAccountAllowedToCreateOfferingsWithTags:output_type -> cloudstack.management.offering.v1.IsAccountAllowedToCreateOfferingsWithTagsResponse
	5,  // 23: cloudstack.management.offering.v1.OfferingService.UpdateDiskOffering:output_type -> cloudstack.management.offering.v1.UpdateDiskOfferingResponse
	7,  // 24: cloudstack.management.offering.v1.OfferingService.CreateDiskOffering:output_type -> cloudstack.management.offering.v1.CreateDiskOfferingResponse
	9,  // 25: cloudstack.management.offering.v1.OfferingService.CreateServiceOffering:output_type -> cloudstack.management.offering.v1.CreateServiceOfferingResponse
	11, // 26: cloudstack.management.offering.v1.OfferingService.ListDiskOfferings:output_type -> cloudstack.management.offering.v1.ListDiskOfferingsResponse
	13, // 27: cloudstack.management.offering.v1.OfferingService.DeleteDiskOffering:output_type -> cloudstack.management.offering.v1.DeleteDiskOfferingResponse
	15, // 28: cloudstack.management.offering.v1.OfferingService.ListServiceOfferings:output_type -> cloudstack.management.offering.v1.ListServiceOfferingsResponse
	17, // 29: cloudstack.management.offering.v1.OfferingService.UpdateServiceOffering:output_type -> cloudstack.management.offering.v1.UpdateServiceOfferingResponse
	21, // [21:30] is the sub-list for method output_type
	12, // [12:21] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_cloudstack_management_offering_v1_offering_gen_proto_init() }
func file_cloudstack_management_offering_v1_offering_gen_proto_init() {
	if File_cloudstack_management_offering_v1_offering_gen_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_cloudstack_management_offering_v1_offering_gen_proto_rawDesc), len(file_cloudstack_management_offering_v1_offering_gen_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cloudstack_management_offering_v1_offering_gen_proto_goTypes,
		DependencyIndexes: file_cloudstack_management_offering_v1_offering_gen_proto_depIdxs,
		MessageInfos:      file_cloudstack_management_offering_v1_offering_gen_proto_msgTypes,
	}.Build()
	File_cloudstack_management_offering_v1_offering_gen_proto = out.File
	file_cloudstack_management_offering_v1_offering_gen_proto_goTypes = nil
	file_cloudstack_management_offering_v1_offering_gen_proto_depIdxs = nil
}
