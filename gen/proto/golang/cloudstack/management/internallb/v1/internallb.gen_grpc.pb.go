// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             (unknown)
// source: cloudstack/management/internallb/v1/internallb.gen.proto

package internallbv1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	InternallbService_ConfigureInternalLoadBalancerElement_FullMethodName = "/cloudstack.management.internallb.v1.InternallbService/ConfigureInternalLoadBalancerElement"
	InternallbService_CreateInternalLoadBalancerElement_FullMethodName    = "/cloudstack.management.internallb.v1.InternallbService/CreateInternalLoadBalancerElement"
	InternallbService_ListInternalLBVMs_FullMethodName                    = "/cloudstack.management.internallb.v1.InternallbService/ListInternalLBVMs"
	InternallbService_ListInternalLoadBalancerElements_FullMethodName     = "/cloudstack.management.internallb.v1.InternallbService/ListInternalLoadBalancerElements"
	InternallbService_StartInternalLBVM_FullMethodName                    = "/cloudstack.management.internallb.v1.InternallbService/StartInternalLBVM"
	InternallbService_StopInternalLBVM_FullMethodName                     = "/cloudstack.management.internallb.v1.InternallbService/StopInternalLBVM"
)

// InternallbServiceClient is the client API for InternallbService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
//
// InternallbService provides operations for managing Internallbs
type InternallbServiceClient interface {
	// ConfigureInternalLoadBalancerElement Configures an Internal Load Balancer element.
	ConfigureInternalLoadBalancerElement(ctx context.Context, in *ConfigureInternalLoadBalancerElementRequest, opts ...grpc.CallOption) (*ConfigureInternalLoadBalancerElementResponse, error)
	// CreateInternalLoadBalancerElement Create an Internal Load Balancer element.
	CreateInternalLoadBalancerElement(ctx context.Context, in *CreateInternalLoadBalancerElementRequest, opts ...grpc.CallOption) (*CreateInternalLoadBalancerElementResponse, error)
	// ListInternalLBVMs List internal LB VMs.
	ListInternalLBVMs(ctx context.Context, in *ListInternalLBVMsRequest, opts ...grpc.CallOption) (*ListInternalLBVMsResponse, error)
	// ListInternalLoadBalancerElements Lists all available Internal Load Balancer elements.
	ListInternalLoadBalancerElements(ctx context.Context, in *ListInternalLoadBalancerElementsRequest, opts ...grpc.CallOption) (*ListInternalLoadBalancerElementsResponse, error)
	// StartInternalLBVM Starts an existing internal lb vm.
	StartInternalLBVM(ctx context.Context, in *StartInternalLBVMRequest, opts ...grpc.CallOption) (*StartInternalLBVMResponse, error)
	// StopInternalLBVM Stops an Internal LB vm.
	StopInternalLBVM(ctx context.Context, in *StopInternalLBVMRequest, opts ...grpc.CallOption) (*StopInternalLBVMResponse, error)
}

type internallbServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewInternallbServiceClient(cc grpc.ClientConnInterface) InternallbServiceClient {
	return &internallbServiceClient{cc}
}

func (c *internallbServiceClient) ConfigureInternalLoadBalancerElement(ctx context.Context, in *ConfigureInternalLoadBalancerElementRequest, opts ...grpc.CallOption) (*ConfigureInternalLoadBalancerElementResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ConfigureInternalLoadBalancerElementResponse)
	err := c.cc.Invoke(ctx, InternallbService_ConfigureInternalLoadBalancerElement_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *internallbServiceClient) CreateInternalLoadBalancerElement(ctx context.Context, in *CreateInternalLoadBalancerElementRequest, opts ...grpc.CallOption) (*CreateInternalLoadBalancerElementResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateInternalLoadBalancerElementResponse)
	err := c.cc.Invoke(ctx, InternallbService_CreateInternalLoadBalancerElement_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *internallbServiceClient) ListInternalLBVMs(ctx context.Context, in *ListInternalLBVMsRequest, opts ...grpc.CallOption) (*ListInternalLBVMsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListInternalLBVMsResponse)
	err := c.cc.Invoke(ctx, InternallbService_ListInternalLBVMs_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *internallbServiceClient) ListInternalLoadBalancerElements(ctx context.Context, in *ListInternalLoadBalancerElementsRequest, opts ...grpc.CallOption) (*ListInternalLoadBalancerElementsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListInternalLoadBalancerElementsResponse)
	err := c.cc.Invoke(ctx, InternallbService_ListInternalLoadBalancerElements_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *internallbServiceClient) StartInternalLBVM(ctx context.Context, in *StartInternalLBVMRequest, opts ...grpc.CallOption) (*StartInternalLBVMResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(StartInternalLBVMResponse)
	err := c.cc.Invoke(ctx, InternallbService_StartInternalLBVM_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *internallbServiceClient) StopInternalLBVM(ctx context.Context, in *StopInternalLBVMRequest, opts ...grpc.CallOption) (*StopInternalLBVMResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(StopInternalLBVMResponse)
	err := c.cc.Invoke(ctx, InternallbService_StopInternalLBVM_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// InternallbServiceServer is the server API for InternallbService service.
// All implementations must embed UnimplementedInternallbServiceServer
// for forward compatibility.
//
// InternallbService provides operations for managing Internallbs
type InternallbServiceServer interface {
	// ConfigureInternalLoadBalancerElement Configures an Internal Load Balancer element.
	ConfigureInternalLoadBalancerElement(context.Context, *ConfigureInternalLoadBalancerElementRequest) (*ConfigureInternalLoadBalancerElementResponse, error)
	// CreateInternalLoadBalancerElement Create an Internal Load Balancer element.
	CreateInternalLoadBalancerElement(context.Context, *CreateInternalLoadBalancerElementRequest) (*CreateInternalLoadBalancerElementResponse, error)
	// ListInternalLBVMs List internal LB VMs.
	ListInternalLBVMs(context.Context, *ListInternalLBVMsRequest) (*ListInternalLBVMsResponse, error)
	// ListInternalLoadBalancerElements Lists all available Internal Load Balancer elements.
	ListInternalLoadBalancerElements(context.Context, *ListInternalLoadBalancerElementsRequest) (*ListInternalLoadBalancerElementsResponse, error)
	// StartInternalLBVM Starts an existing internal lb vm.
	StartInternalLBVM(context.Context, *StartInternalLBVMRequest) (*StartInternalLBVMResponse, error)
	// StopInternalLBVM Stops an Internal LB vm.
	StopInternalLBVM(context.Context, *StopInternalLBVMRequest) (*StopInternalLBVMResponse, error)
	mustEmbedUnimplementedInternallbServiceServer()
}

// UnimplementedInternallbServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedInternallbServiceServer struct{}

func (UnimplementedInternallbServiceServer) ConfigureInternalLoadBalancerElement(context.Context, *ConfigureInternalLoadBalancerElementRequest) (*ConfigureInternalLoadBalancerElementResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ConfigureInternalLoadBalancerElement not implemented")
}
func (UnimplementedInternallbServiceServer) CreateInternalLoadBalancerElement(context.Context, *CreateInternalLoadBalancerElementRequest) (*CreateInternalLoadBalancerElementResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateInternalLoadBalancerElement not implemented")
}
func (UnimplementedInternallbServiceServer) ListInternalLBVMs(context.Context, *ListInternalLBVMsRequest) (*ListInternalLBVMsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListInternalLBVMs not implemented")
}
func (UnimplementedInternallbServiceServer) ListInternalLoadBalancerElements(context.Context, *ListInternalLoadBalancerElementsRequest) (*ListInternalLoadBalancerElementsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListInternalLoadBalancerElements not implemented")
}
func (UnimplementedInternallbServiceServer) StartInternalLBVM(context.Context, *StartInternalLBVMRequest) (*StartInternalLBVMResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartInternalLBVM not implemented")
}
func (UnimplementedInternallbServiceServer) StopInternalLBVM(context.Context, *StopInternalLBVMRequest) (*StopInternalLBVMResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StopInternalLBVM not implemented")
}
func (UnimplementedInternallbServiceServer) mustEmbedUnimplementedInternallbServiceServer() {}
func (UnimplementedInternallbServiceServer) testEmbeddedByValue()                           {}

// UnsafeInternallbServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to InternallbServiceServer will
// result in compilation errors.
type UnsafeInternallbServiceServer interface {
	mustEmbedUnimplementedInternallbServiceServer()
}

func RegisterInternallbServiceServer(s grpc.ServiceRegistrar, srv InternallbServiceServer) {
	// If the following call pancis, it indicates UnimplementedInternallbServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&InternallbService_ServiceDesc, srv)
}

func _InternallbService_ConfigureInternalLoadBalancerElement_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfigureInternalLoadBalancerElementRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InternallbServiceServer).ConfigureInternalLoadBalancerElement(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: InternallbService_ConfigureInternalLoadBalancerElement_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InternallbServiceServer).ConfigureInternalLoadBalancerElement(ctx, req.(*ConfigureInternalLoadBalancerElementRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InternallbService_CreateInternalLoadBalancerElement_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateInternalLoadBalancerElementRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InternallbServiceServer).CreateInternalLoadBalancerElement(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: InternallbService_CreateInternalLoadBalancerElement_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InternallbServiceServer).CreateInternalLoadBalancerElement(ctx, req.(*CreateInternalLoadBalancerElementRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InternallbService_ListInternalLBVMs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListInternalLBVMsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InternallbServiceServer).ListInternalLBVMs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: InternallbService_ListInternalLBVMs_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InternallbServiceServer).ListInternalLBVMs(ctx, req.(*ListInternalLBVMsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InternallbService_ListInternalLoadBalancerElements_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListInternalLoadBalancerElementsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InternallbServiceServer).ListInternalLoadBalancerElements(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: InternallbService_ListInternalLoadBalancerElements_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InternallbServiceServer).ListInternalLoadBalancerElements(ctx, req.(*ListInternalLoadBalancerElementsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InternallbService_StartInternalLBVM_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartInternalLBVMRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InternallbServiceServer).StartInternalLBVM(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: InternallbService_StartInternalLBVM_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InternallbServiceServer).StartInternalLBVM(ctx, req.(*StartInternalLBVMRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InternallbService_StopInternalLBVM_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopInternalLBVMRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InternallbServiceServer).StopInternalLBVM(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: InternallbService_StopInternalLBVM_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InternallbServiceServer).StopInternalLBVM(ctx, req.(*StopInternalLBVMRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// InternallbService_ServiceDesc is the grpc.ServiceDesc for InternallbService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var InternallbService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "cloudstack.management.internallb.v1.InternallbService",
	HandlerType: (*InternallbServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ConfigureInternalLoadBalancerElement",
			Handler:    _InternallbService_ConfigureInternalLoadBalancerElement_Handler,
		},
		{
			MethodName: "CreateInternalLoadBalancerElement",
			Handler:    _InternallbService_CreateInternalLoadBalancerElement_Handler,
		},
		{
			MethodName: "ListInternalLBVMs",
			Handler:    _InternallbService_ListInternalLBVMs_Handler,
		},
		{
			MethodName: "ListInternalLoadBalancerElements",
			Handler:    _InternallbService_ListInternalLoadBalancerElements_Handler,
		},
		{
			MethodName: "StartInternalLBVM",
			Handler:    _InternallbService_StartInternalLBVM_Handler,
		},
		{
			MethodName: "StopInternalLBVM",
			Handler:    _InternallbService_StopInternalLBVM_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cloudstack/management/internallb/v1/internallb.gen.proto",
}
