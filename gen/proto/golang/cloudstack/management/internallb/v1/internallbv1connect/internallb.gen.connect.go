// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: cloudstack/management/internallb/v1/internallb.gen.proto

package internallbv1connect

import (
	connect "connectrpc.com/connect"
	context "context"
	errors "errors"
	v1 "github.com/walteh/cloudstack-proxy/gen/proto/golang/cloudstack/management/internallb/v1"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect.IsAtLeastVersion1_13_0

const (
	// InternallbServiceName is the fully-qualified name of the InternallbService service.
	InternallbServiceName = "cloudstack.management.internallb.v1.InternallbService"
)

// These constants are the fully-qualified names of the RPCs defined in this package. They're
// exposed at runtime as Spec.Procedure and as the final two segments of the HTTP route.
//
// Note that these are different from the fully-qualified method names used by
// google.golang.org/protobuf/reflect/protoreflect. To convert from these constants to
// reflection-formatted method names, remove the leading slash and convert the remaining slash to a
// period.
const (
	// InternallbServiceConfigureInternalLoadBalancerElementProcedure is the fully-qualified name of the
	// InternallbService's ConfigureInternalLoadBalancerElement RPC.
	InternallbServiceConfigureInternalLoadBalancerElementProcedure = "/cloudstack.management.internallb.v1.InternallbService/ConfigureInternalLoadBalancerElement"
	// InternallbServiceCreateInternalLoadBalancerElementProcedure is the fully-qualified name of the
	// InternallbService's CreateInternalLoadBalancerElement RPC.
	InternallbServiceCreateInternalLoadBalancerElementProcedure = "/cloudstack.management.internallb.v1.InternallbService/CreateInternalLoadBalancerElement"
	// InternallbServiceListInternalLBVMsProcedure is the fully-qualified name of the
	// InternallbService's ListInternalLBVMs RPC.
	InternallbServiceListInternalLBVMsProcedure = "/cloudstack.management.internallb.v1.InternallbService/ListInternalLBVMs"
	// InternallbServiceListInternalLoadBalancerElementsProcedure is the fully-qualified name of the
	// InternallbService's ListInternalLoadBalancerElements RPC.
	InternallbServiceListInternalLoadBalancerElementsProcedure = "/cloudstack.management.internallb.v1.InternallbService/ListInternalLoadBalancerElements"
	// InternallbServiceStartInternalLBVMProcedure is the fully-qualified name of the
	// InternallbService's StartInternalLBVM RPC.
	InternallbServiceStartInternalLBVMProcedure = "/cloudstack.management.internallb.v1.InternallbService/StartInternalLBVM"
	// InternallbServiceStopInternalLBVMProcedure is the fully-qualified name of the InternallbService's
	// StopInternalLBVM RPC.
	InternallbServiceStopInternalLBVMProcedure = "/cloudstack.management.internallb.v1.InternallbService/StopInternalLBVM"
)

// InternallbServiceClient is a client for the cloudstack.management.internallb.v1.InternallbService
// service.
type InternallbServiceClient interface {
	// ConfigureInternalLoadBalancerElement Configures an Internal Load Balancer element.
	ConfigureInternalLoadBalancerElement(context.Context, *connect.Request[v1.ConfigureInternalLoadBalancerElementRequest]) (*connect.Response[v1.ConfigureInternalLoadBalancerElementResponse], error)
	// CreateInternalLoadBalancerElement Create an Internal Load Balancer element.
	CreateInternalLoadBalancerElement(context.Context, *connect.Request[v1.CreateInternalLoadBalancerElementRequest]) (*connect.Response[v1.CreateInternalLoadBalancerElementResponse], error)
	// ListInternalLBVMs List internal LB VMs.
	ListInternalLBVMs(context.Context, *connect.Request[v1.ListInternalLBVMsRequest]) (*connect.Response[v1.ListInternalLBVMsResponse], error)
	// ListInternalLoadBalancerElements Lists all available Internal Load Balancer elements.
	ListInternalLoadBalancerElements(context.Context, *connect.Request[v1.ListInternalLoadBalancerElementsRequest]) (*connect.Response[v1.ListInternalLoadBalancerElementsResponse], error)
	// StartInternalLBVM Starts an existing internal lb vm.
	StartInternalLBVM(context.Context, *connect.Request[v1.StartInternalLBVMRequest]) (*connect.Response[v1.StartInternalLBVMResponse], error)
	// StopInternalLBVM Stops an Internal LB vm.
	StopInternalLBVM(context.Context, *connect.Request[v1.StopInternalLBVMRequest]) (*connect.Response[v1.StopInternalLBVMResponse], error)
}

// NewInternallbServiceClient constructs a client for the
// cloudstack.management.internallb.v1.InternallbService service. By default, it uses the Connect
// protocol with the binary Protobuf Codec, asks for gzipped responses, and sends uncompressed
// requests. To use the gRPC or gRPC-Web protocols, supply the connect.WithGRPC() or
// connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewInternallbServiceClient(httpClient connect.HTTPClient, baseURL string, opts ...connect.ClientOption) InternallbServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	internallbServiceMethods := v1.File_cloudstack_management_internallb_v1_internallb_gen_proto.Services().ByName("InternallbService").Methods()
	return &internallbServiceClient{
		configureInternalLoadBalancerElement: connect.NewClient[v1.ConfigureInternalLoadBalancerElementRequest, v1.ConfigureInternalLoadBalancerElementResponse](
			httpClient,
			baseURL+InternallbServiceConfigureInternalLoadBalancerElementProcedure,
			connect.WithSchema(internallbServiceMethods.ByName("ConfigureInternalLoadBalancerElement")),
			connect.WithClientOptions(opts...),
		),
		createInternalLoadBalancerElement: connect.NewClient[v1.CreateInternalLoadBalancerElementRequest, v1.CreateInternalLoadBalancerElementResponse](
			httpClient,
			baseURL+InternallbServiceCreateInternalLoadBalancerElementProcedure,
			connect.WithSchema(internallbServiceMethods.ByName("CreateInternalLoadBalancerElement")),
			connect.WithClientOptions(opts...),
		),
		listInternalLBVMs: connect.NewClient[v1.ListInternalLBVMsRequest, v1.ListInternalLBVMsResponse](
			httpClient,
			baseURL+InternallbServiceListInternalLBVMsProcedure,
			connect.WithSchema(internallbServiceMethods.ByName("ListInternalLBVMs")),
			connect.WithClientOptions(opts...),
		),
		listInternalLoadBalancerElements: connect.NewClient[v1.ListInternalLoadBalancerElementsRequest, v1.ListInternalLoadBalancerElementsResponse](
			httpClient,
			baseURL+InternallbServiceListInternalLoadBalancerElementsProcedure,
			connect.WithSchema(internallbServiceMethods.ByName("ListInternalLoadBalancerElements")),
			connect.WithClientOptions(opts...),
		),
		startInternalLBVM: connect.NewClient[v1.StartInternalLBVMRequest, v1.StartInternalLBVMResponse](
			httpClient,
			baseURL+InternallbServiceStartInternalLBVMProcedure,
			connect.WithSchema(internallbServiceMethods.ByName("StartInternalLBVM")),
			connect.WithClientOptions(opts...),
		),
		stopInternalLBVM: connect.NewClient[v1.StopInternalLBVMRequest, v1.StopInternalLBVMResponse](
			httpClient,
			baseURL+InternallbServiceStopInternalLBVMProcedure,
			connect.WithSchema(internallbServiceMethods.ByName("StopInternalLBVM")),
			connect.WithClientOptions(opts...),
		),
	}
}

// internallbServiceClient implements InternallbServiceClient.
type internallbServiceClient struct {
	configureInternalLoadBalancerElement *connect.Client[v1.ConfigureInternalLoadBalancerElementRequest, v1.ConfigureInternalLoadBalancerElementResponse]
	createInternalLoadBalancerElement    *connect.Client[v1.CreateInternalLoadBalancerElementRequest, v1.CreateInternalLoadBalancerElementResponse]
	listInternalLBVMs                    *connect.Client[v1.ListInternalLBVMsRequest, v1.ListInternalLBVMsResponse]
	listInternalLoadBalancerElements     *connect.Client[v1.ListInternalLoadBalancerElementsRequest, v1.ListInternalLoadBalancerElementsResponse]
	startInternalLBVM                    *connect.Client[v1.StartInternalLBVMRequest, v1.StartInternalLBVMResponse]
	stopInternalLBVM                     *connect.Client[v1.StopInternalLBVMRequest, v1.StopInternalLBVMResponse]
}

// ConfigureInternalLoadBalancerElement calls
// cloudstack.management.internallb.v1.InternallbService.ConfigureInternalLoadBalancerElement.
func (c *internallbServiceClient) ConfigureInternalLoadBalancerElement(ctx context.Context, req *connect.Request[v1.ConfigureInternalLoadBalancerElementRequest]) (*connect.Response[v1.ConfigureInternalLoadBalancerElementResponse], error) {
	return c.configureInternalLoadBalancerElement.CallUnary(ctx, req)
}

// CreateInternalLoadBalancerElement calls
// cloudstack.management.internallb.v1.InternallbService.CreateInternalLoadBalancerElement.
func (c *internallbServiceClient) CreateInternalLoadBalancerElement(ctx context.Context, req *connect.Request[v1.CreateInternalLoadBalancerElementRequest]) (*connect.Response[v1.CreateInternalLoadBalancerElementResponse], error) {
	return c.createInternalLoadBalancerElement.CallUnary(ctx, req)
}

// ListInternalLBVMs calls cloudstack.management.internallb.v1.InternallbService.ListInternalLBVMs.
func (c *internallbServiceClient) ListInternalLBVMs(ctx context.Context, req *connect.Request[v1.ListInternalLBVMsRequest]) (*connect.Response[v1.ListInternalLBVMsResponse], error) {
	return c.listInternalLBVMs.CallUnary(ctx, req)
}

// ListInternalLoadBalancerElements calls
// cloudstack.management.internallb.v1.InternallbService.ListInternalLoadBalancerElements.
func (c *internallbServiceClient) ListInternalLoadBalancerElements(ctx context.Context, req *connect.Request[v1.ListInternalLoadBalancerElementsRequest]) (*connect.Response[v1.ListInternalLoadBalancerElementsResponse], error) {
	return c.listInternalLoadBalancerElements.CallUnary(ctx, req)
}

// StartInternalLBVM calls cloudstack.management.internallb.v1.InternallbService.StartInternalLBVM.
func (c *internallbServiceClient) StartInternalLBVM(ctx context.Context, req *connect.Request[v1.StartInternalLBVMRequest]) (*connect.Response[v1.StartInternalLBVMResponse], error) {
	return c.startInternalLBVM.CallUnary(ctx, req)
}

// StopInternalLBVM calls cloudstack.management.internallb.v1.InternallbService.StopInternalLBVM.
func (c *internallbServiceClient) StopInternalLBVM(ctx context.Context, req *connect.Request[v1.StopInternalLBVMRequest]) (*connect.Response[v1.StopInternalLBVMResponse], error) {
	return c.stopInternalLBVM.CallUnary(ctx, req)
}

// InternallbServiceHandler is an implementation of the
// cloudstack.management.internallb.v1.InternallbService service.
type InternallbServiceHandler interface {
	// ConfigureInternalLoadBalancerElement Configures an Internal Load Balancer element.
	ConfigureInternalLoadBalancerElement(context.Context, *connect.Request[v1.ConfigureInternalLoadBalancerElementRequest]) (*connect.Response[v1.ConfigureInternalLoadBalancerElementResponse], error)
	// CreateInternalLoadBalancerElement Create an Internal Load Balancer element.
	CreateInternalLoadBalancerElement(context.Context, *connect.Request[v1.CreateInternalLoadBalancerElementRequest]) (*connect.Response[v1.CreateInternalLoadBalancerElementResponse], error)
	// ListInternalLBVMs List internal LB VMs.
	ListInternalLBVMs(context.Context, *connect.Request[v1.ListInternalLBVMsRequest]) (*connect.Response[v1.ListInternalLBVMsResponse], error)
	// ListInternalLoadBalancerElements Lists all available Internal Load Balancer elements.
	ListInternalLoadBalancerElements(context.Context, *connect.Request[v1.ListInternalLoadBalancerElementsRequest]) (*connect.Response[v1.ListInternalLoadBalancerElementsResponse], error)
	// StartInternalLBVM Starts an existing internal lb vm.
	StartInternalLBVM(context.Context, *connect.Request[v1.StartInternalLBVMRequest]) (*connect.Response[v1.StartInternalLBVMResponse], error)
	// StopInternalLBVM Stops an Internal LB vm.
	StopInternalLBVM(context.Context, *connect.Request[v1.StopInternalLBVMRequest]) (*connect.Response[v1.StopInternalLBVMResponse], error)
}

// NewInternallbServiceHandler builds an HTTP handler from the service implementation. It returns
// the path on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewInternallbServiceHandler(svc InternallbServiceHandler, opts ...connect.HandlerOption) (string, http.Handler) {
	internallbServiceMethods := v1.File_cloudstack_management_internallb_v1_internallb_gen_proto.Services().ByName("InternallbService").Methods()
	internallbServiceConfigureInternalLoadBalancerElementHandler := connect.NewUnaryHandler(
		InternallbServiceConfigureInternalLoadBalancerElementProcedure,
		svc.ConfigureInternalLoadBalancerElement,
		connect.WithSchema(internallbServiceMethods.ByName("ConfigureInternalLoadBalancerElement")),
		connect.WithHandlerOptions(opts...),
	)
	internallbServiceCreateInternalLoadBalancerElementHandler := connect.NewUnaryHandler(
		InternallbServiceCreateInternalLoadBalancerElementProcedure,
		svc.CreateInternalLoadBalancerElement,
		connect.WithSchema(internallbServiceMethods.ByName("CreateInternalLoadBalancerElement")),
		connect.WithHandlerOptions(opts...),
	)
	internallbServiceListInternalLBVMsHandler := connect.NewUnaryHandler(
		InternallbServiceListInternalLBVMsProcedure,
		svc.ListInternalLBVMs,
		connect.WithSchema(internallbServiceMethods.ByName("ListInternalLBVMs")),
		connect.WithHandlerOptions(opts...),
	)
	internallbServiceListInternalLoadBalancerElementsHandler := connect.NewUnaryHandler(
		InternallbServiceListInternalLoadBalancerElementsProcedure,
		svc.ListInternalLoadBalancerElements,
		connect.WithSchema(internallbServiceMethods.ByName("ListInternalLoadBalancerElements")),
		connect.WithHandlerOptions(opts...),
	)
	internallbServiceStartInternalLBVMHandler := connect.NewUnaryHandler(
		InternallbServiceStartInternalLBVMProcedure,
		svc.StartInternalLBVM,
		connect.WithSchema(internallbServiceMethods.ByName("StartInternalLBVM")),
		connect.WithHandlerOptions(opts...),
	)
	internallbServiceStopInternalLBVMHandler := connect.NewUnaryHandler(
		InternallbServiceStopInternalLBVMProcedure,
		svc.StopInternalLBVM,
		connect.WithSchema(internallbServiceMethods.ByName("StopInternalLBVM")),
		connect.WithHandlerOptions(opts...),
	)
	return "/cloudstack.management.internallb.v1.InternallbService/", http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		switch r.URL.Path {
		case InternallbServiceConfigureInternalLoadBalancerElementProcedure:
			internallbServiceConfigureInternalLoadBalancerElementHandler.ServeHTTP(w, r)
		case InternallbServiceCreateInternalLoadBalancerElementProcedure:
			internallbServiceCreateInternalLoadBalancerElementHandler.ServeHTTP(w, r)
		case InternallbServiceListInternalLBVMsProcedure:
			internallbServiceListInternalLBVMsHandler.ServeHTTP(w, r)
		case InternallbServiceListInternalLoadBalancerElementsProcedure:
			internallbServiceListInternalLoadBalancerElementsHandler.ServeHTTP(w, r)
		case InternallbServiceStartInternalLBVMProcedure:
			internallbServiceStartInternalLBVMHandler.ServeHTTP(w, r)
		case InternallbServiceStopInternalLBVMProcedure:
			internallbServiceStopInternalLBVMHandler.ServeHTTP(w, r)
		default:
			http.NotFound(w, r)
		}
	})
}

// UnimplementedInternallbServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedInternallbServiceHandler struct{}

func (UnimplementedInternallbServiceHandler) ConfigureInternalLoadBalancerElement(context.Context, *connect.Request[v1.ConfigureInternalLoadBalancerElementRequest]) (*connect.Response[v1.ConfigureInternalLoadBalancerElementResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("cloudstack.management.internallb.v1.InternallbService.ConfigureInternalLoadBalancerElement is not implemented"))
}

func (UnimplementedInternallbServiceHandler) CreateInternalLoadBalancerElement(context.Context, *connect.Request[v1.CreateInternalLoadBalancerElementRequest]) (*connect.Response[v1.CreateInternalLoadBalancerElementResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("cloudstack.management.internallb.v1.InternallbService.CreateInternalLoadBalancerElement is not implemented"))
}

func (UnimplementedInternallbServiceHandler) ListInternalLBVMs(context.Context, *connect.Request[v1.ListInternalLBVMsRequest]) (*connect.Response[v1.ListInternalLBVMsResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("cloudstack.management.internallb.v1.InternallbService.ListInternalLBVMs is not implemented"))
}

func (UnimplementedInternallbServiceHandler) ListInternalLoadBalancerElements(context.Context, *connect.Request[v1.ListInternalLoadBalancerElementsRequest]) (*connect.Response[v1.ListInternalLoadBalancerElementsResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("cloudstack.management.internallb.v1.InternallbService.ListInternalLoadBalancerElements is not implemented"))
}

func (UnimplementedInternallbServiceHandler) StartInternalLBVM(context.Context, *connect.Request[v1.StartInternalLBVMRequest]) (*connect.Response[v1.StartInternalLBVMResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("cloudstack.management.internallb.v1.InternallbService.StartInternalLBVM is not implemented"))
}

func (UnimplementedInternallbServiceHandler) StopInternalLBVM(context.Context, *connect.Request[v1.StopInternalLBVMRequest]) (*connect.Response[v1.StopInternalLBVMResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("cloudstack.management.internallb.v1.InternallbService.StopInternalLBVM is not implemented"))
}
