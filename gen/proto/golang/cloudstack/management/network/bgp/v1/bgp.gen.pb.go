// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: cloudstack/management/network/bgp/v1/bgp.gen.proto

package bgpv1

import (
	_ "github.com/walteh/cloudstack-proxy/gen/proto/golang/cloudstack/annotations"
	_ "github.com/walteh/cloudstack-proxy/gen/proto/golang/cloudstack/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// DedicateBgpPeerRequest represents the parameters for dedicates an existing bgp peer to an account or a domain.
type DedicateBgpPeerRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Id of the Bgp Peer
	Id *int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// account who will own the Bgp Peer
	AccountName *string `protobuf:"bytes,2,opt,name=account_name,json=accountName" json:"account_name,omitempty"`
	// project who will own the Bgp Peer
	ProjectId *int64 `protobuf:"varint,3,opt,name=project_id,json=projectId" json:"project_id,omitempty"`
	// domain ID of the account owning the Bgp Peer
	DomainId *int64 `protobuf:"varint,4,opt,name=domain_id,json=domainId" json:"domain_id,omitempty"`
	StartEventId *int64 `protobuf:"varint,5,opt,name=start_event_id,json=startEventId" json:"start_event_id,omitempty"`
	InjectedJobId *string `protobuf:"bytes,6,opt,name=injected_job_id,json=injectedJobId" json:"injected_job_id,omitempty"`
	ResponseType  *string `protobuf:"bytes,7,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DedicateBgpPeerRequest) Reset() {
	*x = DedicateBgpPeerRequest{}
	mi := &file_cloudstack_management_network_bgp_v1_bgp_gen_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DedicateBgpPeerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DedicateBgpPeerRequest) ProtoMessage() {}

func (x *DedicateBgpPeerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_network_bgp_v1_bgp_gen_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DedicateBgpPeerRequest.ProtoReflect.Descriptor instead.
func (*DedicateBgpPeerRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_network_bgp_v1_bgp_gen_proto_rawDescGZIP(), []int{0}
}

func (x *DedicateBgpPeerRequest) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *DedicateBgpPeerRequest) GetAccountName() string {
	if x != nil && x.AccountName != nil {
		return *x.AccountName
	}
	return ""
}

func (x *DedicateBgpPeerRequest) GetProjectId() int64 {
	if x != nil && x.ProjectId != nil {
		return *x.ProjectId
	}
	return 0
}

func (x *DedicateBgpPeerRequest) GetDomainId() int64 {
	if x != nil && x.DomainId != nil {
		return *x.DomainId
	}
	return 0
}

func (x *DedicateBgpPeerRequest) GetStartEventId() int64 {
	if x != nil && x.StartEventId != nil {
		return *x.StartEventId
	}
	return 0
}

func (x *DedicateBgpPeerRequest) GetInjectedJobId() string {
	if x != nil && x.InjectedJobId != nil {
		return *x.InjectedJobId
	}
	return ""
}

func (x *DedicateBgpPeerRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// DedicateBgpPeerResponse represents the response from dedicates an existing bgp peer to an account or a domain.
type DedicateBgpPeerResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Result
	Result        *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DedicateBgpPeerResponse) Reset() {
	*x = DedicateBgpPeerResponse{}
	mi := &file_cloudstack_management_network_bgp_v1_bgp_gen_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DedicateBgpPeerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DedicateBgpPeerResponse) ProtoMessage() {}

func (x *DedicateBgpPeerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_network_bgp_v1_bgp_gen_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DedicateBgpPeerResponse.ProtoReflect.Descriptor instead.
func (*DedicateBgpPeerResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_network_bgp_v1_bgp_gen_proto_rawDescGZIP(), []int{1}
}

func (x *DedicateBgpPeerResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// ListBgpPeersRequest represents the parameters for lists bgp peers.
type ListBgpPeersRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// UUID of the Bgp Peer.
	Id *int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// UUID of zone to which the Bgp Peer belongs to.
	ZoneId *int64 `protobuf:"varint,2,opt,name=zone_id,json=zoneId" json:"zone_id,omitempty"`
	// AS number of the Bgp Peer.
	AsNumber *int64 `protobuf:"varint,3,opt,name=as_number,json=asNumber" json:"as_number,omitempty"`
	// the account which the Bgp Peer is dedicated to. Must be used with the domainId parameter.
	AccountName *string `protobuf:"bytes,4,opt,name=account_name,json=accountName" json:"account_name,omitempty"`
	// project who which the Bgp Peer is dedicated to
	ProjectId *int64 `protobuf:"varint,5,opt,name=project_id,json=projectId" json:"project_id,omitempty"`
	// the domain ID which the Bgp Peer is dedicated to.
	DomainId *int64 `protobuf:"varint,6,opt,name=domain_id,json=domainId" json:"domain_id,omitempty"`
	// Lists only dedicated or non-dedicated Bgp Peers. If not set, lists all dedicated and non-dedicated BGP peers the domain/account can access.
	IsDedicated *bool `protobuf:"varint,7,opt,name=is_dedicated,json=isDedicated" json:"is_dedicated,omitempty"`
	// List by keyword
	Keyword *string `protobuf:"bytes,8,opt,name=keyword" json:"keyword,omitempty"`
	Page *int32 `protobuf:"varint,9,opt,name=page" json:"page,omitempty"`
	PageSize *int32 `protobuf:"varint,10,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	ResponseType  *string `protobuf:"bytes,11,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListBgpPeersRequest) Reset() {
	*x = ListBgpPeersRequest{}
	mi := &file_cloudstack_management_network_bgp_v1_bgp_gen_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListBgpPeersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBgpPeersRequest) ProtoMessage() {}

func (x *ListBgpPeersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_network_bgp_v1_bgp_gen_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBgpPeersRequest.ProtoReflect.Descriptor instead.
func (*ListBgpPeersRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_network_bgp_v1_bgp_gen_proto_rawDescGZIP(), []int{2}
}

func (x *ListBgpPeersRequest) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *ListBgpPeersRequest) GetZoneId() int64 {
	if x != nil && x.ZoneId != nil {
		return *x.ZoneId
	}
	return 0
}

func (x *ListBgpPeersRequest) GetAsNumber() int64 {
	if x != nil && x.AsNumber != nil {
		return *x.AsNumber
	}
	return 0
}

func (x *ListBgpPeersRequest) GetAccountName() string {
	if x != nil && x.AccountName != nil {
		return *x.AccountName
	}
	return ""
}

func (x *ListBgpPeersRequest) GetProjectId() int64 {
	if x != nil && x.ProjectId != nil {
		return *x.ProjectId
	}
	return 0
}

func (x *ListBgpPeersRequest) GetDomainId() int64 {
	if x != nil && x.DomainId != nil {
		return *x.DomainId
	}
	return 0
}

func (x *ListBgpPeersRequest) GetIsDedicated() bool {
	if x != nil && x.IsDedicated != nil {
		return *x.IsDedicated
	}
	return false
}

func (x *ListBgpPeersRequest) GetKeyword() string {
	if x != nil && x.Keyword != nil {
		return *x.Keyword
	}
	return ""
}

func (x *ListBgpPeersRequest) GetPage() int32 {
	if x != nil && x.Page != nil {
		return *x.Page
	}
	return 0
}

func (x *ListBgpPeersRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListBgpPeersRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// ListBgpPeersResponse represents the response from lists bgp peers.
type ListBgpPeersResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The list of BgpPeers
	Items []*BgpPeer `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	// The total count of BgpPeers
	TotalCount    *int32 `protobuf:"varint,2,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListBgpPeersResponse) Reset() {
	*x = ListBgpPeersResponse{}
	mi := &file_cloudstack_management_network_bgp_v1_bgp_gen_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListBgpPeersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBgpPeersResponse) ProtoMessage() {}

func (x *ListBgpPeersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_network_bgp_v1_bgp_gen_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBgpPeersResponse.ProtoReflect.Descriptor instead.
func (*ListBgpPeersResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_network_bgp_v1_bgp_gen_proto_rawDescGZIP(), []int{3}
}

func (x *ListBgpPeersResponse) GetItems() []*BgpPeer {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListBgpPeersResponse) GetTotalCount() int32 {
	if x != nil && x.TotalCount != nil {
		return *x.TotalCount
	}
	return 0
}

// ChangeBgpPeersForNetworkRequest represents the parameters for change the bgp peers for a network.
type ChangeBgpPeersForNetworkRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// UUID of the network which the Bgp Peers are associated to.
	NetworkId *int64 `protobuf:"varint,1,opt,name=network_id,json=networkId" json:"network_id,omitempty"`
	// Ids of the Bgp Peer. If it is empty, all BGP peers will be unlinked.
	BgpPeerIds []string `protobuf:"bytes,2,rep,name=bgp_peer_ids,json=bgpPeerIds" json:"bgp_peer_ids,omitempty"`
	StartEventId *int64 `protobuf:"varint,3,opt,name=start_event_id,json=startEventId" json:"start_event_id,omitempty"`
	InjectedJobId *string `protobuf:"bytes,4,opt,name=injected_job_id,json=injectedJobId" json:"injected_job_id,omitempty"`
	ResponseType  *string `protobuf:"bytes,5,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeBgpPeersForNetworkRequest) Reset() {
	*x = ChangeBgpPeersForNetworkRequest{}
	mi := &file_cloudstack_management_network_bgp_v1_bgp_gen_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeBgpPeersForNetworkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeBgpPeersForNetworkRequest) ProtoMessage() {}

func (x *ChangeBgpPeersForNetworkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_network_bgp_v1_bgp_gen_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeBgpPeersForNetworkRequest.ProtoReflect.Descriptor instead.
func (*ChangeBgpPeersForNetworkRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_network_bgp_v1_bgp_gen_proto_rawDescGZIP(), []int{4}
}

func (x *ChangeBgpPeersForNetworkRequest) GetNetworkId() int64 {
	if x != nil && x.NetworkId != nil {
		return *x.NetworkId
	}
	return 0
}

func (x *ChangeBgpPeersForNetworkRequest) GetBgpPeerIds() []string {
	if x != nil {
		return x.BgpPeerIds
	}
	return nil
}

func (x *ChangeBgpPeersForNetworkRequest) GetStartEventId() int64 {
	if x != nil && x.StartEventId != nil {
		return *x.StartEventId
	}
	return 0
}

func (x *ChangeBgpPeersForNetworkRequest) GetInjectedJobId() string {
	if x != nil && x.InjectedJobId != nil {
		return *x.InjectedJobId
	}
	return ""
}

func (x *ChangeBgpPeersForNetworkRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// ChangeBgpPeersForNetworkResponse represents the response from change the bgp peers for a network.
type ChangeBgpPeersForNetworkResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Result
	Result        *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeBgpPeersForNetworkResponse) Reset() {
	*x = ChangeBgpPeersForNetworkResponse{}
	mi := &file_cloudstack_management_network_bgp_v1_bgp_gen_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeBgpPeersForNetworkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeBgpPeersForNetworkResponse) ProtoMessage() {}

func (x *ChangeBgpPeersForNetworkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_network_bgp_v1_bgp_gen_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeBgpPeersForNetworkResponse.ProtoReflect.Descriptor instead.
func (*ChangeBgpPeersForNetworkResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_network_bgp_v1_bgp_gen_proto_rawDescGZIP(), []int{5}
}

func (x *ChangeBgpPeersForNetworkResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// UpdateBgpPeerRequest represents the parameters for updates an existing bgp peer.
type UpdateBgpPeerRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Id of the Bgp Peer
	Id *int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// The IPv4 address of the Bgp Peer.
	Ip4Address *string `protobuf:"bytes,2,opt,name=ip4_address,json=ip4Address" json:"ip4_address,omitempty"`
	// The IPv6 address of the Bgp Peer.
	Ip6Address *string `protobuf:"bytes,3,opt,name=ip6_address,json=ip6Address" json:"ip6_address,omitempty"`
	// The AS number of the Bgp Peer.
	AsNumber *int64 `protobuf:"varint,4,opt,name=as_number,json=asNumber" json:"as_number,omitempty"`
	// The password of the Bgp Peer.
	Password *string `protobuf:"bytes,5,opt,name=password" json:"password,omitempty"`
	// BGP peer details in key/value pairs.
	Details map[string]string `protobuf:"bytes,6,rep,name=details" json:"details,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// optional boolean field, which indicates if details should be cleaned up or not (if set to true, details are removed for this resource; if false or not set, no action)
	CleanupDetails *bool `protobuf:"varint,7,opt,name=cleanup_details,json=cleanupDetails" json:"cleanup_details,omitempty"`
	StartEventId *int64 `protobuf:"varint,8,opt,name=start_event_id,json=startEventId" json:"start_event_id,omitempty"`
	InjectedJobId *string `protobuf:"bytes,9,opt,name=injected_job_id,json=injectedJobId" json:"injected_job_id,omitempty"`
	ResponseType  *string `protobuf:"bytes,10,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateBgpPeerRequest) Reset() {
	*x = UpdateBgpPeerRequest{}
	mi := &file_cloudstack_management_network_bgp_v1_bgp_gen_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateBgpPeerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBgpPeerRequest) ProtoMessage() {}

func (x *UpdateBgpPeerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_network_bgp_v1_bgp_gen_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBgpPeerRequest.ProtoReflect.Descriptor instead.
func (*UpdateBgpPeerRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_network_bgp_v1_bgp_gen_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateBgpPeerRequest) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *UpdateBgpPeerRequest) GetIp4Address() string {
	if x != nil && x.Ip4Address != nil {
		return *x.Ip4Address
	}
	return ""
}

func (x *UpdateBgpPeerRequest) GetIp6Address() string {
	if x != nil && x.Ip6Address != nil {
		return *x.Ip6Address
	}
	return ""
}

func (x *UpdateBgpPeerRequest) GetAsNumber() int64 {
	if x != nil && x.AsNumber != nil {
		return *x.AsNumber
	}
	return 0
}

func (x *UpdateBgpPeerRequest) GetPassword() string {
	if x != nil && x.Password != nil {
		return *x.Password
	}
	return ""
}

func (x *UpdateBgpPeerRequest) GetDetails() map[string]string {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *UpdateBgpPeerRequest) GetCleanupDetails() bool {
	if x != nil && x.CleanupDetails != nil {
		return *x.CleanupDetails
	}
	return false
}

func (x *UpdateBgpPeerRequest) GetStartEventId() int64 {
	if x != nil && x.StartEventId != nil {
		return *x.StartEventId
	}
	return 0
}

func (x *UpdateBgpPeerRequest) GetInjectedJobId() string {
	if x != nil && x.InjectedJobId != nil {
		return *x.InjectedJobId
	}
	return ""
}

func (x *UpdateBgpPeerRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// UpdateBgpPeerResponse represents the response from updates an existing bgp peer.
type UpdateBgpPeerResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Result
	Result        *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateBgpPeerResponse) Reset() {
	*x = UpdateBgpPeerResponse{}
	mi := &file_cloudstack_management_network_bgp_v1_bgp_gen_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateBgpPeerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBgpPeerResponse) ProtoMessage() {}

func (x *UpdateBgpPeerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_network_bgp_v1_bgp_gen_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBgpPeerResponse.ProtoReflect.Descriptor instead.
func (*UpdateBgpPeerResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_network_bgp_v1_bgp_gen_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateBgpPeerResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// DeleteBgpPeerRequest represents the parameters for deletes an existing bgp peer.
type DeleteBgpPeerRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Id of the Bgp Peer
	Id *int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	StartEventId *int64 `protobuf:"varint,2,opt,name=start_event_id,json=startEventId" json:"start_event_id,omitempty"`
	InjectedJobId *string `protobuf:"bytes,3,opt,name=injected_job_id,json=injectedJobId" json:"injected_job_id,omitempty"`
	ResponseType  *string `protobuf:"bytes,4,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteBgpPeerRequest) Reset() {
	*x = DeleteBgpPeerRequest{}
	mi := &file_cloudstack_management_network_bgp_v1_bgp_gen_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteBgpPeerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBgpPeerRequest) ProtoMessage() {}

func (x *DeleteBgpPeerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_network_bgp_v1_bgp_gen_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBgpPeerRequest.ProtoReflect.Descriptor instead.
func (*DeleteBgpPeerRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_network_bgp_v1_bgp_gen_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteBgpPeerRequest) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *DeleteBgpPeerRequest) GetStartEventId() int64 {
	if x != nil && x.StartEventId != nil {
		return *x.StartEventId
	}
	return 0
}

func (x *DeleteBgpPeerRequest) GetInjectedJobId() string {
	if x != nil && x.InjectedJobId != nil {
		return *x.InjectedJobId
	}
	return ""
}

func (x *DeleteBgpPeerRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// DeleteBgpPeerResponse represents the response from deletes an existing bgp peer.
type DeleteBgpPeerResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Result
	Result        *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteBgpPeerResponse) Reset() {
	*x = DeleteBgpPeerResponse{}
	mi := &file_cloudstack_management_network_bgp_v1_bgp_gen_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteBgpPeerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBgpPeerResponse) ProtoMessage() {}

func (x *DeleteBgpPeerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_network_bgp_v1_bgp_gen_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBgpPeerResponse.ProtoReflect.Descriptor instead.
func (*DeleteBgpPeerResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_network_bgp_v1_bgp_gen_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteBgpPeerResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// ReleaseDedicatedBgpPeerRequest represents the parameters for releases an existing dedicated bgp peer.
type ReleaseDedicatedBgpPeerRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Id of the Bgp Peer
	Id *int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	StartEventId *int64 `protobuf:"varint,2,opt,name=start_event_id,json=startEventId" json:"start_event_id,omitempty"`
	InjectedJobId *string `protobuf:"bytes,3,opt,name=injected_job_id,json=injectedJobId" json:"injected_job_id,omitempty"`
	ResponseType  *string `protobuf:"bytes,4,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReleaseDedicatedBgpPeerRequest) Reset() {
	*x = ReleaseDedicatedBgpPeerRequest{}
	mi := &file_cloudstack_management_network_bgp_v1_bgp_gen_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleaseDedicatedBgpPeerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseDedicatedBgpPeerRequest) ProtoMessage() {}

func (x *ReleaseDedicatedBgpPeerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_network_bgp_v1_bgp_gen_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseDedicatedBgpPeerRequest.ProtoReflect.Descriptor instead.
func (*ReleaseDedicatedBgpPeerRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_network_bgp_v1_bgp_gen_proto_rawDescGZIP(), []int{10}
}

func (x *ReleaseDedicatedBgpPeerRequest) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *ReleaseDedicatedBgpPeerRequest) GetStartEventId() int64 {
	if x != nil && x.StartEventId != nil {
		return *x.StartEventId
	}
	return 0
}

func (x *ReleaseDedicatedBgpPeerRequest) GetInjectedJobId() string {
	if x != nil && x.InjectedJobId != nil {
		return *x.InjectedJobId
	}
	return ""
}

func (x *ReleaseDedicatedBgpPeerRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// ReleaseDedicatedBgpPeerResponse represents the response from releases an existing dedicated bgp peer.
type ReleaseDedicatedBgpPeerResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Result
	Result        *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReleaseDedicatedBgpPeerResponse) Reset() {
	*x = ReleaseDedicatedBgpPeerResponse{}
	mi := &file_cloudstack_management_network_bgp_v1_bgp_gen_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleaseDedicatedBgpPeerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseDedicatedBgpPeerResponse) ProtoMessage() {}

func (x *ReleaseDedicatedBgpPeerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_network_bgp_v1_bgp_gen_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseDedicatedBgpPeerResponse.ProtoReflect.Descriptor instead.
func (*ReleaseDedicatedBgpPeerResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_network_bgp_v1_bgp_gen_proto_rawDescGZIP(), []int{11}
}

func (x *ReleaseDedicatedBgpPeerResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// ChangeBgpPeersForVpcRequest represents the parameters for change the bgp peers for a vpc.
type ChangeBgpPeersForVpcRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// UUID of the VPC which the Bgp Peers are associated to.
	VpcId *int64 `protobuf:"varint,1,opt,name=vpc_id,json=vpcId" json:"vpc_id,omitempty"`
	// Ids of the Bgp Peer. If it is empty, all BGP peers will be unlinked.
	BgpPeerIds []string `protobuf:"bytes,2,rep,name=bgp_peer_ids,json=bgpPeerIds" json:"bgp_peer_ids,omitempty"`
	StartEventId *int64 `protobuf:"varint,3,opt,name=start_event_id,json=startEventId" json:"start_event_id,omitempty"`
	InjectedJobId *string `protobuf:"bytes,4,opt,name=injected_job_id,json=injectedJobId" json:"injected_job_id,omitempty"`
	ResponseType  *string `protobuf:"bytes,5,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeBgpPeersForVpcRequest) Reset() {
	*x = ChangeBgpPeersForVpcRequest{}
	mi := &file_cloudstack_management_network_bgp_v1_bgp_gen_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeBgpPeersForVpcRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeBgpPeersForVpcRequest) ProtoMessage() {}

func (x *ChangeBgpPeersForVpcRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_network_bgp_v1_bgp_gen_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeBgpPeersForVpcRequest.ProtoReflect.Descriptor instead.
func (*ChangeBgpPeersForVpcRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_network_bgp_v1_bgp_gen_proto_rawDescGZIP(), []int{12}
}

func (x *ChangeBgpPeersForVpcRequest) GetVpcId() int64 {
	if x != nil && x.VpcId != nil {
		return *x.VpcId
	}
	return 0
}

func (x *ChangeBgpPeersForVpcRequest) GetBgpPeerIds() []string {
	if x != nil {
		return x.BgpPeerIds
	}
	return nil
}

func (x *ChangeBgpPeersForVpcRequest) GetStartEventId() int64 {
	if x != nil && x.StartEventId != nil {
		return *x.StartEventId
	}
	return 0
}

func (x *ChangeBgpPeersForVpcRequest) GetInjectedJobId() string {
	if x != nil && x.InjectedJobId != nil {
		return *x.InjectedJobId
	}
	return ""
}

func (x *ChangeBgpPeersForVpcRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// ChangeBgpPeersForVpcResponse represents the response from change the bgp peers for a vpc.
type ChangeBgpPeersForVpcResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Result
	Result        *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeBgpPeersForVpcResponse) Reset() {
	*x = ChangeBgpPeersForVpcResponse{}
	mi := &file_cloudstack_management_network_bgp_v1_bgp_gen_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeBgpPeersForVpcResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeBgpPeersForVpcResponse) ProtoMessage() {}

func (x *ChangeBgpPeersForVpcResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_network_bgp_v1_bgp_gen_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeBgpPeersForVpcResponse.ProtoReflect.Descriptor instead.
func (*ChangeBgpPeersForVpcResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_network_bgp_v1_bgp_gen_proto_rawDescGZIP(), []int{13}
}

func (x *ChangeBgpPeersForVpcResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// CreateBgpPeerRequest represents the parameters for creates a bgp peer for a zone.
type CreateBgpPeerRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// UUID of the zone which the Bgp Peer belongs to.
	ZoneId *int64 `protobuf:"varint,1,opt,name=zone_id,json=zoneId" json:"zone_id,omitempty"`
	// The IPv4 address of the Bgp Peer.
	Ip4Address *string `protobuf:"bytes,2,opt,name=ip4_address,json=ip4Address" json:"ip4_address,omitempty"`
	// The IPv6 address of the Bgp Peer.
	Ip6Address *string `protobuf:"bytes,3,opt,name=ip6_address,json=ip6Address" json:"ip6_address,omitempty"`
	// The AS number of the Bgp Peer.
	AsNumber *int64 `protobuf:"varint,4,opt,name=as_number,json=asNumber" json:"as_number,omitempty"`
	// The password of the Bgp Peer.
	Password *string `protobuf:"bytes,5,opt,name=password" json:"password,omitempty"`
	// account who will own the Bgp Peer
	AccountName *string `protobuf:"bytes,6,opt,name=account_name,json=accountName" json:"account_name,omitempty"`
	// project who will own the Bgp Peer
	ProjectId *int64 `protobuf:"varint,7,opt,name=project_id,json=projectId" json:"project_id,omitempty"`
	// domain ID of the account owning the Bgp Peer
	DomainId *int64 `protobuf:"varint,8,opt,name=domain_id,json=domainId" json:"domain_id,omitempty"`
	// BGP peer details in key/value pairs.
	Details map[string]string `protobuf:"bytes,9,rep,name=details" json:"details,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	StartEventId *int64 `protobuf:"varint,10,opt,name=start_event_id,json=startEventId" json:"start_event_id,omitempty"`
	InjectedJobId *string `protobuf:"bytes,11,opt,name=injected_job_id,json=injectedJobId" json:"injected_job_id,omitempty"`
	ResponseType  *string `protobuf:"bytes,12,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateBgpPeerRequest) Reset() {
	*x = CreateBgpPeerRequest{}
	mi := &file_cloudstack_management_network_bgp_v1_bgp_gen_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBgpPeerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBgpPeerRequest) ProtoMessage() {}

func (x *CreateBgpPeerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_network_bgp_v1_bgp_gen_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBgpPeerRequest.ProtoReflect.Descriptor instead.
func (*CreateBgpPeerRequest) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_network_bgp_v1_bgp_gen_proto_rawDescGZIP(), []int{14}
}

func (x *CreateBgpPeerRequest) GetZoneId() int64 {
	if x != nil && x.ZoneId != nil {
		return *x.ZoneId
	}
	return 0
}

func (x *CreateBgpPeerRequest) GetIp4Address() string {
	if x != nil && x.Ip4Address != nil {
		return *x.Ip4Address
	}
	return ""
}

func (x *CreateBgpPeerRequest) GetIp6Address() string {
	if x != nil && x.Ip6Address != nil {
		return *x.Ip6Address
	}
	return ""
}

func (x *CreateBgpPeerRequest) GetAsNumber() int64 {
	if x != nil && x.AsNumber != nil {
		return *x.AsNumber
	}
	return 0
}

func (x *CreateBgpPeerRequest) GetPassword() string {
	if x != nil && x.Password != nil {
		return *x.Password
	}
	return ""
}

func (x *CreateBgpPeerRequest) GetAccountName() string {
	if x != nil && x.AccountName != nil {
		return *x.AccountName
	}
	return ""
}

func (x *CreateBgpPeerRequest) GetProjectId() int64 {
	if x != nil && x.ProjectId != nil {
		return *x.ProjectId
	}
	return 0
}

func (x *CreateBgpPeerRequest) GetDomainId() int64 {
	if x != nil && x.DomainId != nil {
		return *x.DomainId
	}
	return 0
}

func (x *CreateBgpPeerRequest) GetDetails() map[string]string {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *CreateBgpPeerRequest) GetStartEventId() int64 {
	if x != nil && x.StartEventId != nil {
		return *x.StartEventId
	}
	return 0
}

func (x *CreateBgpPeerRequest) GetInjectedJobId() string {
	if x != nil && x.InjectedJobId != nil {
		return *x.InjectedJobId
	}
	return ""
}

func (x *CreateBgpPeerRequest) GetResponseType() string {
	if x != nil && x.ResponseType != nil {
		return *x.ResponseType
	}
	return ""
}

// CreateBgpPeerResponse represents the response from creates a bgp peer for a zone.
type CreateBgpPeerResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Result
	Result        *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateBgpPeerResponse) Reset() {
	*x = CreateBgpPeerResponse{}
	mi := &file_cloudstack_management_network_bgp_v1_bgp_gen_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBgpPeerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBgpPeerResponse) ProtoMessage() {}

func (x *CreateBgpPeerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_network_bgp_v1_bgp_gen_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBgpPeerResponse.ProtoReflect.Descriptor instead.
func (*CreateBgpPeerResponse) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_network_bgp_v1_bgp_gen_proto_rawDescGZIP(), []int{15}
}

func (x *CreateBgpPeerResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// BgpPeer represents a BgpPeer Item
type BgpPeer struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the BgpPeer
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// The name of the BgpPeer
	Name *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// The display name of the BgpPeer
	DisplayName *string `protobuf:"bytes,3,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	// The description of the BgpPeer
	Description *string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	// The date this entity was created
	Created       *string `protobuf:"bytes,5,opt,name=created" json:"created,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BgpPeer) Reset() {
	*x = BgpPeer{}
	mi := &file_cloudstack_management_network_bgp_v1_bgp_gen_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpPeer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpPeer) ProtoMessage() {}

func (x *BgpPeer) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_network_bgp_v1_bgp_gen_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpPeer.ProtoReflect.Descriptor instead.
func (*BgpPeer) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_network_bgp_v1_bgp_gen_proto_rawDescGZIP(), []int{16}
}

func (x *BgpPeer) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *BgpPeer) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *BgpPeer) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *BgpPeer) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *BgpPeer) GetCreated() string {
	if x != nil && x.Created != nil {
		return *x.Created
	}
	return ""
}

// Success represents a Success Operation Response
type Success struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// true if operation is executed successfully
	Success *bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	// any text associated with the success or failure
	DisplayText   *string `protobuf:"bytes,2,opt,name=display_text,json=displayText" json:"display_text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Success) Reset() {
	*x = Success{}
	mi := &file_cloudstack_management_network_bgp_v1_bgp_gen_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Success) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Success) ProtoMessage() {}

func (x *Success) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_network_bgp_v1_bgp_gen_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Success.ProtoReflect.Descriptor instead.
func (*Success) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_network_bgp_v1_bgp_gen_proto_rawDescGZIP(), []int{17}
}

func (x *Success) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *Success) GetDisplayText() string {
	if x != nil && x.DisplayText != nil {
		return *x.DisplayText
	}
	return ""
}

// Item represents a generic item in a list response
type Item struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the item
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// The name of the item
	Name *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// The display name of the item
	DisplayName *string `protobuf:"bytes,3,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	// The description of the item
	Description *string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	// The account ID the item belongs to
	AccountId *string `protobuf:"bytes,5,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	// The domain ID the item belongs to
	DomainId *string `protobuf:"bytes,6,opt,name=domain_id,json=domainId" json:"domain_id,omitempty"`
	// The domain name the item belongs to
	Domain *string `protobuf:"bytes,7,opt,name=domain" json:"domain,omitempty"`
	// The project ID the item belongs to
	ProjectId *string `protobuf:"bytes,8,opt,name=project_id,json=projectId" json:"project_id,omitempty"`
	// The project name the item belongs to
	Project *string `protobuf:"bytes,9,opt,name=project" json:"project,omitempty"`
	// The date the item was created
	Created *string `protobuf:"bytes,10,opt,name=created" json:"created,omitempty"`
	// The state of the item
	State *string `protobuf:"bytes,11,opt,name=state" json:"state,omitempty"`
	// Additional fields returned by the API
	Details       map[string]string `protobuf:"bytes,12,rep,name=details" json:"details,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Item) Reset() {
	*x = Item{}
	mi := &file_cloudstack_management_network_bgp_v1_bgp_gen_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_network_bgp_v1_bgp_gen_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_network_bgp_v1_bgp_gen_proto_rawDescGZIP(), []int{18}
}

func (x *Item) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Item) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Item) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *Item) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *Item) GetAccountId() string {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return ""
}

func (x *Item) GetDomainId() string {
	if x != nil && x.DomainId != nil {
		return *x.DomainId
	}
	return ""
}

func (x *Item) GetDomain() string {
	if x != nil && x.Domain != nil {
		return *x.Domain
	}
	return ""
}

func (x *Item) GetProjectId() string {
	if x != nil && x.ProjectId != nil {
		return *x.ProjectId
	}
	return ""
}

func (x *Item) GetProject() string {
	if x != nil && x.Project != nil {
		return *x.Project
	}
	return ""
}

func (x *Item) GetCreated() string {
	if x != nil && x.Created != nil {
		return *x.Created
	}
	return ""
}

func (x *Item) GetState() string {
	if x != nil && x.State != nil {
		return *x.State
	}
	return ""
}

func (x *Item) GetDetails() map[string]string {
	if x != nil {
		return x.Details
	}
	return nil
}

// Result represents a generic operation result
type Result struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether the operation was successful
	Success *bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	// Any text associated with the success or failure
	DisplayText *string `protobuf:"bytes,2,opt,name=display_text,json=displayText" json:"display_text,omitempty"`
	// The ID of the resource affected by the operation
	Id *string `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	// The job ID for an async operation
	JobId *string `protobuf:"bytes,4,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
	// The status of the job
	JobStatus     *string `protobuf:"bytes,5,opt,name=job_status,json=jobStatus" json:"job_status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Result) Reset() {
	*x = Result{}
	mi := &file_cloudstack_management_network_bgp_v1_bgp_gen_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_management_network_bgp_v1_bgp_gen_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_cloudstack_management_network_bgp_v1_bgp_gen_proto_rawDescGZIP(), []int{19}
}

func (x *Result) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *Result) GetDisplayText() string {
	if x != nil && x.DisplayText != nil {
		return *x.DisplayText
	}
	return ""
}

func (x *Result) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Result) GetJobId() string {
	if x != nil && x.JobId != nil {
		return *x.JobId
	}
	return ""
}

func (x *Result) GetJobStatus() string {
	if x != nil && x.JobStatus != nil {
		return *x.JobStatus
	}
	return ""
}

var File_cloudstack_management_network_bgp_v1_bgp_gen_proto protoreflect.FileDescriptor

const file_cloudstack_management_network_bgp_v1_bgp_gen_proto_rawDesc = "" +
	"\n" +
	"2cloudstack/management/network/bgp/v1/bgp.gen.proto\x12$cloudstack.management.network.bgp.v1\x1a(cloudstack/annotations/annotations.proto\x1a\"cloudstack/validate/validate.proto\x1a google/protobuf/descriptor.proto\"\x8c\x02\n" +
	"\x16DedicateBgpPeerRequest\x12\x16\n" +
	"\x02id\x18\x01 \x01(\x03B\x06\xbaH\x03\xc8\x01\x01R\x02id\x12!\n" +
	"\faccount_name\x18\x02 \x01(\tR\vaccountName\x12\x1d\n" +
	"\n" +
	"project_id\x18\x03 \x01(\x03R\tprojectId\x12\x1b\n" +
	"\tdomain_id\x18\x04 \x01(\x03R\bdomainId\x12$\n" +
	"\x0estart_event_id\x18\x05 \x01(\x03R\fstartEventId\x120\n" +
	"\x0finjected_job_id\x18\x06 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\rinjectedJobId\x12#\n" +
	"\rresponse_type\x18\a \x01(\tR\fresponseType\"_\n" +
	"\x17DedicateBgpPeerResponse\x12D\n" +
	"\x06result\x18\x01 \x01(\v2,.cloudstack.management.network.bgp.v1.ResultR\x06result\"\xd4\x03\n" +
	"\x13ListBgpPeersRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x17\n" +
	"\azone_id\x18\x02 \x01(\x03R\x06zoneId\x12\x1b\n" +
	"\tas_number\x18\x03 \x01(\x03R\basNumber\x12\xa0\x01\n" +
	"\faccount_name\x18\x04 \x01(\tB}\xbaHz\xba\x01w\n" +
	"\x1baccount_name_with_domain_id\x122account_name must be used with domain_id parameter\x1a$!has(account_name) || has(domain_id)R\vaccountName\x12\x1d\n" +
	"\n" +
	"project_id\x18\x05 \x01(\x03R\tprojectId\x12\x1b\n" +
	"\tdomain_id\x18\x06 \x01(\x03R\bdomainId\x12(\n" +
	"\fis_dedicated\x18\a \x01(\bB\x05\xaa\x01\x02\b\x01R\visDedicated\x12\x18\n" +
	"\akeyword\x18\b \x01(\tR\akeyword\x12\x12\n" +
	"\x04page\x18\t \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\n" +
	" \x01(\x05R\bpageSize\x12#\n" +
	"\rresponse_type\x18\v \x01(\tR\fresponseType\"\x83\x01\n" +
	"\x14ListBgpPeersResponse\x12C\n" +
	"\x05items\x18\x01 \x03(\v2-.cloudstack.management.network.bgp.v1.BgpPeerR\x05items\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount:\x05\xbaH\x02\b\x00\"\xe7\x01\n" +
	"\x1fChangeBgpPeersForNetworkRequest\x12%\n" +
	"\n" +
	"network_id\x18\x01 \x01(\x03B\x06\xbaH\x03\xc8\x01\x01R\tnetworkId\x12 \n" +
	"\fbgp_peer_ids\x18\x02 \x03(\tR\n" +
	"bgpPeerIds\x12$\n" +
	"\x0estart_event_id\x18\x03 \x01(\x03R\fstartEventId\x120\n" +
	"\x0finjected_job_id\x18\x04 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\rinjectedJobId\x12#\n" +
	"\rresponse_type\x18\x05 \x01(\tR\fresponseType\"h\n" +
	" ChangeBgpPeersForNetworkResponse\x12D\n" +
	"\x06result\x18\x01 \x01(\v2,.cloudstack.management.network.bgp.v1.ResultR\x06result\"\x87\x04\n" +
	"\x14UpdateBgpPeerRequest\x12\x16\n" +
	"\x02id\x18\x01 \x01(\x03B\x06\xbaH\x03\xc8\x01\x01R\x02id\x12(\n" +
	"\vip4_address\x18\x02 \x01(\tB\a\xbaH\x04r\x02x\x01R\n" +
	"ip4Address\x12(\n" +
	"\vip6_address\x18\x03 \x01(\tB\a\xbaH\x04r\x02x\x01R\n" +
	"ip6Address\x12\x1b\n" +
	"\tas_number\x18\x04 \x01(\x03R\basNumber\x12\x1a\n" +
	"\bpassword\x18\x05 \x01(\tR\bpassword\x12a\n" +
	"\adetails\x18\x06 \x03(\v2G.cloudstack.management.network.bgp.v1.UpdateBgpPeerRequest.DetailsEntryR\adetails\x12.\n" +
	"\x0fcleanup_details\x18\a \x01(\bB\x05\xaa\x01\x02\b\x01R\x0ecleanupDetails\x12$\n" +
	"\x0estart_event_id\x18\b \x01(\x03R\fstartEventId\x120\n" +
	"\x0finjected_job_id\x18\t \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\rinjectedJobId\x12#\n" +
	"\rresponse_type\x18\n" +
	" \x01(\tR\fresponseType\x1a:\n" +
	"\fDetailsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"]\n" +
	"\x15UpdateBgpPeerResponse\x12D\n" +
	"\x06result\x18\x01 \x01(\v2,.cloudstack.management.network.bgp.v1.ResultR\x06result\"\xab\x01\n" +
	"\x14DeleteBgpPeerRequest\x12\x16\n" +
	"\x02id\x18\x01 \x01(\x03B\x06\xbaH\x03\xc8\x01\x01R\x02id\x12$\n" +
	"\x0estart_event_id\x18\x02 \x01(\x03R\fstartEventId\x120\n" +
	"\x0finjected_job_id\x18\x03 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\rinjectedJobId\x12#\n" +
	"\rresponse_type\x18\x04 \x01(\tR\fresponseType\"]\n" +
	"\x15DeleteBgpPeerResponse\x12D\n" +
	"\x06result\x18\x01 \x01(\v2,.cloudstack.management.network.bgp.v1.ResultR\x06result\"\xb5\x01\n" +
	"\x1eReleaseDedicatedBgpPeerRequest\x12\x16\n" +
	"\x02id\x18\x01 \x01(\x03B\x06\xbaH\x03\xc8\x01\x01R\x02id\x12$\n" +
	"\x0estart_event_id\x18\x02 \x01(\x03R\fstartEventId\x120\n" +
	"\x0finjected_job_id\x18\x03 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\rinjectedJobId\x12#\n" +
	"\rresponse_type\x18\x04 \x01(\tR\fresponseType\"g\n" +
	"\x1fReleaseDedicatedBgpPeerResponse\x12D\n" +
	"\x06result\x18\x01 \x01(\v2,.cloudstack.management.network.bgp.v1.ResultR\x06result\"\xdb\x01\n" +
	"\x1bChangeBgpPeersForVpcRequest\x12\x1d\n" +
	"\x06vpc_id\x18\x01 \x01(\x03B\x06\xbaH\x03\xc8\x01\x01R\x05vpcId\x12 \n" +
	"\fbgp_peer_ids\x18\x02 \x03(\tR\n" +
	"bgpPeerIds\x12$\n" +
	"\x0estart_event_id\x18\x03 \x01(\x03R\fstartEventId\x120\n" +
	"\x0finjected_job_id\x18\x04 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\rinjectedJobId\x12#\n" +
	"\rresponse_type\x18\x05 \x01(\tR\fresponseType\"d\n" +
	"\x1cChangeBgpPeersForVpcResponse\x12D\n" +
	"\x06result\x18\x01 \x01(\v2,.cloudstack.management.network.bgp.v1.ResultR\x06result\"\xc7\x04\n" +
	"\x14CreateBgpPeerRequest\x12\x1f\n" +
	"\azone_id\x18\x01 \x01(\x03B\x06\xbaH\x03\xc8\x01\x01R\x06zoneId\x12(\n" +
	"\vip4_address\x18\x02 \x01(\tB\a\xbaH\x04r\x02x\x01R\n" +
	"ip4Address\x12(\n" +
	"\vip6_address\x18\x03 \x01(\tB\a\xbaH\x04r\x02x\x01R\n" +
	"ip6Address\x12#\n" +
	"\tas_number\x18\x04 \x01(\x03B\x06\xbaH\x03\xc8\x01\x01R\basNumber\x12\x1a\n" +
	"\bpassword\x18\x05 \x01(\tR\bpassword\x12!\n" +
	"\faccount_name\x18\x06 \x01(\tR\vaccountName\x12\x1d\n" +
	"\n" +
	"project_id\x18\a \x01(\x03R\tprojectId\x12\x1b\n" +
	"\tdomain_id\x18\b \x01(\x03R\bdomainId\x12a\n" +
	"\adetails\x18\t \x03(\v2G.cloudstack.management.network.bgp.v1.CreateBgpPeerRequest.DetailsEntryR\adetails\x12$\n" +
	"\x0estart_event_id\x18\n" +
	" \x01(\x03R\fstartEventId\x120\n" +
	"\x0finjected_job_id\x18\v \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\rinjectedJobId\x12#\n" +
	"\rresponse_type\x18\f \x01(\tR\fresponseType\x1a:\n" +
	"\fDetailsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"]\n" +
	"\x15CreateBgpPeerResponse\x12D\n" +
	"\x06result\x18\x01 \x01(\v2,.cloudstack.management.network.bgp.v1.ResultR\x06result\"\x96\x01\n" +
	"\aBgpPeer\x12\x18\n" +
	"\x02id\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12!\n" +
	"\fdisplay_name\x18\x03 \x01(\tR\vdisplayName\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x18\n" +
	"\acreated\x18\x05 \x01(\tR\acreated\"F\n" +
	"\aSuccess\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12!\n" +
	"\fdisplay_text\x18\x02 \x01(\tR\vdisplayText\"\xe3\x03\n" +
	"\x04Item\x12\x18\n" +
	"\x02id\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12!\n" +
	"\fdisplay_name\x18\x03 \x01(\tR\vdisplayName\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12'\n" +
	"\n" +
	"account_id\x18\x05 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\taccountId\x12%\n" +
	"\tdomain_id\x18\x06 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\bdomainId\x12\x16\n" +
	"\x06domain\x18\a \x01(\tR\x06domain\x12'\n" +
	"\n" +
	"project_id\x18\b \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\tprojectId\x12\x18\n" +
	"\aproject\x18\t \x01(\tR\aproject\x12\x18\n" +
	"\acreated\x18\n" +
	" \x01(\tR\acreated\x12\x14\n" +
	"\x05state\x18\v \x01(\tR\x05state\x12Q\n" +
	"\adetails\x18\f \x03(\v27.cloudstack.management.network.bgp.v1.Item.DetailsEntryR\adetails\x1a:\n" +
	"\fDetailsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x9f\x01\n" +
	"\x06Result\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12!\n" +
	"\fdisplay_text\x18\x02 \x01(\tR\vdisplayText\x12\x18\n" +
	"\x02id\x18\x03 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x02id\x12\x1f\n" +
	"\x06job_id\x18\x04 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x05jobId\x12\x1d\n" +
	"\n" +
	"job_status\x18\x05 \x01(\tR\tjobStatus2\xd3\t\n" +
	"\n" +
	"BgpService\x12\x90\x01\n" +
	"\x0fDedicateBgpPeer\x12<.cloudstack.management.network.bgp.v1.DedicateBgpPeerRequest\x1a=.cloudstack.management.network.bgp.v1.DedicateBgpPeerResponse\"\x00\x12\x87\x01\n" +
	"\fListBgpPeers\x129.cloudstack.management.network.bgp.v1.ListBgpPeersRequest\x1a:.cloudstack.management.network.bgp.v1.ListBgpPeersResponse\"\x00\x12\xab\x01\n" +
	"\x18ChangeBgpPeersForNetwork\x12E.cloudstack.management.network.bgp.v1.ChangeBgpPeersForNetworkRequest\x1aF.cloudstack.management.network.bgp.v1.ChangeBgpPeersForNetworkResponse\"\x00\x12\x8a\x01\n" +
	"\rUpdateBgpPeer\x12:.cloudstack.management.network.bgp.v1.UpdateBgpPeerRequest\x1a;.cloudstack.management.network.bgp.v1.UpdateBgpPeerResponse\"\x00\x12\x8a\x01\n" +
	"\rDeleteBgpPeer\x12:.cloudstack.management.network.bgp.v1.DeleteBgpPeerRequest\x1a;.cloudstack.management.network.bgp.v1.DeleteBgpPeerResponse\"\x00\x12\xa8\x01\n" +
	"\x17ReleaseDedicatedBgpPeer\x12D.cloudstack.management.network.bgp.v1.ReleaseDedicatedBgpPeerRequest\x1aE.cloudstack.management.network.bgp.v1.ReleaseDedicatedBgpPeerResponse\"\x00\x12\x9f\x01\n" +
	"\x14ChangeBgpPeersForVpc\x12A.cloudstack.management.network.bgp.v1.ChangeBgpPeersForVpcRequest\x1aB.cloudstack.management.network.bgp.v1.ChangeBgpPeersForVpcResponse\"\x00\x12\x8a\x01\n" +
	"\rCreateBgpPeer\x12:.cloudstack.management.network.bgp.v1.CreateBgpPeerRequest\x1a;.cloudstack.management.network.bgp.v1.CreateBgpPeerResponse\"\x00\x1a\x06\xc2>\x03\xc0>\x02B\xcc\x02\n" +
	"(com.cloudstack.management.network.bgp.v1B\vBgpGenProtoP\x01Z^github.com/walteh/cloudstack-proxy/gen/proto/golang/cloudstack/management/network/bgp/v1;bgpv1\xa2\x02\x04CMNB\xaa\x02$Cloudstack.Management.Network.Bgp.V1\xca\x02$Cloudstack\\Management\\Network\\Bgp\\V1\xe2\x020Cloudstack\\Management\\Network\\Bgp\\V1\\GPBMetadata\xea\x02(Cloudstack::Management::Network::Bgp::V1b\beditionsp\xe8\a"

var (
	file_cloudstack_management_network_bgp_v1_bgp_gen_proto_rawDescOnce sync.Once
	file_cloudstack_management_network_bgp_v1_bgp_gen_proto_rawDescData []byte
)

func file_cloudstack_management_network_bgp_v1_bgp_gen_proto_rawDescGZIP() []byte {
	file_cloudstack_management_network_bgp_v1_bgp_gen_proto_rawDescOnce.Do(func() {
		file_cloudstack_management_network_bgp_v1_bgp_gen_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_cloudstack_management_network_bgp_v1_bgp_gen_proto_rawDesc), len(file_cloudstack_management_network_bgp_v1_bgp_gen_proto_rawDesc)))
	})
	return file_cloudstack_management_network_bgp_v1_bgp_gen_proto_rawDescData
}

var file_cloudstack_management_network_bgp_v1_bgp_gen_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_cloudstack_management_network_bgp_v1_bgp_gen_proto_goTypes = []any{
	(*DedicateBgpPeerRequest)(nil),           // 0: cloudstack.management.network.bgp.v1.DedicateBgpPeerRequest
	(*DedicateBgpPeerResponse)(nil),          // 1: cloudstack.management.network.bgp.v1.DedicateBgpPeerResponse
	(*ListBgpPeersRequest)(nil),              // 2: cloudstack.management.network.bgp.v1.ListBgpPeersRequest
	(*ListBgpPeersResponse)(nil),             // 3: cloudstack.management.network.bgp.v1.ListBgpPeersResponse
	(*ChangeBgpPeersForNetworkRequest)(nil),  // 4: cloudstack.management.network.bgp.v1.ChangeBgpPeersForNetworkRequest
	(*ChangeBgpPeersForNetworkResponse)(nil), // 5: cloudstack.management.network.bgp.v1.ChangeBgpPeersForNetworkResponse
	(*UpdateBgpPeerRequest)(nil),             // 6: cloudstack.management.network.bgp.v1.UpdateBgpPeerRequest
	(*UpdateBgpPeerResponse)(nil),            // 7: cloudstack.management.network.bgp.v1.UpdateBgpPeerResponse
	(*DeleteBgpPeerRequest)(nil),             // 8: cloudstack.management.network.bgp.v1.DeleteBgpPeerRequest
	(*DeleteBgpPeerResponse)(nil),            // 9: cloudstack.management.network.bgp.v1.DeleteBgpPeerResponse
	(*ReleaseDedicatedBgpPeerRequest)(nil),   // 10: cloudstack.management.network.bgp.v1.ReleaseDedicatedBgpPeerRequest
	(*ReleaseDedicatedBgpPeerResponse)(nil),  // 11: cloudstack.management.network.bgp.v1.ReleaseDedicatedBgpPeerResponse
	(*ChangeBgpPeersForVpcRequest)(nil),      // 12: cloudstack.management.network.bgp.v1.ChangeBgpPeersForVpcRequest
	(*ChangeBgpPeersForVpcResponse)(nil),     // 13: cloudstack.management.network.bgp.v1.ChangeBgpPeersForVpcResponse
	(*CreateBgpPeerRequest)(nil),             // 14: cloudstack.management.network.bgp.v1.CreateBgpPeerRequest
	(*CreateBgpPeerResponse)(nil),            // 15: cloudstack.management.network.bgp.v1.CreateBgpPeerResponse
	(*BgpPeer)(nil),                          // 16: cloudstack.management.network.bgp.v1.BgpPeer
	(*Success)(nil),                          // 17: cloudstack.management.network.bgp.v1.Success
	(*Item)(nil),                             // 18: cloudstack.management.network.bgp.v1.Item
	(*Result)(nil),                           // 19: cloudstack.management.network.bgp.v1.Result
	nil,                                      // 20: cloudstack.management.network.bgp.v1.UpdateBgpPeerRequest.DetailsEntry
	nil,                                      // 21: cloudstack.management.network.bgp.v1.CreateBgpPeerRequest.DetailsEntry
	nil,                                      // 22: cloudstack.management.network.bgp.v1.Item.DetailsEntry
}
var file_cloudstack_management_network_bgp_v1_bgp_gen_proto_depIdxs = []int32{
	19, // 0: cloudstack.management.network.bgp.v1.DedicateBgpPeerResponse.result:type_name -> cloudstack.management.network.bgp.v1.Result
	16, // 1: cloudstack.management.network.bgp.v1.ListBgpPeersResponse.items:type_name -> cloudstack.management.network.bgp.v1.BgpPeer
	19, // 2: cloudstack.management.network.bgp.v1.ChangeBgpPeersForNetworkResponse.result:type_name -> cloudstack.management.network.bgp.v1.Result
	20, // 3: cloudstack.management.network.bgp.v1.UpdateBgpPeerRequest.details:type_name -> cloudstack.management.network.bgp.v1.UpdateBgpPeerRequest.DetailsEntry
	19, // 4: cloudstack.management.network.bgp.v1.UpdateBgpPeerResponse.result:type_name -> cloudstack.management.network.bgp.v1.Result
	19, // 5: cloudstack.management.network.bgp.v1.DeleteBgpPeerResponse.result:type_name -> cloudstack.management.network.bgp.v1.Result
	19, // 6: cloudstack.management.network.bgp.v1.ReleaseDedicatedBgpPeerResponse.result:type_name -> cloudstack.management.network.bgp.v1.Result
	19, // 7: cloudstack.management.network.bgp.v1.ChangeBgpPeersForVpcResponse.result:type_name -> cloudstack.management.network.bgp.v1.Result
	21, // 8: cloudstack.management.network.bgp.v1.CreateBgpPeerRequest.details:type_name -> cloudstack.management.network.bgp.v1.CreateBgpPeerRequest.DetailsEntry
	19, // 9: cloudstack.management.network.bgp.v1.CreateBgpPeerResponse.result:type_name -> cloudstack.management.network.bgp.v1.Result
	22, // 10: cloudstack.management.network.bgp.v1.Item.details:type_name -> cloudstack.management.network.bgp.v1.Item.DetailsEntry
	0,  // 11: cloudstack.management.network.bgp.v1.BgpService.DedicateBgpPeer:input_type -> cloudstack.management.network.bgp.v1.DedicateBgpPeerRequest
	2,  // 12: cloudstack.management.network.bgp.v1.BgpService.ListBgpPeers:input_type -> cloudstack.management.network.bgp.v1.ListBgpPeersRequest
	4,  // 13: cloudstack.management.network.bgp.v1.BgpService.ChangeBgpPeersForNetwork:input_type -> cloudstack.management.network.bgp.v1.ChangeBgpPeersForNetworkRequest
	6,  // 14: cloudstack.management.network.bgp.v1.BgpService.UpdateBgpPeer:input_type -> cloudstack.management.network.bgp.v1.UpdateBgpPeerRequest
	8,  // 15: cloudstack.management.network.bgp.v1.BgpService.DeleteBgpPeer:input_type -> cloudstack.management.network.bgp.v1.DeleteBgpPeerRequest
	10, // 16: cloudstack.management.network.bgp.v1.BgpService.ReleaseDedicatedBgpPeer:input_type -> cloudstack.management.network.bgp.v1.ReleaseDedicatedBgpPeerRequest
	12, // 17: cloudstack.management.network.bgp.v1.BgpService.ChangeBgpPeersForVpc:input_type -> cloudstack.management.network.bgp.v1.ChangeBgpPeersForVpcRequest
	14, // 18: cloudstack.management.network.bgp.v1.BgpService.CreateBgpPeer:input_type -> cloudstack.management.network.bgp.v1.CreateBgpPeerRequest
	1,  // 19: cloudstack.management.network.bgp.v1.BgpService.DedicateBgpPeer:output_type -> cloudstack.management.network.bgp.v1.DedicateBgpPeerResponse
	3,  // 20: cloudstack.management.network.bgp.v1.BgpService.ListBgpPeers:output_type -> cloudstack.management.network.bgp.v1.ListBgpPeersResponse
	5,  // 21: cloudstack.management.network.bgp.v1.BgpService.ChangeBgpPeersForNetwork:output_type -> cloudstack.management.network.bgp.v1.ChangeBgpPeersForNetworkResponse
	7,  // 22: cloudstack.management.network.bgp.v1.BgpService.UpdateBgpPeer:output_type -> cloudstack.management.network.bgp.v1.UpdateBgpPeerResponse
	9,  // 23: cloudstack.management.network.bgp.v1.BgpService.DeleteBgpPeer:output_type -> cloudstack.management.network.bgp.v1.DeleteBgpPeerResponse
	11, // 24: cloudstack.management.network.bgp.v1.BgpService.ReleaseDedicatedBgpPeer:output_type -> cloudstack.management.network.bgp.v1.ReleaseDedicatedBgpPeerResponse
	13, // 25: cloudstack.management.network.bgp.v1.BgpService.ChangeBgpPeersForVpc:output_type -> cloudstack.management.network.bgp.v1.ChangeBgpPeersForVpcResponse
	15, // 26: cloudstack.management.network.bgp.v1.BgpService.CreateBgpPeer:output_type -> cloudstack.management.network.bgp.v1.CreateBgpPeerResponse
	19, // [19:27] is the sub-list for method output_type
	11, // [11:19] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_cloudstack_management_network_bgp_v1_bgp_gen_proto_init() }
func file_cloudstack_management_network_bgp_v1_bgp_gen_proto_init() {
	if File_cloudstack_management_network_bgp_v1_bgp_gen_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_cloudstack_management_network_bgp_v1_bgp_gen_proto_rawDesc), len(file_cloudstack_management_network_bgp_v1_bgp_gen_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cloudstack_management_network_bgp_v1_bgp_gen_proto_goTypes,
		DependencyIndexes: file_cloudstack_management_network_bgp_v1_bgp_gen_proto_depIdxs,
		MessageInfos:      file_cloudstack_management_network_bgp_v1_bgp_gen_proto_msgTypes,
	}.Build()
	File_cloudstack_management_network_bgp_v1_bgp_gen_proto = out.File
	file_cloudstack_management_network_bgp_v1_bgp_gen_proto_goTypes = nil
	file_cloudstack_management_network_bgp_v1_bgp_gen_proto_depIdxs = nil
}
