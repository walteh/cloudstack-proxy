// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: cloudstack/management/autoscale/v1/autoscale.gen.proto

package autoscalev1connect

import (
	connect "connectrpc.com/connect"
	context "context"
	errors "errors"
	v1 "github.com/walteh/cloudstack-proxy/gen/proto/golang/cloudstack/management/autoscale/v1"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect.IsAtLeastVersion1_13_0

const (
	// AutoscaleServiceName is the fully-qualified name of the AutoscaleService service.
	AutoscaleServiceName = "cloudstack.management.autoscale.v1.AutoscaleService"
)

// These constants are the fully-qualified names of the RPCs defined in this package. They're
// exposed at runtime as Spec.Procedure and as the final two segments of the HTTP route.
//
// Note that these are different from the fully-qualified method names used by
// google.golang.org/protobuf/reflect/protoreflect. To convert from these constants to
// reflection-formatted method names, remove the leading slash and convert the remaining slash to a
// period.
const (
	// AutoscaleServiceCreateAutoScalePolicyProcedure is the fully-qualified name of the
	// AutoscaleService's CreateAutoScalePolicy RPC.
	AutoscaleServiceCreateAutoScalePolicyProcedure = "/cloudstack.management.autoscale.v1.AutoscaleService/CreateAutoScalePolicy"
	// AutoscaleServiceListConditionsProcedure is the fully-qualified name of the AutoscaleService's
	// ListConditions RPC.
	AutoscaleServiceListConditionsProcedure = "/cloudstack.management.autoscale.v1.AutoscaleService/ListConditions"
	// AutoscaleServiceCreateConditionProcedure is the fully-qualified name of the AutoscaleService's
	// CreateCondition RPC.
	AutoscaleServiceCreateConditionProcedure = "/cloudstack.management.autoscale.v1.AutoscaleService/CreateCondition"
	// AutoscaleServiceDeleteCounterProcedure is the fully-qualified name of the AutoscaleService's
	// DeleteCounter RPC.
	AutoscaleServiceDeleteCounterProcedure = "/cloudstack.management.autoscale.v1.AutoscaleService/DeleteCounter"
	// AutoscaleServiceListCountersProcedure is the fully-qualified name of the AutoscaleService's
	// ListCounters RPC.
	AutoscaleServiceListCountersProcedure = "/cloudstack.management.autoscale.v1.AutoscaleService/ListCounters"
	// AutoscaleServiceDeleteAutoScaleVmProfileProcedure is the fully-qualified name of the
	// AutoscaleService's DeleteAutoScaleVmProfile RPC.
	AutoscaleServiceDeleteAutoScaleVmProfileProcedure = "/cloudstack.management.autoscale.v1.AutoscaleService/DeleteAutoScaleVmProfile"
	// AutoscaleServiceListAutoScalePoliciesProcedure is the fully-qualified name of the
	// AutoscaleService's ListAutoScalePolicies RPC.
	AutoscaleServiceListAutoScalePoliciesProcedure = "/cloudstack.management.autoscale.v1.AutoscaleService/ListAutoScalePolicies"
	// AutoscaleServiceCreateAutoScaleVmProfileProcedure is the fully-qualified name of the
	// AutoscaleService's CreateAutoScaleVmProfile RPC.
	AutoscaleServiceCreateAutoScaleVmProfileProcedure = "/cloudstack.management.autoscale.v1.AutoscaleService/CreateAutoScaleVmProfile"
	// AutoscaleServiceDeleteConditionProcedure is the fully-qualified name of the AutoscaleService's
	// DeleteCondition RPC.
	AutoscaleServiceDeleteConditionProcedure = "/cloudstack.management.autoscale.v1.AutoscaleService/DeleteCondition"
	// AutoscaleServiceDeleteAutoScaleVmGroupProcedure is the fully-qualified name of the
	// AutoscaleService's DeleteAutoScaleVmGroup RPC.
	AutoscaleServiceDeleteAutoScaleVmGroupProcedure = "/cloudstack.management.autoscale.v1.AutoscaleService/DeleteAutoScaleVmGroup"
	// AutoscaleServiceDisableAutoScaleVmGroupProcedure is the fully-qualified name of the
	// AutoscaleService's DisableAutoScaleVmGroup RPC.
	AutoscaleServiceDisableAutoScaleVmGroupProcedure = "/cloudstack.management.autoscale.v1.AutoscaleService/DisableAutoScaleVmGroup"
	// AutoscaleServiceUpdateAutoScaleVmProfileProcedure is the fully-qualified name of the
	// AutoscaleService's UpdateAutoScaleVmProfile RPC.
	AutoscaleServiceUpdateAutoScaleVmProfileProcedure = "/cloudstack.management.autoscale.v1.AutoscaleService/UpdateAutoScaleVmProfile"
	// AutoscaleServiceEnableAutoScaleVmGroupProcedure is the fully-qualified name of the
	// AutoscaleService's EnableAutoScaleVmGroup RPC.
	AutoscaleServiceEnableAutoScaleVmGroupProcedure = "/cloudstack.management.autoscale.v1.AutoscaleService/EnableAutoScaleVmGroup"
	// AutoscaleServiceUpdateAutoScaleVmGroupProcedure is the fully-qualified name of the
	// AutoscaleService's UpdateAutoScaleVmGroup RPC.
	AutoscaleServiceUpdateAutoScaleVmGroupProcedure = "/cloudstack.management.autoscale.v1.AutoscaleService/UpdateAutoScaleVmGroup"
	// AutoscaleServiceUpdateAutoScalePolicyProcedure is the fully-qualified name of the
	// AutoscaleService's UpdateAutoScalePolicy RPC.
	AutoscaleServiceUpdateAutoScalePolicyProcedure = "/cloudstack.management.autoscale.v1.AutoscaleService/UpdateAutoScalePolicy"
	// AutoscaleServiceCreateAutoScaleVmGroupProcedure is the fully-qualified name of the
	// AutoscaleService's CreateAutoScaleVmGroup RPC.
	AutoscaleServiceCreateAutoScaleVmGroupProcedure = "/cloudstack.management.autoscale.v1.AutoscaleService/CreateAutoScaleVmGroup"
	// AutoscaleServiceDeleteAutoScalePolicyProcedure is the fully-qualified name of the
	// AutoscaleService's DeleteAutoScalePolicy RPC.
	AutoscaleServiceDeleteAutoScalePolicyProcedure = "/cloudstack.management.autoscale.v1.AutoscaleService/DeleteAutoScalePolicy"
	// AutoscaleServiceListAutoScaleVmGroupsProcedure is the fully-qualified name of the
	// AutoscaleService's ListAutoScaleVmGroups RPC.
	AutoscaleServiceListAutoScaleVmGroupsProcedure = "/cloudstack.management.autoscale.v1.AutoscaleService/ListAutoScaleVmGroups"
	// AutoscaleServiceCreateCounterProcedure is the fully-qualified name of the AutoscaleService's
	// CreateCounter RPC.
	AutoscaleServiceCreateCounterProcedure = "/cloudstack.management.autoscale.v1.AutoscaleService/CreateCounter"
	// AutoscaleServiceListAutoScaleVmProfilesProcedure is the fully-qualified name of the
	// AutoscaleService's ListAutoScaleVmProfiles RPC.
	AutoscaleServiceListAutoScaleVmProfilesProcedure = "/cloudstack.management.autoscale.v1.AutoscaleService/ListAutoScaleVmProfiles"
	// AutoscaleServiceUpdateConditionProcedure is the fully-qualified name of the AutoscaleService's
	// UpdateCondition RPC.
	AutoscaleServiceUpdateConditionProcedure = "/cloudstack.management.autoscale.v1.AutoscaleService/UpdateCondition"
)

// AutoscaleServiceClient is a client for the cloudstack.management.autoscale.v1.AutoscaleService
// service.
type AutoscaleServiceClient interface {
	// CreateAutoScalePolicy Creates an autoscale policy for a provision or deprovision action, the action is taken when the all the conditions evaluates to true for the specified duration. The policy is in effect once it is attached to a autscale vm group.
	CreateAutoScalePolicy(context.Context, *connect.Request[v1.CreateAutoScalePolicyRequest]) (*connect.Response[v1.CreateAutoScalePolicyResponse], error)
	// ListConditions List Conditions for VM auto scaling
	ListConditions(context.Context, *connect.Request[v1.ListConditionsRequest]) (*connect.Response[v1.ListConditionsResponse], error)
	// CreateCondition Creates a condition for VM auto scaling
	CreateCondition(context.Context, *connect.Request[v1.CreateConditionRequest]) (*connect.Response[v1.CreateConditionResponse], error)
	// DeleteCounter Deletes a counter for VM auto scaling
	DeleteCounter(context.Context, *connect.Request[v1.DeleteCounterRequest]) (*connect.Response[v1.DeleteCounterResponse], error)
	// ListCounters List the counters for VM auto scaling
	ListCounters(context.Context, *connect.Request[v1.ListCountersRequest]) (*connect.Response[v1.ListCountersResponse], error)
	// DeleteAutoScaleVmProfile Deletes a autoscale vm profile.
	DeleteAutoScaleVmProfile(context.Context, *connect.Request[v1.DeleteAutoScaleVmProfileRequest]) (*connect.Response[v1.DeleteAutoScaleVmProfileResponse], error)
	// ListAutoScalePolicies Lists autoscale policies.
	ListAutoScalePolicies(context.Context, *connect.Request[v1.ListAutoScalePoliciesRequest]) (*connect.Response[v1.ListAutoScalePoliciesResponse], error)
	// CreateAutoScaleVmProfile Creates a profile that contains information about the virtual machine which will be provisioned automatically by autoscale feature.
	CreateAutoScaleVmProfile(context.Context, *connect.Request[v1.CreateAutoScaleVmProfileRequest]) (*connect.Response[v1.CreateAutoScaleVmProfileResponse], error)
	// DeleteCondition Removes a condition for VM auto scaling
	DeleteCondition(context.Context, *connect.Request[v1.DeleteConditionRequest]) (*connect.Response[v1.DeleteConditionResponse], error)
	// DeleteAutoScaleVmGroup Deletes a autoscale vm group.
	DeleteAutoScaleVmGroup(context.Context, *connect.Request[v1.DeleteAutoScaleVmGroupRequest]) (*connect.Response[v1.DeleteAutoScaleVmGroupResponse], error)
	// DisableAutoScaleVmGroup Disables an AutoScale Vm Group
	DisableAutoScaleVmGroup(context.Context, *connect.Request[v1.DisableAutoScaleVmGroupRequest]) (*connect.Response[v1.DisableAutoScaleVmGroupResponse], error)
	// UpdateAutoScaleVmProfile Updates an existing autoscale vm profile.
	UpdateAutoScaleVmProfile(context.Context, *connect.Request[v1.UpdateAutoScaleVmProfileRequest]) (*connect.Response[v1.UpdateAutoScaleVmProfileResponse], error)
	// EnableAutoScaleVmGroup Enables an AutoScale Vm Group
	EnableAutoScaleVmGroup(context.Context, *connect.Request[v1.EnableAutoScaleVmGroupRequest]) (*connect.Response[v1.EnableAutoScaleVmGroupResponse], error)
	// UpdateAutoScaleVmGroup Updates an existing autoscale vm group.
	UpdateAutoScaleVmGroup(context.Context, *connect.Request[v1.UpdateAutoScaleVmGroupRequest]) (*connect.Response[v1.UpdateAutoScaleVmGroupResponse], error)
	// UpdateAutoScalePolicy Updates an existing autoscale policy.
	UpdateAutoScalePolicy(context.Context, *connect.Request[v1.UpdateAutoScalePolicyRequest]) (*connect.Response[v1.UpdateAutoScalePolicyResponse], error)
	// CreateAutoScaleVmGroup Creates and automatically starts a virtual machine based on a service offering, disk offering, and template.
	CreateAutoScaleVmGroup(context.Context, *connect.Request[v1.CreateAutoScaleVmGroupRequest]) (*connect.Response[v1.CreateAutoScaleVmGroupResponse], error)
	// DeleteAutoScalePolicy Deletes a autoscale policy.
	DeleteAutoScalePolicy(context.Context, *connect.Request[v1.DeleteAutoScalePolicyRequest]) (*connect.Response[v1.DeleteAutoScalePolicyResponse], error)
	// ListAutoScaleVmGroups Lists autoscale vm groups.
	ListAutoScaleVmGroups(context.Context, *connect.Request[v1.ListAutoScaleVmGroupsRequest]) (*connect.Response[v1.ListAutoScaleVmGroupsResponse], error)
	// CreateCounter Adds metric counter for VM auto scaling
	CreateCounter(context.Context, *connect.Request[v1.CreateCounterRequest]) (*connect.Response[v1.CreateCounterResponse], error)
	// ListAutoScaleVmProfiles Lists autoscale vm profiles.
	ListAutoScaleVmProfiles(context.Context, *connect.Request[v1.ListAutoScaleVmProfilesRequest]) (*connect.Response[v1.ListAutoScaleVmProfilesResponse], error)
	// UpdateCondition Updates a condition for VM auto scaling
	UpdateCondition(context.Context, *connect.Request[v1.UpdateConditionRequest]) (*connect.Response[v1.UpdateConditionResponse], error)
}

// NewAutoscaleServiceClient constructs a client for the
// cloudstack.management.autoscale.v1.AutoscaleService service. By default, it uses the Connect
// protocol with the binary Protobuf Codec, asks for gzipped responses, and sends uncompressed
// requests. To use the gRPC or gRPC-Web protocols, supply the connect.WithGRPC() or
// connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewAutoscaleServiceClient(httpClient connect.HTTPClient, baseURL string, opts ...connect.ClientOption) AutoscaleServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	autoscaleServiceMethods := v1.File_cloudstack_management_autoscale_v1_autoscale_gen_proto.Services().ByName("AutoscaleService").Methods()
	return &autoscaleServiceClient{
		createAutoScalePolicy: connect.NewClient[v1.CreateAutoScalePolicyRequest, v1.CreateAutoScalePolicyResponse](
			httpClient,
			baseURL+AutoscaleServiceCreateAutoScalePolicyProcedure,
			connect.WithSchema(autoscaleServiceMethods.ByName("CreateAutoScalePolicy")),
			connect.WithClientOptions(opts...),
		),
		listConditions: connect.NewClient[v1.ListConditionsRequest, v1.ListConditionsResponse](
			httpClient,
			baseURL+AutoscaleServiceListConditionsProcedure,
			connect.WithSchema(autoscaleServiceMethods.ByName("ListConditions")),
			connect.WithClientOptions(opts...),
		),
		createCondition: connect.NewClient[v1.CreateConditionRequest, v1.CreateConditionResponse](
			httpClient,
			baseURL+AutoscaleServiceCreateConditionProcedure,
			connect.WithSchema(autoscaleServiceMethods.ByName("CreateCondition")),
			connect.WithClientOptions(opts...),
		),
		deleteCounter: connect.NewClient[v1.DeleteCounterRequest, v1.DeleteCounterResponse](
			httpClient,
			baseURL+AutoscaleServiceDeleteCounterProcedure,
			connect.WithSchema(autoscaleServiceMethods.ByName("DeleteCounter")),
			connect.WithClientOptions(opts...),
		),
		listCounters: connect.NewClient[v1.ListCountersRequest, v1.ListCountersResponse](
			httpClient,
			baseURL+AutoscaleServiceListCountersProcedure,
			connect.WithSchema(autoscaleServiceMethods.ByName("ListCounters")),
			connect.WithClientOptions(opts...),
		),
		deleteAutoScaleVmProfile: connect.NewClient[v1.DeleteAutoScaleVmProfileRequest, v1.DeleteAutoScaleVmProfileResponse](
			httpClient,
			baseURL+AutoscaleServiceDeleteAutoScaleVmProfileProcedure,
			connect.WithSchema(autoscaleServiceMethods.ByName("DeleteAutoScaleVmProfile")),
			connect.WithClientOptions(opts...),
		),
		listAutoScalePolicies: connect.NewClient[v1.ListAutoScalePoliciesRequest, v1.ListAutoScalePoliciesResponse](
			httpClient,
			baseURL+AutoscaleServiceListAutoScalePoliciesProcedure,
			connect.WithSchema(autoscaleServiceMethods.ByName("ListAutoScalePolicies")),
			connect.WithClientOptions(opts...),
		),
		createAutoScaleVmProfile: connect.NewClient[v1.CreateAutoScaleVmProfileRequest, v1.CreateAutoScaleVmProfileResponse](
			httpClient,
			baseURL+AutoscaleServiceCreateAutoScaleVmProfileProcedure,
			connect.WithSchema(autoscaleServiceMethods.ByName("CreateAutoScaleVmProfile")),
			connect.WithClientOptions(opts...),
		),
		deleteCondition: connect.NewClient[v1.DeleteConditionRequest, v1.DeleteConditionResponse](
			httpClient,
			baseURL+AutoscaleServiceDeleteConditionProcedure,
			connect.WithSchema(autoscaleServiceMethods.ByName("DeleteCondition")),
			connect.WithClientOptions(opts...),
		),
		deleteAutoScaleVmGroup: connect.NewClient[v1.DeleteAutoScaleVmGroupRequest, v1.DeleteAutoScaleVmGroupResponse](
			httpClient,
			baseURL+AutoscaleServiceDeleteAutoScaleVmGroupProcedure,
			connect.WithSchema(autoscaleServiceMethods.ByName("DeleteAutoScaleVmGroup")),
			connect.WithClientOptions(opts...),
		),
		disableAutoScaleVmGroup: connect.NewClient[v1.DisableAutoScaleVmGroupRequest, v1.DisableAutoScaleVmGroupResponse](
			httpClient,
			baseURL+AutoscaleServiceDisableAutoScaleVmGroupProcedure,
			connect.WithSchema(autoscaleServiceMethods.ByName("DisableAutoScaleVmGroup")),
			connect.WithClientOptions(opts...),
		),
		updateAutoScaleVmProfile: connect.NewClient[v1.UpdateAutoScaleVmProfileRequest, v1.UpdateAutoScaleVmProfileResponse](
			httpClient,
			baseURL+AutoscaleServiceUpdateAutoScaleVmProfileProcedure,
			connect.WithSchema(autoscaleServiceMethods.ByName("UpdateAutoScaleVmProfile")),
			connect.WithClientOptions(opts...),
		),
		enableAutoScaleVmGroup: connect.NewClient[v1.EnableAutoScaleVmGroupRequest, v1.EnableAutoScaleVmGroupResponse](
			httpClient,
			baseURL+AutoscaleServiceEnableAutoScaleVmGroupProcedure,
			connect.WithSchema(autoscaleServiceMethods.ByName("EnableAutoScaleVmGroup")),
			connect.WithClientOptions(opts...),
		),
		updateAutoScaleVmGroup: connect.NewClient[v1.UpdateAutoScaleVmGroupRequest, v1.UpdateAutoScaleVmGroupResponse](
			httpClient,
			baseURL+AutoscaleServiceUpdateAutoScaleVmGroupProcedure,
			connect.WithSchema(autoscaleServiceMethods.ByName("UpdateAutoScaleVmGroup")),
			connect.WithClientOptions(opts...),
		),
		updateAutoScalePolicy: connect.NewClient[v1.UpdateAutoScalePolicyRequest, v1.UpdateAutoScalePolicyResponse](
			httpClient,
			baseURL+AutoscaleServiceUpdateAutoScalePolicyProcedure,
			connect.WithSchema(autoscaleServiceMethods.ByName("UpdateAutoScalePolicy")),
			connect.WithClientOptions(opts...),
		),
		createAutoScaleVmGroup: connect.NewClient[v1.CreateAutoScaleVmGroupRequest, v1.CreateAutoScaleVmGroupResponse](
			httpClient,
			baseURL+AutoscaleServiceCreateAutoScaleVmGroupProcedure,
			connect.WithSchema(autoscaleServiceMethods.ByName("CreateAutoScaleVmGroup")),
			connect.WithClientOptions(opts...),
		),
		deleteAutoScalePolicy: connect.NewClient[v1.DeleteAutoScalePolicyRequest, v1.DeleteAutoScalePolicyResponse](
			httpClient,
			baseURL+AutoscaleServiceDeleteAutoScalePolicyProcedure,
			connect.WithSchema(autoscaleServiceMethods.ByName("DeleteAutoScalePolicy")),
			connect.WithClientOptions(opts...),
		),
		listAutoScaleVmGroups: connect.NewClient[v1.ListAutoScaleVmGroupsRequest, v1.ListAutoScaleVmGroupsResponse](
			httpClient,
			baseURL+AutoscaleServiceListAutoScaleVmGroupsProcedure,
			connect.WithSchema(autoscaleServiceMethods.ByName("ListAutoScaleVmGroups")),
			connect.WithClientOptions(opts...),
		),
		createCounter: connect.NewClient[v1.CreateCounterRequest, v1.CreateCounterResponse](
			httpClient,
			baseURL+AutoscaleServiceCreateCounterProcedure,
			connect.WithSchema(autoscaleServiceMethods.ByName("CreateCounter")),
			connect.WithClientOptions(opts...),
		),
		listAutoScaleVmProfiles: connect.NewClient[v1.ListAutoScaleVmProfilesRequest, v1.ListAutoScaleVmProfilesResponse](
			httpClient,
			baseURL+AutoscaleServiceListAutoScaleVmProfilesProcedure,
			connect.WithSchema(autoscaleServiceMethods.ByName("ListAutoScaleVmProfiles")),
			connect.WithClientOptions(opts...),
		),
		updateCondition: connect.NewClient[v1.UpdateConditionRequest, v1.UpdateConditionResponse](
			httpClient,
			baseURL+AutoscaleServiceUpdateConditionProcedure,
			connect.WithSchema(autoscaleServiceMethods.ByName("UpdateCondition")),
			connect.WithClientOptions(opts...),
		),
	}
}

// autoscaleServiceClient implements AutoscaleServiceClient.
type autoscaleServiceClient struct {
	createAutoScalePolicy    *connect.Client[v1.CreateAutoScalePolicyRequest, v1.CreateAutoScalePolicyResponse]
	listConditions           *connect.Client[v1.ListConditionsRequest, v1.ListConditionsResponse]
	createCondition          *connect.Client[v1.CreateConditionRequest, v1.CreateConditionResponse]
	deleteCounter            *connect.Client[v1.DeleteCounterRequest, v1.DeleteCounterResponse]
	listCounters             *connect.Client[v1.ListCountersRequest, v1.ListCountersResponse]
	deleteAutoScaleVmProfile *connect.Client[v1.DeleteAutoScaleVmProfileRequest, v1.DeleteAutoScaleVmProfileResponse]
	listAutoScalePolicies    *connect.Client[v1.ListAutoScalePoliciesRequest, v1.ListAutoScalePoliciesResponse]
	createAutoScaleVmProfile *connect.Client[v1.CreateAutoScaleVmProfileRequest, v1.CreateAutoScaleVmProfileResponse]
	deleteCondition          *connect.Client[v1.DeleteConditionRequest, v1.DeleteConditionResponse]
	deleteAutoScaleVmGroup   *connect.Client[v1.DeleteAutoScaleVmGroupRequest, v1.DeleteAutoScaleVmGroupResponse]
	disableAutoScaleVmGroup  *connect.Client[v1.DisableAutoScaleVmGroupRequest, v1.DisableAutoScaleVmGroupResponse]
	updateAutoScaleVmProfile *connect.Client[v1.UpdateAutoScaleVmProfileRequest, v1.UpdateAutoScaleVmProfileResponse]
	enableAutoScaleVmGroup   *connect.Client[v1.EnableAutoScaleVmGroupRequest, v1.EnableAutoScaleVmGroupResponse]
	updateAutoScaleVmGroup   *connect.Client[v1.UpdateAutoScaleVmGroupRequest, v1.UpdateAutoScaleVmGroupResponse]
	updateAutoScalePolicy    *connect.Client[v1.UpdateAutoScalePolicyRequest, v1.UpdateAutoScalePolicyResponse]
	createAutoScaleVmGroup   *connect.Client[v1.CreateAutoScaleVmGroupRequest, v1.CreateAutoScaleVmGroupResponse]
	deleteAutoScalePolicy    *connect.Client[v1.DeleteAutoScalePolicyRequest, v1.DeleteAutoScalePolicyResponse]
	listAutoScaleVmGroups    *connect.Client[v1.ListAutoScaleVmGroupsRequest, v1.ListAutoScaleVmGroupsResponse]
	createCounter            *connect.Client[v1.CreateCounterRequest, v1.CreateCounterResponse]
	listAutoScaleVmProfiles  *connect.Client[v1.ListAutoScaleVmProfilesRequest, v1.ListAutoScaleVmProfilesResponse]
	updateCondition          *connect.Client[v1.UpdateConditionRequest, v1.UpdateConditionResponse]
}

// CreateAutoScalePolicy calls
// cloudstack.management.autoscale.v1.AutoscaleService.CreateAutoScalePolicy.
func (c *autoscaleServiceClient) CreateAutoScalePolicy(ctx context.Context, req *connect.Request[v1.CreateAutoScalePolicyRequest]) (*connect.Response[v1.CreateAutoScalePolicyResponse], error) {
	return c.createAutoScalePolicy.CallUnary(ctx, req)
}

// ListConditions calls cloudstack.management.autoscale.v1.AutoscaleService.ListConditions.
func (c *autoscaleServiceClient) ListConditions(ctx context.Context, req *connect.Request[v1.ListConditionsRequest]) (*connect.Response[v1.ListConditionsResponse], error) {
	return c.listConditions.CallUnary(ctx, req)
}

// CreateCondition calls cloudstack.management.autoscale.v1.AutoscaleService.CreateCondition.
func (c *autoscaleServiceClient) CreateCondition(ctx context.Context, req *connect.Request[v1.CreateConditionRequest]) (*connect.Response[v1.CreateConditionResponse], error) {
	return c.createCondition.CallUnary(ctx, req)
}

// DeleteCounter calls cloudstack.management.autoscale.v1.AutoscaleService.DeleteCounter.
func (c *autoscaleServiceClient) DeleteCounter(ctx context.Context, req *connect.Request[v1.DeleteCounterRequest]) (*connect.Response[v1.DeleteCounterResponse], error) {
	return c.deleteCounter.CallUnary(ctx, req)
}

// ListCounters calls cloudstack.management.autoscale.v1.AutoscaleService.ListCounters.
func (c *autoscaleServiceClient) ListCounters(ctx context.Context, req *connect.Request[v1.ListCountersRequest]) (*connect.Response[v1.ListCountersResponse], error) {
	return c.listCounters.CallUnary(ctx, req)
}

// DeleteAutoScaleVmProfile calls
// cloudstack.management.autoscale.v1.AutoscaleService.DeleteAutoScaleVmProfile.
func (c *autoscaleServiceClient) DeleteAutoScaleVmProfile(ctx context.Context, req *connect.Request[v1.DeleteAutoScaleVmProfileRequest]) (*connect.Response[v1.DeleteAutoScaleVmProfileResponse], error) {
	return c.deleteAutoScaleVmProfile.CallUnary(ctx, req)
}

// ListAutoScalePolicies calls
// cloudstack.management.autoscale.v1.AutoscaleService.ListAutoScalePolicies.
func (c *autoscaleServiceClient) ListAutoScalePolicies(ctx context.Context, req *connect.Request[v1.ListAutoScalePoliciesRequest]) (*connect.Response[v1.ListAutoScalePoliciesResponse], error) {
	return c.listAutoScalePolicies.CallUnary(ctx, req)
}

// CreateAutoScaleVmProfile calls
// cloudstack.management.autoscale.v1.AutoscaleService.CreateAutoScaleVmProfile.
func (c *autoscaleServiceClient) CreateAutoScaleVmProfile(ctx context.Context, req *connect.Request[v1.CreateAutoScaleVmProfileRequest]) (*connect.Response[v1.CreateAutoScaleVmProfileResponse], error) {
	return c.createAutoScaleVmProfile.CallUnary(ctx, req)
}

// DeleteCondition calls cloudstack.management.autoscale.v1.AutoscaleService.DeleteCondition.
func (c *autoscaleServiceClient) DeleteCondition(ctx context.Context, req *connect.Request[v1.DeleteConditionRequest]) (*connect.Response[v1.DeleteConditionResponse], error) {
	return c.deleteCondition.CallUnary(ctx, req)
}

// DeleteAutoScaleVmGroup calls
// cloudstack.management.autoscale.v1.AutoscaleService.DeleteAutoScaleVmGroup.
func (c *autoscaleServiceClient) DeleteAutoScaleVmGroup(ctx context.Context, req *connect.Request[v1.DeleteAutoScaleVmGroupRequest]) (*connect.Response[v1.DeleteAutoScaleVmGroupResponse], error) {
	return c.deleteAutoScaleVmGroup.CallUnary(ctx, req)
}

// DisableAutoScaleVmGroup calls
// cloudstack.management.autoscale.v1.AutoscaleService.DisableAutoScaleVmGroup.
func (c *autoscaleServiceClient) DisableAutoScaleVmGroup(ctx context.Context, req *connect.Request[v1.DisableAutoScaleVmGroupRequest]) (*connect.Response[v1.DisableAutoScaleVmGroupResponse], error) {
	return c.disableAutoScaleVmGroup.CallUnary(ctx, req)
}

// UpdateAutoScaleVmProfile calls
// cloudstack.management.autoscale.v1.AutoscaleService.UpdateAutoScaleVmProfile.
func (c *autoscaleServiceClient) UpdateAutoScaleVmProfile(ctx context.Context, req *connect.Request[v1.UpdateAutoScaleVmProfileRequest]) (*connect.Response[v1.UpdateAutoScaleVmProfileResponse], error) {
	return c.updateAutoScaleVmProfile.CallUnary(ctx, req)
}

// EnableAutoScaleVmGroup calls
// cloudstack.management.autoscale.v1.AutoscaleService.EnableAutoScaleVmGroup.
func (c *autoscaleServiceClient) EnableAutoScaleVmGroup(ctx context.Context, req *connect.Request[v1.EnableAutoScaleVmGroupRequest]) (*connect.Response[v1.EnableAutoScaleVmGroupResponse], error) {
	return c.enableAutoScaleVmGroup.CallUnary(ctx, req)
}

// UpdateAutoScaleVmGroup calls
// cloudstack.management.autoscale.v1.AutoscaleService.UpdateAutoScaleVmGroup.
func (c *autoscaleServiceClient) UpdateAutoScaleVmGroup(ctx context.Context, req *connect.Request[v1.UpdateAutoScaleVmGroupRequest]) (*connect.Response[v1.UpdateAutoScaleVmGroupResponse], error) {
	return c.updateAutoScaleVmGroup.CallUnary(ctx, req)
}

// UpdateAutoScalePolicy calls
// cloudstack.management.autoscale.v1.AutoscaleService.UpdateAutoScalePolicy.
func (c *autoscaleServiceClient) UpdateAutoScalePolicy(ctx context.Context, req *connect.Request[v1.UpdateAutoScalePolicyRequest]) (*connect.Response[v1.UpdateAutoScalePolicyResponse], error) {
	return c.updateAutoScalePolicy.CallUnary(ctx, req)
}

// CreateAutoScaleVmGroup calls
// cloudstack.management.autoscale.v1.AutoscaleService.CreateAutoScaleVmGroup.
func (c *autoscaleServiceClient) CreateAutoScaleVmGroup(ctx context.Context, req *connect.Request[v1.CreateAutoScaleVmGroupRequest]) (*connect.Response[v1.CreateAutoScaleVmGroupResponse], error) {
	return c.createAutoScaleVmGroup.CallUnary(ctx, req)
}

// DeleteAutoScalePolicy calls
// cloudstack.management.autoscale.v1.AutoscaleService.DeleteAutoScalePolicy.
func (c *autoscaleServiceClient) DeleteAutoScalePolicy(ctx context.Context, req *connect.Request[v1.DeleteAutoScalePolicyRequest]) (*connect.Response[v1.DeleteAutoScalePolicyResponse], error) {
	return c.deleteAutoScalePolicy.CallUnary(ctx, req)
}

// ListAutoScaleVmGroups calls
// cloudstack.management.autoscale.v1.AutoscaleService.ListAutoScaleVmGroups.
func (c *autoscaleServiceClient) ListAutoScaleVmGroups(ctx context.Context, req *connect.Request[v1.ListAutoScaleVmGroupsRequest]) (*connect.Response[v1.ListAutoScaleVmGroupsResponse], error) {
	return c.listAutoScaleVmGroups.CallUnary(ctx, req)
}

// CreateCounter calls cloudstack.management.autoscale.v1.AutoscaleService.CreateCounter.
func (c *autoscaleServiceClient) CreateCounter(ctx context.Context, req *connect.Request[v1.CreateCounterRequest]) (*connect.Response[v1.CreateCounterResponse], error) {
	return c.createCounter.CallUnary(ctx, req)
}

// ListAutoScaleVmProfiles calls
// cloudstack.management.autoscale.v1.AutoscaleService.ListAutoScaleVmProfiles.
func (c *autoscaleServiceClient) ListAutoScaleVmProfiles(ctx context.Context, req *connect.Request[v1.ListAutoScaleVmProfilesRequest]) (*connect.Response[v1.ListAutoScaleVmProfilesResponse], error) {
	return c.listAutoScaleVmProfiles.CallUnary(ctx, req)
}

// UpdateCondition calls cloudstack.management.autoscale.v1.AutoscaleService.UpdateCondition.
func (c *autoscaleServiceClient) UpdateCondition(ctx context.Context, req *connect.Request[v1.UpdateConditionRequest]) (*connect.Response[v1.UpdateConditionResponse], error) {
	return c.updateCondition.CallUnary(ctx, req)
}

// AutoscaleServiceHandler is an implementation of the
// cloudstack.management.autoscale.v1.AutoscaleService service.
type AutoscaleServiceHandler interface {
	// CreateAutoScalePolicy Creates an autoscale policy for a provision or deprovision action, the action is taken when the all the conditions evaluates to true for the specified duration. The policy is in effect once it is attached to a autscale vm group.
	CreateAutoScalePolicy(context.Context, *connect.Request[v1.CreateAutoScalePolicyRequest]) (*connect.Response[v1.CreateAutoScalePolicyResponse], error)
	// ListConditions List Conditions for VM auto scaling
	ListConditions(context.Context, *connect.Request[v1.ListConditionsRequest]) (*connect.Response[v1.ListConditionsResponse], error)
	// CreateCondition Creates a condition for VM auto scaling
	CreateCondition(context.Context, *connect.Request[v1.CreateConditionRequest]) (*connect.Response[v1.CreateConditionResponse], error)
	// DeleteCounter Deletes a counter for VM auto scaling
	DeleteCounter(context.Context, *connect.Request[v1.DeleteCounterRequest]) (*connect.Response[v1.DeleteCounterResponse], error)
	// ListCounters List the counters for VM auto scaling
	ListCounters(context.Context, *connect.Request[v1.ListCountersRequest]) (*connect.Response[v1.ListCountersResponse], error)
	// DeleteAutoScaleVmProfile Deletes a autoscale vm profile.
	DeleteAutoScaleVmProfile(context.Context, *connect.Request[v1.DeleteAutoScaleVmProfileRequest]) (*connect.Response[v1.DeleteAutoScaleVmProfileResponse], error)
	// ListAutoScalePolicies Lists autoscale policies.
	ListAutoScalePolicies(context.Context, *connect.Request[v1.ListAutoScalePoliciesRequest]) (*connect.Response[v1.ListAutoScalePoliciesResponse], error)
	// CreateAutoScaleVmProfile Creates a profile that contains information about the virtual machine which will be provisioned automatically by autoscale feature.
	CreateAutoScaleVmProfile(context.Context, *connect.Request[v1.CreateAutoScaleVmProfileRequest]) (*connect.Response[v1.CreateAutoScaleVmProfileResponse], error)
	// DeleteCondition Removes a condition for VM auto scaling
	DeleteCondition(context.Context, *connect.Request[v1.DeleteConditionRequest]) (*connect.Response[v1.DeleteConditionResponse], error)
	// DeleteAutoScaleVmGroup Deletes a autoscale vm group.
	DeleteAutoScaleVmGroup(context.Context, *connect.Request[v1.DeleteAutoScaleVmGroupRequest]) (*connect.Response[v1.DeleteAutoScaleVmGroupResponse], error)
	// DisableAutoScaleVmGroup Disables an AutoScale Vm Group
	DisableAutoScaleVmGroup(context.Context, *connect.Request[v1.DisableAutoScaleVmGroupRequest]) (*connect.Response[v1.DisableAutoScaleVmGroupResponse], error)
	// UpdateAutoScaleVmProfile Updates an existing autoscale vm profile.
	UpdateAutoScaleVmProfile(context.Context, *connect.Request[v1.UpdateAutoScaleVmProfileRequest]) (*connect.Response[v1.UpdateAutoScaleVmProfileResponse], error)
	// EnableAutoScaleVmGroup Enables an AutoScale Vm Group
	EnableAutoScaleVmGroup(context.Context, *connect.Request[v1.EnableAutoScaleVmGroupRequest]) (*connect.Response[v1.EnableAutoScaleVmGroupResponse], error)
	// UpdateAutoScaleVmGroup Updates an existing autoscale vm group.
	UpdateAutoScaleVmGroup(context.Context, *connect.Request[v1.UpdateAutoScaleVmGroupRequest]) (*connect.Response[v1.UpdateAutoScaleVmGroupResponse], error)
	// UpdateAutoScalePolicy Updates an existing autoscale policy.
	UpdateAutoScalePolicy(context.Context, *connect.Request[v1.UpdateAutoScalePolicyRequest]) (*connect.Response[v1.UpdateAutoScalePolicyResponse], error)
	// CreateAutoScaleVmGroup Creates and automatically starts a virtual machine based on a service offering, disk offering, and template.
	CreateAutoScaleVmGroup(context.Context, *connect.Request[v1.CreateAutoScaleVmGroupRequest]) (*connect.Response[v1.CreateAutoScaleVmGroupResponse], error)
	// DeleteAutoScalePolicy Deletes a autoscale policy.
	DeleteAutoScalePolicy(context.Context, *connect.Request[v1.DeleteAutoScalePolicyRequest]) (*connect.Response[v1.DeleteAutoScalePolicyResponse], error)
	// ListAutoScaleVmGroups Lists autoscale vm groups.
	ListAutoScaleVmGroups(context.Context, *connect.Request[v1.ListAutoScaleVmGroupsRequest]) (*connect.Response[v1.ListAutoScaleVmGroupsResponse], error)
	// CreateCounter Adds metric counter for VM auto scaling
	CreateCounter(context.Context, *connect.Request[v1.CreateCounterRequest]) (*connect.Response[v1.CreateCounterResponse], error)
	// ListAutoScaleVmProfiles Lists autoscale vm profiles.
	ListAutoScaleVmProfiles(context.Context, *connect.Request[v1.ListAutoScaleVmProfilesRequest]) (*connect.Response[v1.ListAutoScaleVmProfilesResponse], error)
	// UpdateCondition Updates a condition for VM auto scaling
	UpdateCondition(context.Context, *connect.Request[v1.UpdateConditionRequest]) (*connect.Response[v1.UpdateConditionResponse], error)
}

// NewAutoscaleServiceHandler builds an HTTP handler from the service implementation. It returns the
// path on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewAutoscaleServiceHandler(svc AutoscaleServiceHandler, opts ...connect.HandlerOption) (string, http.Handler) {
	autoscaleServiceMethods := v1.File_cloudstack_management_autoscale_v1_autoscale_gen_proto.Services().ByName("AutoscaleService").Methods()
	autoscaleServiceCreateAutoScalePolicyHandler := connect.NewUnaryHandler(
		AutoscaleServiceCreateAutoScalePolicyProcedure,
		svc.CreateAutoScalePolicy,
		connect.WithSchema(autoscaleServiceMethods.ByName("CreateAutoScalePolicy")),
		connect.WithHandlerOptions(opts...),
	)
	autoscaleServiceListConditionsHandler := connect.NewUnaryHandler(
		AutoscaleServiceListConditionsProcedure,
		svc.ListConditions,
		connect.WithSchema(autoscaleServiceMethods.ByName("ListConditions")),
		connect.WithHandlerOptions(opts...),
	)
	autoscaleServiceCreateConditionHandler := connect.NewUnaryHandler(
		AutoscaleServiceCreateConditionProcedure,
		svc.CreateCondition,
		connect.WithSchema(autoscaleServiceMethods.ByName("CreateCondition")),
		connect.WithHandlerOptions(opts...),
	)
	autoscaleServiceDeleteCounterHandler := connect.NewUnaryHandler(
		AutoscaleServiceDeleteCounterProcedure,
		svc.DeleteCounter,
		connect.WithSchema(autoscaleServiceMethods.ByName("DeleteCounter")),
		connect.WithHandlerOptions(opts...),
	)
	autoscaleServiceListCountersHandler := connect.NewUnaryHandler(
		AutoscaleServiceListCountersProcedure,
		svc.ListCounters,
		connect.WithSchema(autoscaleServiceMethods.ByName("ListCounters")),
		connect.WithHandlerOptions(opts...),
	)
	autoscaleServiceDeleteAutoScaleVmProfileHandler := connect.NewUnaryHandler(
		AutoscaleServiceDeleteAutoScaleVmProfileProcedure,
		svc.DeleteAutoScaleVmProfile,
		connect.WithSchema(autoscaleServiceMethods.ByName("DeleteAutoScaleVmProfile")),
		connect.WithHandlerOptions(opts...),
	)
	autoscaleServiceListAutoScalePoliciesHandler := connect.NewUnaryHandler(
		AutoscaleServiceListAutoScalePoliciesProcedure,
		svc.ListAutoScalePolicies,
		connect.WithSchema(autoscaleServiceMethods.ByName("ListAutoScalePolicies")),
		connect.WithHandlerOptions(opts...),
	)
	autoscaleServiceCreateAutoScaleVmProfileHandler := connect.NewUnaryHandler(
		AutoscaleServiceCreateAutoScaleVmProfileProcedure,
		svc.CreateAutoScaleVmProfile,
		connect.WithSchema(autoscaleServiceMethods.ByName("CreateAutoScaleVmProfile")),
		connect.WithHandlerOptions(opts...),
	)
	autoscaleServiceDeleteConditionHandler := connect.NewUnaryHandler(
		AutoscaleServiceDeleteConditionProcedure,
		svc.DeleteCondition,
		connect.WithSchema(autoscaleServiceMethods.ByName("DeleteCondition")),
		connect.WithHandlerOptions(opts...),
	)
	autoscaleServiceDeleteAutoScaleVmGroupHandler := connect.NewUnaryHandler(
		AutoscaleServiceDeleteAutoScaleVmGroupProcedure,
		svc.DeleteAutoScaleVmGroup,
		connect.WithSchema(autoscaleServiceMethods.ByName("DeleteAutoScaleVmGroup")),
		connect.WithHandlerOptions(opts...),
	)
	autoscaleServiceDisableAutoScaleVmGroupHandler := connect.NewUnaryHandler(
		AutoscaleServiceDisableAutoScaleVmGroupProcedure,
		svc.DisableAutoScaleVmGroup,
		connect.WithSchema(autoscaleServiceMethods.ByName("DisableAutoScaleVmGroup")),
		connect.WithHandlerOptions(opts...),
	)
	autoscaleServiceUpdateAutoScaleVmProfileHandler := connect.NewUnaryHandler(
		AutoscaleServiceUpdateAutoScaleVmProfileProcedure,
		svc.UpdateAutoScaleVmProfile,
		connect.WithSchema(autoscaleServiceMethods.ByName("UpdateAutoScaleVmProfile")),
		connect.WithHandlerOptions(opts...),
	)
	autoscaleServiceEnableAutoScaleVmGroupHandler := connect.NewUnaryHandler(
		AutoscaleServiceEnableAutoScaleVmGroupProcedure,
		svc.EnableAutoScaleVmGroup,
		connect.WithSchema(autoscaleServiceMethods.ByName("EnableAutoScaleVmGroup")),
		connect.WithHandlerOptions(opts...),
	)
	autoscaleServiceUpdateAutoScaleVmGroupHandler := connect.NewUnaryHandler(
		AutoscaleServiceUpdateAutoScaleVmGroupProcedure,
		svc.UpdateAutoScaleVmGroup,
		connect.WithSchema(autoscaleServiceMethods.ByName("UpdateAutoScaleVmGroup")),
		connect.WithHandlerOptions(opts...),
	)
	autoscaleServiceUpdateAutoScalePolicyHandler := connect.NewUnaryHandler(
		AutoscaleServiceUpdateAutoScalePolicyProcedure,
		svc.UpdateAutoScalePolicy,
		connect.WithSchema(autoscaleServiceMethods.ByName("UpdateAutoScalePolicy")),
		connect.WithHandlerOptions(opts...),
	)
	autoscaleServiceCreateAutoScaleVmGroupHandler := connect.NewUnaryHandler(
		AutoscaleServiceCreateAutoScaleVmGroupProcedure,
		svc.CreateAutoScaleVmGroup,
		connect.WithSchema(autoscaleServiceMethods.ByName("CreateAutoScaleVmGroup")),
		connect.WithHandlerOptions(opts...),
	)
	autoscaleServiceDeleteAutoScalePolicyHandler := connect.NewUnaryHandler(
		AutoscaleServiceDeleteAutoScalePolicyProcedure,
		svc.DeleteAutoScalePolicy,
		connect.WithSchema(autoscaleServiceMethods.ByName("DeleteAutoScalePolicy")),
		connect.WithHandlerOptions(opts...),
	)
	autoscaleServiceListAutoScaleVmGroupsHandler := connect.NewUnaryHandler(
		AutoscaleServiceListAutoScaleVmGroupsProcedure,
		svc.ListAutoScaleVmGroups,
		connect.WithSchema(autoscaleServiceMethods.ByName("ListAutoScaleVmGroups")),
		connect.WithHandlerOptions(opts...),
	)
	autoscaleServiceCreateCounterHandler := connect.NewUnaryHandler(
		AutoscaleServiceCreateCounterProcedure,
		svc.CreateCounter,
		connect.WithSchema(autoscaleServiceMethods.ByName("CreateCounter")),
		connect.WithHandlerOptions(opts...),
	)
	autoscaleServiceListAutoScaleVmProfilesHandler := connect.NewUnaryHandler(
		AutoscaleServiceListAutoScaleVmProfilesProcedure,
		svc.ListAutoScaleVmProfiles,
		connect.WithSchema(autoscaleServiceMethods.ByName("ListAutoScaleVmProfiles")),
		connect.WithHandlerOptions(opts...),
	)
	autoscaleServiceUpdateConditionHandler := connect.NewUnaryHandler(
		AutoscaleServiceUpdateConditionProcedure,
		svc.UpdateCondition,
		connect.WithSchema(autoscaleServiceMethods.ByName("UpdateCondition")),
		connect.WithHandlerOptions(opts...),
	)
	return "/cloudstack.management.autoscale.v1.AutoscaleService/", http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		switch r.URL.Path {
		case AutoscaleServiceCreateAutoScalePolicyProcedure:
			autoscaleServiceCreateAutoScalePolicyHandler.ServeHTTP(w, r)
		case AutoscaleServiceListConditionsProcedure:
			autoscaleServiceListConditionsHandler.ServeHTTP(w, r)
		case AutoscaleServiceCreateConditionProcedure:
			autoscaleServiceCreateConditionHandler.ServeHTTP(w, r)
		case AutoscaleServiceDeleteCounterProcedure:
			autoscaleServiceDeleteCounterHandler.ServeHTTP(w, r)
		case AutoscaleServiceListCountersProcedure:
			autoscaleServiceListCountersHandler.ServeHTTP(w, r)
		case AutoscaleServiceDeleteAutoScaleVmProfileProcedure:
			autoscaleServiceDeleteAutoScaleVmProfileHandler.ServeHTTP(w, r)
		case AutoscaleServiceListAutoScalePoliciesProcedure:
			autoscaleServiceListAutoScalePoliciesHandler.ServeHTTP(w, r)
		case AutoscaleServiceCreateAutoScaleVmProfileProcedure:
			autoscaleServiceCreateAutoScaleVmProfileHandler.ServeHTTP(w, r)
		case AutoscaleServiceDeleteConditionProcedure:
			autoscaleServiceDeleteConditionHandler.ServeHTTP(w, r)
		case AutoscaleServiceDeleteAutoScaleVmGroupProcedure:
			autoscaleServiceDeleteAutoScaleVmGroupHandler.ServeHTTP(w, r)
		case AutoscaleServiceDisableAutoScaleVmGroupProcedure:
			autoscaleServiceDisableAutoScaleVmGroupHandler.ServeHTTP(w, r)
		case AutoscaleServiceUpdateAutoScaleVmProfileProcedure:
			autoscaleServiceUpdateAutoScaleVmProfileHandler.ServeHTTP(w, r)
		case AutoscaleServiceEnableAutoScaleVmGroupProcedure:
			autoscaleServiceEnableAutoScaleVmGroupHandler.ServeHTTP(w, r)
		case AutoscaleServiceUpdateAutoScaleVmGroupProcedure:
			autoscaleServiceUpdateAutoScaleVmGroupHandler.ServeHTTP(w, r)
		case AutoscaleServiceUpdateAutoScalePolicyProcedure:
			autoscaleServiceUpdateAutoScalePolicyHandler.ServeHTTP(w, r)
		case AutoscaleServiceCreateAutoScaleVmGroupProcedure:
			autoscaleServiceCreateAutoScaleVmGroupHandler.ServeHTTP(w, r)
		case AutoscaleServiceDeleteAutoScalePolicyProcedure:
			autoscaleServiceDeleteAutoScalePolicyHandler.ServeHTTP(w, r)
		case AutoscaleServiceListAutoScaleVmGroupsProcedure:
			autoscaleServiceListAutoScaleVmGroupsHandler.ServeHTTP(w, r)
		case AutoscaleServiceCreateCounterProcedure:
			autoscaleServiceCreateCounterHandler.ServeHTTP(w, r)
		case AutoscaleServiceListAutoScaleVmProfilesProcedure:
			autoscaleServiceListAutoScaleVmProfilesHandler.ServeHTTP(w, r)
		case AutoscaleServiceUpdateConditionProcedure:
			autoscaleServiceUpdateConditionHandler.ServeHTTP(w, r)
		default:
			http.NotFound(w, r)
		}
	})
}

// UnimplementedAutoscaleServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedAutoscaleServiceHandler struct{}

func (UnimplementedAutoscaleServiceHandler) CreateAutoScalePolicy(context.Context, *connect.Request[v1.CreateAutoScalePolicyRequest]) (*connect.Response[v1.CreateAutoScalePolicyResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("cloudstack.management.autoscale.v1.AutoscaleService.CreateAutoScalePolicy is not implemented"))
}

func (UnimplementedAutoscaleServiceHandler) ListConditions(context.Context, *connect.Request[v1.ListConditionsRequest]) (*connect.Response[v1.ListConditionsResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("cloudstack.management.autoscale.v1.AutoscaleService.ListConditions is not implemented"))
}

func (UnimplementedAutoscaleServiceHandler) CreateCondition(context.Context, *connect.Request[v1.CreateConditionRequest]) (*connect.Response[v1.CreateConditionResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("cloudstack.management.autoscale.v1.AutoscaleService.CreateCondition is not implemented"))
}

func (UnimplementedAutoscaleServiceHandler) DeleteCounter(context.Context, *connect.Request[v1.DeleteCounterRequest]) (*connect.Response[v1.DeleteCounterResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("cloudstack.management.autoscale.v1.AutoscaleService.DeleteCounter is not implemented"))
}

func (UnimplementedAutoscaleServiceHandler) ListCounters(context.Context, *connect.Request[v1.ListCountersRequest]) (*connect.Response[v1.ListCountersResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("cloudstack.management.autoscale.v1.AutoscaleService.ListCounters is not implemented"))
}

func (UnimplementedAutoscaleServiceHandler) DeleteAutoScaleVmProfile(context.Context, *connect.Request[v1.DeleteAutoScaleVmProfileRequest]) (*connect.Response[v1.DeleteAutoScaleVmProfileResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("cloudstack.management.autoscale.v1.AutoscaleService.DeleteAutoScaleVmProfile is not implemented"))
}

func (UnimplementedAutoscaleServiceHandler) ListAutoScalePolicies(context.Context, *connect.Request[v1.ListAutoScalePoliciesRequest]) (*connect.Response[v1.ListAutoScalePoliciesResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("cloudstack.management.autoscale.v1.AutoscaleService.ListAutoScalePolicies is not implemented"))
}

func (UnimplementedAutoscaleServiceHandler) CreateAutoScaleVmProfile(context.Context, *connect.Request[v1.CreateAutoScaleVmProfileRequest]) (*connect.Response[v1.CreateAutoScaleVmProfileResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("cloudstack.management.autoscale.v1.AutoscaleService.CreateAutoScaleVmProfile is not implemented"))
}

func (UnimplementedAutoscaleServiceHandler) DeleteCondition(context.Context, *connect.Request[v1.DeleteConditionRequest]) (*connect.Response[v1.DeleteConditionResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("cloudstack.management.autoscale.v1.AutoscaleService.DeleteCondition is not implemented"))
}

func (UnimplementedAutoscaleServiceHandler) DeleteAutoScaleVmGroup(context.Context, *connect.Request[v1.DeleteAutoScaleVmGroupRequest]) (*connect.Response[v1.DeleteAutoScaleVmGroupResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("cloudstack.management.autoscale.v1.AutoscaleService.DeleteAutoScaleVmGroup is not implemented"))
}

func (UnimplementedAutoscaleServiceHandler) DisableAutoScaleVmGroup(context.Context, *connect.Request[v1.DisableAutoScaleVmGroupRequest]) (*connect.Response[v1.DisableAutoScaleVmGroupResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("cloudstack.management.autoscale.v1.AutoscaleService.DisableAutoScaleVmGroup is not implemented"))
}

func (UnimplementedAutoscaleServiceHandler) UpdateAutoScaleVmProfile(context.Context, *connect.Request[v1.UpdateAutoScaleVmProfileRequest]) (*connect.Response[v1.UpdateAutoScaleVmProfileResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("cloudstack.management.autoscale.v1.AutoscaleService.UpdateAutoScaleVmProfile is not implemented"))
}

func (UnimplementedAutoscaleServiceHandler) EnableAutoScaleVmGroup(context.Context, *connect.Request[v1.EnableAutoScaleVmGroupRequest]) (*connect.Response[v1.EnableAutoScaleVmGroupResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("cloudstack.management.autoscale.v1.AutoscaleService.EnableAutoScaleVmGroup is not implemented"))
}

func (UnimplementedAutoscaleServiceHandler) UpdateAutoScaleVmGroup(context.Context, *connect.Request[v1.UpdateAutoScaleVmGroupRequest]) (*connect.Response[v1.UpdateAutoScaleVmGroupResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("cloudstack.management.autoscale.v1.AutoscaleService.UpdateAutoScaleVmGroup is not implemented"))
}

func (UnimplementedAutoscaleServiceHandler) UpdateAutoScalePolicy(context.Context, *connect.Request[v1.UpdateAutoScalePolicyRequest]) (*connect.Response[v1.UpdateAutoScalePolicyResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("cloudstack.management.autoscale.v1.AutoscaleService.UpdateAutoScalePolicy is not implemented"))
}

func (UnimplementedAutoscaleServiceHandler) CreateAutoScaleVmGroup(context.Context, *connect.Request[v1.CreateAutoScaleVmGroupRequest]) (*connect.Response[v1.CreateAutoScaleVmGroupResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("cloudstack.management.autoscale.v1.AutoscaleService.CreateAutoScaleVmGroup is not implemented"))
}

func (UnimplementedAutoscaleServiceHandler) DeleteAutoScalePolicy(context.Context, *connect.Request[v1.DeleteAutoScalePolicyRequest]) (*connect.Response[v1.DeleteAutoScalePolicyResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("cloudstack.management.autoscale.v1.AutoscaleService.DeleteAutoScalePolicy is not implemented"))
}

func (UnimplementedAutoscaleServiceHandler) ListAutoScaleVmGroups(context.Context, *connect.Request[v1.ListAutoScaleVmGroupsRequest]) (*connect.Response[v1.ListAutoScaleVmGroupsResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("cloudstack.management.autoscale.v1.AutoscaleService.ListAutoScaleVmGroups is not implemented"))
}

func (UnimplementedAutoscaleServiceHandler) CreateCounter(context.Context, *connect.Request[v1.CreateCounterRequest]) (*connect.Response[v1.CreateCounterResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("cloudstack.management.autoscale.v1.AutoscaleService.CreateCounter is not implemented"))
}

func (UnimplementedAutoscaleServiceHandler) ListAutoScaleVmProfiles(context.Context, *connect.Request[v1.ListAutoScaleVmProfilesRequest]) (*connect.Response[v1.ListAutoScaleVmProfilesResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("cloudstack.management.autoscale.v1.AutoscaleService.ListAutoScaleVmProfiles is not implemented"))
}

func (UnimplementedAutoscaleServiceHandler) UpdateCondition(context.Context, *connect.Request[v1.UpdateConditionRequest]) (*connect.Response[v1.UpdateConditionResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("cloudstack.management.autoscale.v1.AutoscaleService.UpdateCondition is not implemented"))
}
