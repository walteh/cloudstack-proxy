// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: cloudstack/management/bgp/v1/bgp.gen.proto

package bgpv1connect

import (
	connect "connectrpc.com/connect"
	context "context"
	errors "errors"
	v1 "github.com/walteh/cloudstack-proxy/gen/proto/golang/cloudstack/management/bgp/v1"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect.IsAtLeastVersion1_13_0

const (
	// BgpServiceName is the fully-qualified name of the BgpService service.
	BgpServiceName = "cloudstack.management.bgp.v1.BgpService"
)

// These constants are the fully-qualified names of the RPCs defined in this package. They're
// exposed at runtime as Spec.Procedure and as the final two segments of the HTTP route.
//
// Note that these are different from the fully-qualified method names used by
// google.golang.org/protobuf/reflect/protoreflect. To convert from these constants to
// reflection-formatted method names, remove the leading slash and convert the remaining slash to a
// period.
const (
	// BgpServiceCreateASNRangeProcedure is the fully-qualified name of the BgpService's CreateASNRange
	// RPC.
	BgpServiceCreateASNRangeProcedure = "/cloudstack.management.bgp.v1.BgpService/CreateASNRange"
	// BgpServiceDeleteASNRangeProcedure is the fully-qualified name of the BgpService's DeleteASNRange
	// RPC.
	BgpServiceDeleteASNRangeProcedure = "/cloudstack.management.bgp.v1.BgpService/DeleteASNRange"
	// BgpServiceListASNRangesProcedure is the fully-qualified name of the BgpService's ListASNRanges
	// RPC.
	BgpServiceListASNRangesProcedure = "/cloudstack.management.bgp.v1.BgpService/ListASNRanges"
	// BgpServiceListASNumbersProcedure is the fully-qualified name of the BgpService's ListASNumbers
	// RPC.
	BgpServiceListASNumbersProcedure = "/cloudstack.management.bgp.v1.BgpService/ListASNumbers"
	// BgpServiceReleaseASNumberProcedure is the fully-qualified name of the BgpService's
	// ReleaseASNumber RPC.
	BgpServiceReleaseASNumberProcedure = "/cloudstack.management.bgp.v1.BgpService/ReleaseASNumber"
)

// BgpServiceClient is a client for the cloudstack.management.bgp.v1.BgpService service.
type BgpServiceClient interface {
	// CreateASNRange Creates a range of Autonomous Systems for BGP Dynamic Routing
	CreateASNRange(context.Context, *connect.Request[v1.CreateASNRangeRequest]) (*connect.Response[v1.CreateASNRangeResponse], error)
	// DeleteASNRange deletes a range of Autonomous Systems for BGP Dynamic Routing
	DeleteASNRange(context.Context, *connect.Request[v1.DeleteASNRangeRequest]) (*connect.Response[v1.DeleteASNRangeResponse], error)
	// ListASNRanges List Autonomous Systems Number Ranges
	ListASNRanges(context.Context, *connect.Request[v1.ListASNRangesRequest]) (*connect.Response[v1.ListASNRangesResponse], error)
	// ListASNumbers List Autonomous Systems Numbers
	ListASNumbers(context.Context, *connect.Request[v1.ListASNumbersRequest]) (*connect.Response[v1.ListASNumbersResponse], error)
	// ReleaseASNumber Releases an AS Number back to the pool
	ReleaseASNumber(context.Context, *connect.Request[v1.ReleaseASNumberRequest]) (*connect.Response[v1.ReleaseASNumberResponse], error)
}

// NewBgpServiceClient constructs a client for the cloudstack.management.bgp.v1.BgpService service.
// By default, it uses the Connect protocol with the binary Protobuf Codec, asks for gzipped
// responses, and sends uncompressed requests. To use the gRPC or gRPC-Web protocols, supply the
// connect.WithGRPC() or connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewBgpServiceClient(httpClient connect.HTTPClient, baseURL string, opts ...connect.ClientOption) BgpServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	bgpServiceMethods := v1.File_cloudstack_management_bgp_v1_bgp_gen_proto.Services().ByName("BgpService").Methods()
	return &bgpServiceClient{
		createASNRange: connect.NewClient[v1.CreateASNRangeRequest, v1.CreateASNRangeResponse](
			httpClient,
			baseURL+BgpServiceCreateASNRangeProcedure,
			connect.WithSchema(bgpServiceMethods.ByName("CreateASNRange")),
			connect.WithClientOptions(opts...),
		),
		deleteASNRange: connect.NewClient[v1.DeleteASNRangeRequest, v1.DeleteASNRangeResponse](
			httpClient,
			baseURL+BgpServiceDeleteASNRangeProcedure,
			connect.WithSchema(bgpServiceMethods.ByName("DeleteASNRange")),
			connect.WithClientOptions(opts...),
		),
		listASNRanges: connect.NewClient[v1.ListASNRangesRequest, v1.ListASNRangesResponse](
			httpClient,
			baseURL+BgpServiceListASNRangesProcedure,
			connect.WithSchema(bgpServiceMethods.ByName("ListASNRanges")),
			connect.WithClientOptions(opts...),
		),
		listASNumbers: connect.NewClient[v1.ListASNumbersRequest, v1.ListASNumbersResponse](
			httpClient,
			baseURL+BgpServiceListASNumbersProcedure,
			connect.WithSchema(bgpServiceMethods.ByName("ListASNumbers")),
			connect.WithClientOptions(opts...),
		),
		releaseASNumber: connect.NewClient[v1.ReleaseASNumberRequest, v1.ReleaseASNumberResponse](
			httpClient,
			baseURL+BgpServiceReleaseASNumberProcedure,
			connect.WithSchema(bgpServiceMethods.ByName("ReleaseASNumber")),
			connect.WithClientOptions(opts...),
		),
	}
}

// bgpServiceClient implements BgpServiceClient.
type bgpServiceClient struct {
	createASNRange  *connect.Client[v1.CreateASNRangeRequest, v1.CreateASNRangeResponse]
	deleteASNRange  *connect.Client[v1.DeleteASNRangeRequest, v1.DeleteASNRangeResponse]
	listASNRanges   *connect.Client[v1.ListASNRangesRequest, v1.ListASNRangesResponse]
	listASNumbers   *connect.Client[v1.ListASNumbersRequest, v1.ListASNumbersResponse]
	releaseASNumber *connect.Client[v1.ReleaseASNumberRequest, v1.ReleaseASNumberResponse]
}

// CreateASNRange calls cloudstack.management.bgp.v1.BgpService.CreateASNRange.
func (c *bgpServiceClient) CreateASNRange(ctx context.Context, req *connect.Request[v1.CreateASNRangeRequest]) (*connect.Response[v1.CreateASNRangeResponse], error) {
	return c.createASNRange.CallUnary(ctx, req)
}

// DeleteASNRange calls cloudstack.management.bgp.v1.BgpService.DeleteASNRange.
func (c *bgpServiceClient) DeleteASNRange(ctx context.Context, req *connect.Request[v1.DeleteASNRangeRequest]) (*connect.Response[v1.DeleteASNRangeResponse], error) {
	return c.deleteASNRange.CallUnary(ctx, req)
}

// ListASNRanges calls cloudstack.management.bgp.v1.BgpService.ListASNRanges.
func (c *bgpServiceClient) ListASNRanges(ctx context.Context, req *connect.Request[v1.ListASNRangesRequest]) (*connect.Response[v1.ListASNRangesResponse], error) {
	return c.listASNRanges.CallUnary(ctx, req)
}

// ListASNumbers calls cloudstack.management.bgp.v1.BgpService.ListASNumbers.
func (c *bgpServiceClient) ListASNumbers(ctx context.Context, req *connect.Request[v1.ListASNumbersRequest]) (*connect.Response[v1.ListASNumbersResponse], error) {
	return c.listASNumbers.CallUnary(ctx, req)
}

// ReleaseASNumber calls cloudstack.management.bgp.v1.BgpService.ReleaseASNumber.
func (c *bgpServiceClient) ReleaseASNumber(ctx context.Context, req *connect.Request[v1.ReleaseASNumberRequest]) (*connect.Response[v1.ReleaseASNumberResponse], error) {
	return c.releaseASNumber.CallUnary(ctx, req)
}

// BgpServiceHandler is an implementation of the cloudstack.management.bgp.v1.BgpService service.
type BgpServiceHandler interface {
	// CreateASNRange Creates a range of Autonomous Systems for BGP Dynamic Routing
	CreateASNRange(context.Context, *connect.Request[v1.CreateASNRangeRequest]) (*connect.Response[v1.CreateASNRangeResponse], error)
	// DeleteASNRange deletes a range of Autonomous Systems for BGP Dynamic Routing
	DeleteASNRange(context.Context, *connect.Request[v1.DeleteASNRangeRequest]) (*connect.Response[v1.DeleteASNRangeResponse], error)
	// ListASNRanges List Autonomous Systems Number Ranges
	ListASNRanges(context.Context, *connect.Request[v1.ListASNRangesRequest]) (*connect.Response[v1.ListASNRangesResponse], error)
	// ListASNumbers List Autonomous Systems Numbers
	ListASNumbers(context.Context, *connect.Request[v1.ListASNumbersRequest]) (*connect.Response[v1.ListASNumbersResponse], error)
	// ReleaseASNumber Releases an AS Number back to the pool
	ReleaseASNumber(context.Context, *connect.Request[v1.ReleaseASNumberRequest]) (*connect.Response[v1.ReleaseASNumberResponse], error)
}

// NewBgpServiceHandler builds an HTTP handler from the service implementation. It returns the path
// on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewBgpServiceHandler(svc BgpServiceHandler, opts ...connect.HandlerOption) (string, http.Handler) {
	bgpServiceMethods := v1.File_cloudstack_management_bgp_v1_bgp_gen_proto.Services().ByName("BgpService").Methods()
	bgpServiceCreateASNRangeHandler := connect.NewUnaryHandler(
		BgpServiceCreateASNRangeProcedure,
		svc.CreateASNRange,
		connect.WithSchema(bgpServiceMethods.ByName("CreateASNRange")),
		connect.WithHandlerOptions(opts...),
	)
	bgpServiceDeleteASNRangeHandler := connect.NewUnaryHandler(
		BgpServiceDeleteASNRangeProcedure,
		svc.DeleteASNRange,
		connect.WithSchema(bgpServiceMethods.ByName("DeleteASNRange")),
		connect.WithHandlerOptions(opts...),
	)
	bgpServiceListASNRangesHandler := connect.NewUnaryHandler(
		BgpServiceListASNRangesProcedure,
		svc.ListASNRanges,
		connect.WithSchema(bgpServiceMethods.ByName("ListASNRanges")),
		connect.WithHandlerOptions(opts...),
	)
	bgpServiceListASNumbersHandler := connect.NewUnaryHandler(
		BgpServiceListASNumbersProcedure,
		svc.ListASNumbers,
		connect.WithSchema(bgpServiceMethods.ByName("ListASNumbers")),
		connect.WithHandlerOptions(opts...),
	)
	bgpServiceReleaseASNumberHandler := connect.NewUnaryHandler(
		BgpServiceReleaseASNumberProcedure,
		svc.ReleaseASNumber,
		connect.WithSchema(bgpServiceMethods.ByName("ReleaseASNumber")),
		connect.WithHandlerOptions(opts...),
	)
	return "/cloudstack.management.bgp.v1.BgpService/", http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		switch r.URL.Path {
		case BgpServiceCreateASNRangeProcedure:
			bgpServiceCreateASNRangeHandler.ServeHTTP(w, r)
		case BgpServiceDeleteASNRangeProcedure:
			bgpServiceDeleteASNRangeHandler.ServeHTTP(w, r)
		case BgpServiceListASNRangesProcedure:
			bgpServiceListASNRangesHandler.ServeHTTP(w, r)
		case BgpServiceListASNumbersProcedure:
			bgpServiceListASNumbersHandler.ServeHTTP(w, r)
		case BgpServiceReleaseASNumberProcedure:
			bgpServiceReleaseASNumberHandler.ServeHTTP(w, r)
		default:
			http.NotFound(w, r)
		}
	})
}

// UnimplementedBgpServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedBgpServiceHandler struct{}

func (UnimplementedBgpServiceHandler) CreateASNRange(context.Context, *connect.Request[v1.CreateASNRangeRequest]) (*connect.Response[v1.CreateASNRangeResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("cloudstack.management.bgp.v1.BgpService.CreateASNRange is not implemented"))
}

func (UnimplementedBgpServiceHandler) DeleteASNRange(context.Context, *connect.Request[v1.DeleteASNRangeRequest]) (*connect.Response[v1.DeleteASNRangeResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("cloudstack.management.bgp.v1.BgpService.DeleteASNRange is not implemented"))
}

func (UnimplementedBgpServiceHandler) ListASNRanges(context.Context, *connect.Request[v1.ListASNRangesRequest]) (*connect.Response[v1.ListASNRangesResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("cloudstack.management.bgp.v1.BgpService.ListASNRanges is not implemented"))
}

func (UnimplementedBgpServiceHandler) ListASNumbers(context.Context, *connect.Request[v1.ListASNumbersRequest]) (*connect.Response[v1.ListASNumbersResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("cloudstack.management.bgp.v1.BgpService.ListASNumbers is not implemented"))
}

func (UnimplementedBgpServiceHandler) ReleaseASNumber(context.Context, *connect.Request[v1.ReleaseASNumberRequest]) (*connect.Response[v1.ReleaseASNumberResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("cloudstack.management.bgp.v1.BgpService.ReleaseASNumber is not implemented"))
}
