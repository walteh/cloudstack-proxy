// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: cloudstack/management/userdata/v1/userdata.gen.proto

package userdatav1connect

import (
	connect "connectrpc.com/connect"
	context "context"
	errors "errors"
	v1 "github.com/walteh/cloudstack-proxy/gen/proto/golang/cloudstack/management/userdata/v1"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect.IsAtLeastVersion1_13_0

const (
	// UserdataServiceName is the fully-qualified name of the UserdataService service.
	UserdataServiceName = "cloudstack.management.userdata.v1.UserdataService"
)

// These constants are the fully-qualified names of the RPCs defined in this package. They're
// exposed at runtime as Spec.Procedure and as the final two segments of the HTTP route.
//
// Note that these are different from the fully-qualified method names used by
// google.golang.org/protobuf/reflect/protoreflect. To convert from these constants to
// reflection-formatted method names, remove the leading slash and convert the remaining slash to a
// period.
const (
	// UserdataServiceDeleteUserDataProcedure is the fully-qualified name of the UserdataService's
	// DeleteUserData RPC.
	UserdataServiceDeleteUserDataProcedure = "/cloudstack.management.userdata.v1.UserdataService/DeleteUserData"
	// UserdataServiceLinkUserDataToTemplateProcedure is the fully-qualified name of the
	// UserdataService's LinkUserDataToTemplate RPC.
	UserdataServiceLinkUserDataToTemplateProcedure = "/cloudstack.management.userdata.v1.UserdataService/LinkUserDataToTemplate"
	// UserdataServiceListUserDataProcedure is the fully-qualified name of the UserdataService's
	// ListUserData RPC.
	UserdataServiceListUserDataProcedure = "/cloudstack.management.userdata.v1.UserdataService/ListUserData"
	// UserdataServiceRegisterUserDataProcedure is the fully-qualified name of the UserdataService's
	// RegisterUserData RPC.
	UserdataServiceRegisterUserDataProcedure = "/cloudstack.management.userdata.v1.UserdataService/RegisterUserData"
)

// UserdataServiceClient is a client for the cloudstack.management.userdata.v1.UserdataService
// service.
type UserdataServiceClient interface {
	// DeleteUserData Deletes a userdata
	DeleteUserData(context.Context, *connect.Request[v1.DeleteUserDataRequest]) (*connect.Response[v1.DeleteUserDataResponse], error)
	// LinkUserDataToTemplate Link or unlink a userdata to a template.
	LinkUserDataToTemplate(context.Context, *connect.Request[v1.LinkUserDataToTemplateRequest]) (*connect.Response[v1.LinkUserDataToTemplateResponse], error)
	// ListUserData List registered userdatas
	ListUserData(context.Context, *connect.Request[v1.ListUserDataRequest]) (*connect.Response[v1.ListUserDataResponse], error)
	// RegisterUserData Register a new userdata.
	RegisterUserData(context.Context, *connect.Request[v1.RegisterUserDataRequest]) (*connect.Response[v1.RegisterUserDataResponse], error)
}

// NewUserdataServiceClient constructs a client for the
// cloudstack.management.userdata.v1.UserdataService service. By default, it uses the Connect
// protocol with the binary Protobuf Codec, asks for gzipped responses, and sends uncompressed
// requests. To use the gRPC or gRPC-Web protocols, supply the connect.WithGRPC() or
// connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewUserdataServiceClient(httpClient connect.HTTPClient, baseURL string, opts ...connect.ClientOption) UserdataServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	userdataServiceMethods := v1.File_cloudstack_management_userdata_v1_userdata_gen_proto.Services().ByName("UserdataService").Methods()
	return &userdataServiceClient{
		deleteUserData: connect.NewClient[v1.DeleteUserDataRequest, v1.DeleteUserDataResponse](
			httpClient,
			baseURL+UserdataServiceDeleteUserDataProcedure,
			connect.WithSchema(userdataServiceMethods.ByName("DeleteUserData")),
			connect.WithClientOptions(opts...),
		),
		linkUserDataToTemplate: connect.NewClient[v1.LinkUserDataToTemplateRequest, v1.LinkUserDataToTemplateResponse](
			httpClient,
			baseURL+UserdataServiceLinkUserDataToTemplateProcedure,
			connect.WithSchema(userdataServiceMethods.ByName("LinkUserDataToTemplate")),
			connect.WithClientOptions(opts...),
		),
		listUserData: connect.NewClient[v1.ListUserDataRequest, v1.ListUserDataResponse](
			httpClient,
			baseURL+UserdataServiceListUserDataProcedure,
			connect.WithSchema(userdataServiceMethods.ByName("ListUserData")),
			connect.WithClientOptions(opts...),
		),
		registerUserData: connect.NewClient[v1.RegisterUserDataRequest, v1.RegisterUserDataResponse](
			httpClient,
			baseURL+UserdataServiceRegisterUserDataProcedure,
			connect.WithSchema(userdataServiceMethods.ByName("RegisterUserData")),
			connect.WithClientOptions(opts...),
		),
	}
}

// userdataServiceClient implements UserdataServiceClient.
type userdataServiceClient struct {
	deleteUserData         *connect.Client[v1.DeleteUserDataRequest, v1.DeleteUserDataResponse]
	linkUserDataToTemplate *connect.Client[v1.LinkUserDataToTemplateRequest, v1.LinkUserDataToTemplateResponse]
	listUserData           *connect.Client[v1.ListUserDataRequest, v1.ListUserDataResponse]
	registerUserData       *connect.Client[v1.RegisterUserDataRequest, v1.RegisterUserDataResponse]
}

// DeleteUserData calls cloudstack.management.userdata.v1.UserdataService.DeleteUserData.
func (c *userdataServiceClient) DeleteUserData(ctx context.Context, req *connect.Request[v1.DeleteUserDataRequest]) (*connect.Response[v1.DeleteUserDataResponse], error) {
	return c.deleteUserData.CallUnary(ctx, req)
}

// LinkUserDataToTemplate calls
// cloudstack.management.userdata.v1.UserdataService.LinkUserDataToTemplate.
func (c *userdataServiceClient) LinkUserDataToTemplate(ctx context.Context, req *connect.Request[v1.LinkUserDataToTemplateRequest]) (*connect.Response[v1.LinkUserDataToTemplateResponse], error) {
	return c.linkUserDataToTemplate.CallUnary(ctx, req)
}

// ListUserData calls cloudstack.management.userdata.v1.UserdataService.ListUserData.
func (c *userdataServiceClient) ListUserData(ctx context.Context, req *connect.Request[v1.ListUserDataRequest]) (*connect.Response[v1.ListUserDataResponse], error) {
	return c.listUserData.CallUnary(ctx, req)
}

// RegisterUserData calls cloudstack.management.userdata.v1.UserdataService.RegisterUserData.
func (c *userdataServiceClient) RegisterUserData(ctx context.Context, req *connect.Request[v1.RegisterUserDataRequest]) (*connect.Response[v1.RegisterUserDataResponse], error) {
	return c.registerUserData.CallUnary(ctx, req)
}

// UserdataServiceHandler is an implementation of the
// cloudstack.management.userdata.v1.UserdataService service.
type UserdataServiceHandler interface {
	// DeleteUserData Deletes a userdata
	DeleteUserData(context.Context, *connect.Request[v1.DeleteUserDataRequest]) (*connect.Response[v1.DeleteUserDataResponse], error)
	// LinkUserDataToTemplate Link or unlink a userdata to a template.
	LinkUserDataToTemplate(context.Context, *connect.Request[v1.LinkUserDataToTemplateRequest]) (*connect.Response[v1.LinkUserDataToTemplateResponse], error)
	// ListUserData List registered userdatas
	ListUserData(context.Context, *connect.Request[v1.ListUserDataRequest]) (*connect.Response[v1.ListUserDataResponse], error)
	// RegisterUserData Register a new userdata.
	RegisterUserData(context.Context, *connect.Request[v1.RegisterUserDataRequest]) (*connect.Response[v1.RegisterUserDataResponse], error)
}

// NewUserdataServiceHandler builds an HTTP handler from the service implementation. It returns the
// path on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewUserdataServiceHandler(svc UserdataServiceHandler, opts ...connect.HandlerOption) (string, http.Handler) {
	userdataServiceMethods := v1.File_cloudstack_management_userdata_v1_userdata_gen_proto.Services().ByName("UserdataService").Methods()
	userdataServiceDeleteUserDataHandler := connect.NewUnaryHandler(
		UserdataServiceDeleteUserDataProcedure,
		svc.DeleteUserData,
		connect.WithSchema(userdataServiceMethods.ByName("DeleteUserData")),
		connect.WithHandlerOptions(opts...),
	)
	userdataServiceLinkUserDataToTemplateHandler := connect.NewUnaryHandler(
		UserdataServiceLinkUserDataToTemplateProcedure,
		svc.LinkUserDataToTemplate,
		connect.WithSchema(userdataServiceMethods.ByName("LinkUserDataToTemplate")),
		connect.WithHandlerOptions(opts...),
	)
	userdataServiceListUserDataHandler := connect.NewUnaryHandler(
		UserdataServiceListUserDataProcedure,
		svc.ListUserData,
		connect.WithSchema(userdataServiceMethods.ByName("ListUserData")),
		connect.WithHandlerOptions(opts...),
	)
	userdataServiceRegisterUserDataHandler := connect.NewUnaryHandler(
		UserdataServiceRegisterUserDataProcedure,
		svc.RegisterUserData,
		connect.WithSchema(userdataServiceMethods.ByName("RegisterUserData")),
		connect.WithHandlerOptions(opts...),
	)
	return "/cloudstack.management.userdata.v1.UserdataService/", http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		switch r.URL.Path {
		case UserdataServiceDeleteUserDataProcedure:
			userdataServiceDeleteUserDataHandler.ServeHTTP(w, r)
		case UserdataServiceLinkUserDataToTemplateProcedure:
			userdataServiceLinkUserDataToTemplateHandler.ServeHTTP(w, r)
		case UserdataServiceListUserDataProcedure:
			userdataServiceListUserDataHandler.ServeHTTP(w, r)
		case UserdataServiceRegisterUserDataProcedure:
			userdataServiceRegisterUserDataHandler.ServeHTTP(w, r)
		default:
			http.NotFound(w, r)
		}
	})
}

// UnimplementedUserdataServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedUserdataServiceHandler struct{}

func (UnimplementedUserdataServiceHandler) DeleteUserData(context.Context, *connect.Request[v1.DeleteUserDataRequest]) (*connect.Response[v1.DeleteUserDataResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("cloudstack.management.userdata.v1.UserdataService.DeleteUserData is not implemented"))
}

func (UnimplementedUserdataServiceHandler) LinkUserDataToTemplate(context.Context, *connect.Request[v1.LinkUserDataToTemplateRequest]) (*connect.Response[v1.LinkUserDataToTemplateResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("cloudstack.management.userdata.v1.UserdataService.LinkUserDataToTemplate is not implemented"))
}

func (UnimplementedUserdataServiceHandler) ListUserData(context.Context, *connect.Request[v1.ListUserDataRequest]) (*connect.Response[v1.ListUserDataResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("cloudstack.management.userdata.v1.UserdataService.ListUserData is not implemented"))
}

func (UnimplementedUserdataServiceHandler) RegisterUserData(context.Context, *connect.Request[v1.RegisterUserDataRequest]) (*connect.Response[v1.RegisterUserDataResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("cloudstack.management.userdata.v1.UserdataService.RegisterUserData is not implemented"))
}
