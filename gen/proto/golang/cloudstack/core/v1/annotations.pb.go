// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: cloudstack/core/v1/annotations.proto

package corev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Enum_CustomStringType int32

const (
	Enum_CUSTOM_STRING_TYPE_UNSPECIFIED   Enum_CustomStringType = 0
	Enum_CUSTOM_STRING_TYPE_DATE_TIME     Enum_CustomStringType = 1
	Enum_CUSTOM_STRING_TYPE_UUID          Enum_CustomStringType = 2
	Enum_CUSTOM_STRING_TYPE_CIDR_BLOCK    Enum_CustomStringType = 3
	Enum_CUSTOM_STRING_TYPE_MAC_ADDRESS   Enum_CustomStringType = 4
	Enum_CUSTOM_STRING_TYPE_EMAIL_ADDRESS Enum_CustomStringType = 5
	Enum_CUSTOM_STRING_TYPE_URL           Enum_CustomStringType = 6
	Enum_CUSTOM_STRING_TYPE_IP_V4_ADDRESS Enum_CustomStringType = 7
	Enum_CUSTOM_STRING_TYPE_IP_V6_ADDRESS Enum_CustomStringType = 8
)

// Enum value maps for Enum_CustomStringType.
var (
	Enum_CustomStringType_name = map[int32]string{
		0: "CUSTOM_STRING_TYPE_UNSPECIFIED",
		1: "CUSTOM_STRING_TYPE_DATE_TIME",
		2: "CUSTOM_STRING_TYPE_UUID",
		3: "CUSTOM_STRING_TYPE_CIDR_BLOCK",
		4: "CUSTOM_STRING_TYPE_MAC_ADDRESS",
		5: "CUSTOM_STRING_TYPE_EMAIL_ADDRESS",
		6: "CUSTOM_STRING_TYPE_URL",
		7: "CUSTOM_STRING_TYPE_IP_V4_ADDRESS",
		8: "CUSTOM_STRING_TYPE_IP_V6_ADDRESS",
	}
	Enum_CustomStringType_value = map[string]int32{
		"CUSTOM_STRING_TYPE_UNSPECIFIED":   0,
		"CUSTOM_STRING_TYPE_DATE_TIME":     1,
		"CUSTOM_STRING_TYPE_UUID":          2,
		"CUSTOM_STRING_TYPE_CIDR_BLOCK":    3,
		"CUSTOM_STRING_TYPE_MAC_ADDRESS":   4,
		"CUSTOM_STRING_TYPE_EMAIL_ADDRESS": 5,
		"CUSTOM_STRING_TYPE_URL":           6,
		"CUSTOM_STRING_TYPE_IP_V4_ADDRESS": 7,
		"CUSTOM_STRING_TYPE_IP_V6_ADDRESS": 8,
	}
)

func (x Enum_CustomStringType) Enum() *Enum_CustomStringType {
	p := new(Enum_CustomStringType)
	*p = x
	return p
}

func (x Enum_CustomStringType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Enum_CustomStringType) Descriptor() protoreflect.EnumDescriptor {
	return file_cloudstack_core_v1_annotations_proto_enumTypes[0].Descriptor()
}

func (Enum_CustomStringType) Type() protoreflect.EnumType {
	return &file_cloudstack_core_v1_annotations_proto_enumTypes[0]
}

func (x Enum_CustomStringType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Enum_CustomStringType.Descriptor instead.
func (Enum_CustomStringType) EnumDescriptor() ([]byte, []int) {
	return file_cloudstack_core_v1_annotations_proto_rawDescGZIP(), []int{0, 0}
}

type Enum_IDType int32

const (
	Enum_ID_TYPE_UNSPECIFIED  Enum_IDType = 0
	Enum_ID_TYPE_ZONE         Enum_IDType = 1
	Enum_ID_TYPE_VPC          Enum_IDType = 2
	Enum_ID_TYPE_VPC_OFFERING Enum_IDType = 3
	Enum_ID_TYPE_VM           Enum_IDType = 4
	Enum_ID_TYPE_VOLUME       Enum_IDType = 5
	Enum_ID_TYPE_SNAPSHOT     Enum_IDType = 6
	Enum_ID_TYPE_TEMPLATE     Enum_IDType = 7
	Enum_ID_TYPE_ISO          Enum_IDType = 8
)

// Enum value maps for Enum_IDType.
var (
	Enum_IDType_name = map[int32]string{
		0: "ID_TYPE_UNSPECIFIED",
		1: "ID_TYPE_ZONE",
		2: "ID_TYPE_VPC",
		3: "ID_TYPE_VPC_OFFERING",
		4: "ID_TYPE_VM",
		5: "ID_TYPE_VOLUME",
		6: "ID_TYPE_SNAPSHOT",
		7: "ID_TYPE_TEMPLATE",
		8: "ID_TYPE_ISO",
	}
	Enum_IDType_value = map[string]int32{
		"ID_TYPE_UNSPECIFIED":  0,
		"ID_TYPE_ZONE":         1,
		"ID_TYPE_VPC":          2,
		"ID_TYPE_VPC_OFFERING": 3,
		"ID_TYPE_VM":           4,
		"ID_TYPE_VOLUME":       5,
		"ID_TYPE_SNAPSHOT":     6,
		"ID_TYPE_TEMPLATE":     7,
		"ID_TYPE_ISO":          8,
	}
)

func (x Enum_IDType) Enum() *Enum_IDType {
	p := new(Enum_IDType)
	*p = x
	return p
}

func (x Enum_IDType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Enum_IDType) Descriptor() protoreflect.EnumDescriptor {
	return file_cloudstack_core_v1_annotations_proto_enumTypes[1].Descriptor()
}

func (Enum_IDType) Type() protoreflect.EnumType {
	return &file_cloudstack_core_v1_annotations_proto_enumTypes[1]
}

func (x Enum_IDType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Enum_IDType.Descriptor instead.
func (Enum_IDType) EnumDescriptor() ([]byte, []int) {
	return file_cloudstack_core_v1_annotations_proto_rawDescGZIP(), []int{0, 1}
}

type Enum struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Enum) Reset() {
	*x = Enum{}
	mi := &file_cloudstack_core_v1_annotations_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Enum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Enum) ProtoMessage() {}

func (x *Enum) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstack_core_v1_annotations_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Enum.ProtoReflect.Descriptor instead.
func (*Enum) Descriptor() ([]byte, []int) {
	return file_cloudstack_core_v1_annotations_proto_rawDescGZIP(), []int{0}
}

var file_cloudstack_core_v1_annotations_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*Enum_CustomStringType)(nil),
		Field:         1000,
		Name:          "cloudstack.core.v1.str_type",
		Tag:           "varint,1000,opt,name=str_type,enum=cloudstack.core.v1.Enum_CustomStringType",
		Filename:      "cloudstack/core/v1/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*anypb.Any)(nil),
		Field:         1001,
		Name:          "cloudstack.core.v1.default",
		Tag:           "bytes,1001,opt,name=default",
		Filename:      "cloudstack/core/v1/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*Enum_IDType)(nil),
		Field:         1002,
		Name:          "cloudstack.core.v1.id_type",
		Tag:           "varint,1002,opt,name=id_type,enum=cloudstack.core.v1.Enum_IDType",
		Filename:      "cloudstack/core/v1/annotations.proto",
	},
}

// Extension fields to descriptorpb.FieldOptions.
var (
	// optional cloudstack.core.v1.Enum.CustomStringType str_type = 1000;
	E_StrType = &file_cloudstack_core_v1_annotations_proto_extTypes[0]
	// optional google.protobuf.Any default = 1001;
	E_Default = &file_cloudstack_core_v1_annotations_proto_extTypes[1]
	// optional cloudstack.core.v1.Enum.IDType id_type = 1002;
	E_IdType = &file_cloudstack_core_v1_annotations_proto_extTypes[2]
)

var File_cloudstack_core_v1_annotations_proto protoreflect.FileDescriptor

var file_cloudstack_core_v1_annotations_proto_rawDesc = string([]byte{
	0x0a, 0x24, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2f, 0x63, 0x6f, 0x72,
	0x65, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x73, 0x74, 0x61,
	0x63, 0x6b, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x95, 0x04, 0x0a, 0x04, 0x45, 0x6e, 0x75, 0x6d,
	0x22, 0xca, 0x02, 0x0a, 0x10, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x1e, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x5f,
	0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x20, 0x0a, 0x1c, 0x43, 0x55, 0x53,
	0x54, 0x4f, 0x4d, 0x5f, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x44, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x43,
	0x55, 0x53, 0x54, 0x4f, 0x4d, 0x5f, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x55, 0x55, 0x49, 0x44, 0x10, 0x02, 0x12, 0x21, 0x0a, 0x1d, 0x43, 0x55, 0x53, 0x54,
	0x4f, 0x4d, 0x5f, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43,
	0x49, 0x44, 0x52, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0x03, 0x12, 0x22, 0x0a, 0x1e, 0x43,
	0x55, 0x53, 0x54, 0x4f, 0x4d, 0x5f, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x4d, 0x41, 0x43, 0x5f, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53, 0x53, 0x10, 0x04, 0x12,
	0x24, 0x0a, 0x20, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x5f, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x41, 0x44, 0x44, 0x52,
	0x45, 0x53, 0x53, 0x10, 0x05, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x5f,
	0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x52, 0x4c, 0x10,
	0x06, 0x12, 0x24, 0x0a, 0x20, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x5f, 0x53, 0x54, 0x52, 0x49,
	0x4e, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x50, 0x5f, 0x56, 0x34, 0x5f, 0x41, 0x44,
	0x44, 0x52, 0x45, 0x53, 0x53, 0x10, 0x07, 0x12, 0x24, 0x0a, 0x20, 0x43, 0x55, 0x53, 0x54, 0x4f,
	0x4d, 0x5f, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x50,
	0x5f, 0x56, 0x36, 0x5f, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53, 0x53, 0x10, 0x08, 0x22, 0xbf, 0x01,
	0x0a, 0x06, 0x49, 0x44, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x49, 0x44, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x10, 0x0a, 0x0c, 0x49, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x5a, 0x4f, 0x4e,
	0x45, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x56,
	0x50, 0x43, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x49, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x56, 0x50, 0x43, 0x5f, 0x4f, 0x46, 0x46, 0x45, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x0e,
	0x0a, 0x0a, 0x49, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x56, 0x4d, 0x10, 0x04, 0x12, 0x12,
	0x0a, 0x0e, 0x49, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x56, 0x4f, 0x4c, 0x55, 0x4d, 0x45,
	0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x49, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x4e,
	0x41, 0x50, 0x53, 0x48, 0x4f, 0x54, 0x10, 0x06, 0x12, 0x14, 0x0a, 0x10, 0x49, 0x44, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x54, 0x45, 0x4d, 0x50, 0x4c, 0x41, 0x54, 0x45, 0x10, 0x07, 0x12, 0x0f,
	0x0a, 0x0b, 0x49, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x53, 0x4f, 0x10, 0x08, 0x3a,
	0x64, 0x0a, 0x08, 0x73, 0x74, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xe8, 0x07, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x29, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x73, 0x74,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x4e, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0xe9, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x07, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x3a, 0x58, 0x0a, 0x07, 0x69, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0xea, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x73, 0x74,
	0x61, 0x63, 0x6b, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x75, 0x6d,
	0x2e, 0x49, 0x44, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x69, 0x64, 0x54, 0x79, 0x70, 0x65, 0x42,
	0xe3, 0x01, 0x0a, 0x16, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x73, 0x74, 0x61,
	0x63, 0x6b, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x42, 0x10, 0x41, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x4d,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x61, 0x6c, 0x74, 0x65,
	0x68, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2d, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6c,
	0x61, 0x6e, 0x67, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2f, 0x63,
	0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x63, 0x6f, 0x72, 0x65, 0x76, 0x31, 0xa2, 0x02, 0x03,
	0x43, 0x43, 0x58, 0xaa, 0x02, 0x12, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x73, 0x74, 0x61, 0x63, 0x6b,
	0x2e, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x12, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x73, 0x74, 0x61, 0x63, 0x6b, 0x5c, 0x43, 0x6f, 0x72, 0x65, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1e,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x5c, 0x43, 0x6f, 0x72, 0x65, 0x5c,
	0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02,
	0x14, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x3a, 0x3a, 0x43, 0x6f, 0x72,
	0x65, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_cloudstack_core_v1_annotations_proto_rawDescOnce sync.Once
	file_cloudstack_core_v1_annotations_proto_rawDescData []byte
)

func file_cloudstack_core_v1_annotations_proto_rawDescGZIP() []byte {
	file_cloudstack_core_v1_annotations_proto_rawDescOnce.Do(func() {
		file_cloudstack_core_v1_annotations_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_cloudstack_core_v1_annotations_proto_rawDesc), len(file_cloudstack_core_v1_annotations_proto_rawDesc)))
	})
	return file_cloudstack_core_v1_annotations_proto_rawDescData
}

var file_cloudstack_core_v1_annotations_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_cloudstack_core_v1_annotations_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_cloudstack_core_v1_annotations_proto_goTypes = []any{
	(Enum_CustomStringType)(0),        // 0: cloudstack.core.v1.Enum.CustomStringType
	(Enum_IDType)(0),                  // 1: cloudstack.core.v1.Enum.IDType
	(*Enum)(nil),                      // 2: cloudstack.core.v1.Enum
	(*descriptorpb.FieldOptions)(nil), // 3: google.protobuf.FieldOptions
	(*anypb.Any)(nil),                 // 4: google.protobuf.Any
}
var file_cloudstack_core_v1_annotations_proto_depIdxs = []int32{
	3, // 0: cloudstack.core.v1.str_type:extendee -> google.protobuf.FieldOptions
	3, // 1: cloudstack.core.v1.default:extendee -> google.protobuf.FieldOptions
	3, // 2: cloudstack.core.v1.id_type:extendee -> google.protobuf.FieldOptions
	0, // 3: cloudstack.core.v1.str_type:type_name -> cloudstack.core.v1.Enum.CustomStringType
	4, // 4: cloudstack.core.v1.default:type_name -> google.protobuf.Any
	1, // 5: cloudstack.core.v1.id_type:type_name -> cloudstack.core.v1.Enum.IDType
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	3, // [3:6] is the sub-list for extension type_name
	0, // [0:3] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_cloudstack_core_v1_annotations_proto_init() }
func file_cloudstack_core_v1_annotations_proto_init() {
	if File_cloudstack_core_v1_annotations_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_cloudstack_core_v1_annotations_proto_rawDesc), len(file_cloudstack_core_v1_annotations_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   1,
			NumExtensions: 3,
			NumServices:   0,
		},
		GoTypes:           file_cloudstack_core_v1_annotations_proto_goTypes,
		DependencyIndexes: file_cloudstack_core_v1_annotations_proto_depIdxs,
		EnumInfos:         file_cloudstack_core_v1_annotations_proto_enumTypes,
		MessageInfos:      file_cloudstack_core_v1_annotations_proto_msgTypes,
		ExtensionInfos:    file_cloudstack_core_v1_annotations_proto_extTypes,
	}.Build()
	File_cloudstack_core_v1_annotations_proto = out.File
	file_cloudstack_core_v1_annotations_proto_goTypes = nil
	file_cloudstack_core_v1_annotations_proto_depIdxs = nil
}
